{"ast":null,"code":"import _get from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createForOfIteratorHelper from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _inherits from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _createClass from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36;\nimport { __decorate, __param } from 'tslib';\nimport { ɵɵdefineInjectable, Injectable, TemplateRef, Directive, Input, ContentChildren, EventEmitter, Output, Component, ViewEncapsulation, Optional, Host, NgModule, Renderer2, ElementRef, ChangeDetectionStrategy, forwardRef, ChangeDetectorRef, Inject, PLATFORM_ID, NgZone, HostListener, ɵɵinject, LOCALE_ID, ViewChild, ContentChild, ViewContainerRef, ComponentFactoryResolver, Injector, ApplicationRef, RendererFactory2, INJECTOR, Attribute, InjectionToken } from '@angular/core';\nimport { CommonModule, isPlatformBrowser, getLocaleDayNames, FormStyle, TranslationWidth, getLocaleMonthNames, formatDate, DOCUMENT, getLocaleDayPeriods } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport { Subject, BehaviorSubject, combineLatest, timer, NEVER, fromEvent, merge, race, Observable } from 'rxjs';\nimport { map, startWith, distinctUntilChanged, switchMap, takeUntil, filter, take, tap, withLatestFrom, delay, share } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\nfunction NgbAccordion_ng_template_0_ng_template_2_Template(rf, ctx) {}\nfunction NgbAccordion_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var panel_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngbPanelToggle\", panel_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", panel_r3.title, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", panel_r3.titleTpl == null ? null : panel_r3.titleTpl.templateRef);\n  }\n}\nfunction NgbAccordion_ng_template_2_ng_template_2_Template(rf, ctx) {}\nfunction NgbAccordion_ng_template_2_div_3_ng_template_2_Template(rf, ctx) {}\nfunction NgbAccordion_ng_template_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_div_3_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var panel_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵclassProp(\"show\", panel_r5.isOpen);\n    ɵngcc0.ɵɵpropertyInterpolate(\"id\", panel_r5.id);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", panel_r5.id + \"-header\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", panel_r5.contentTpl == null ? null : panel_r5.contentTpl.templateRef);\n  }\n}\nvar _c0 = function _c0(a0, a1) {\n  return {\n    $implicit: a0,\n    opened: a1\n  };\n};\nfunction NgbAccordion_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbAccordion_ng_template_2_div_3_Template, 3, 5, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var panel_r5 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵclassMap(\"card \" + (panel_r5.cardClass || \"\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"card-header \" + (panel_r5.type ? \"bg-\" + panel_r5.type : ctx_r2.type ? \"bg-\" + ctx_r2.type : \"\"));\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"\", panel_r5.id, \"-header\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.headerTpl == null ? null : panel_r5.headerTpl.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(8, _c0, panel_r5, panel_r5.isOpen));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.destroyOnHide || panel_r5.isOpen);\n  }\n}\nfunction NgbAlert_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbAlert_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.closeHandler();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 2);\n    ɵngcc0.ɵɵtext(2, \"\\xD7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nvar _c5 = [\"*\"];\nfunction NgbCarousel_ol_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_ol_0_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var slide_r5 = ctx.$implicit;\n      var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.select(slide_r5.id, ctx_r6.NgbSlideEventSource.INDICATOR);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var slide_r5 = ctx.$implicit;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r5.id === ctx_r4.activeId);\n    ɵngcc0.ɵɵproperty(\"id\", slide_r5.id);\n  }\n}\nfunction NgbCarousel_ol_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 5);\n    ɵngcc0.ɵɵtemplate(1, NgbCarousel_ol_0_li_1_Template, 1, 3, \"li\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.slides);\n  }\n}\nfunction NgbCarousel_div_2_ng_template_1_Template(rf, ctx) {}\nfunction NgbCarousel_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbCarousel_div_2_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var slide_r8 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r8.id === ctx_r1.activeId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", slide_r8.tplRef);\n  }\n}\nfunction NgbCarousel_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_3_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.prev(ctx_r10.NgbSlideEventSource.ARROW_LEFT);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 11);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵi18n(3, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgbCarousel_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 14);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_4_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.next(ctx_r12.NgbSlideEventSource.ARROW_RIGHT);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵi18n(3, 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nvar _c10 = [\"defaultDayTemplate\"];\nvar _c11 = [\"content\"];\nfunction NgbDatepicker_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    var date_r8 = ctx.date;\n    var currentMonth_r9 = ctx.currentMonth;\n    var selected_r10 = ctx.selected;\n    var disabled_r11 = ctx.disabled;\n    var focused_r12 = ctx.focused;\n    ɵngcc0.ɵɵproperty(\"date\", date_r8)(\"currentMonth\", currentMonth_r9)(\"selected\", selected_r10)(\"disabled\", disabled_r11)(\"focused\", focused_r12);\n  }\n}\nfunction NgbDatepicker_ng_template_2_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var month_r14 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r16.i18n.getMonthFullName(month_r14.number, month_r14.year), \" \", ctx_r16.i18n.getYearNumerals(month_r14.year), \" \");\n  }\n}\nfunction NgbDatepicker_ng_template_2_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepicker_ng_template_2_div_0_div_1_Template, 2, 2, \"div\", 10);\n    ɵngcc0.ɵɵelement(2, \"ngb-datepicker-month\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var month_r14 = ctx.$implicit;\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.navigation === \"none\" || ctx_r13.displayMonths > 1 && ctx_r13.navigation === \"select\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"month\", month_r14.firstDate);\n  }\n}\nfunction NgbDatepicker_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepicker_ng_template_2_div_0_Template, 3, 2, \"div\", 8);\n  }\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.model.months);\n  }\n}\nfunction NgbDatepicker_ngb_datepicker_navigation_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation\", 13);\n    ɵngcc0.ɵɵlistener(\"navigate\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_navigate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.onNavigateEvent($event);\n    })(\"select\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.onNavigateDateSelect($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r4.model.firstDate)(\"months\", ctx_r4.model.months)(\"disabled\", ctx_r4.model.disabled)(\"showSelect\", ctx_r4.model.navigation === \"select\")(\"prevDisabled\", ctx_r4.model.prevDisabled)(\"nextDisabled\", ctx_r4.model.nextDisabled)(\"selectBoxes\", ctx_r4.model.selectBoxes);\n  }\n}\nfunction NgbDatepicker_ng_template_8_Template(rf, ctx) {}\nfunction NgbDatepicker_ng_template_9_Template(rf, ctx) {}\nfunction NgbDatepickerMonth_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n}\nfunction NgbDatepickerMonth_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var w_r4 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.i18n.getWeekdayShortName(w_r4), \" \");\n  }\n}\nfunction NgbDatepickerMonth_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_div_0_div_1_Template, 1, 0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonth_div_0_div_2_Template, 2, 1, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.datepicker.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.viewModel.weekdays);\n  }\n}\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var week_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.i18n.getWeekNumerals(week_r5.number));\n  }\n}\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template(rf, ctx) {}\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n  }\n  if (rf & 2) {\n    var day_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.datepicker.dayTemplate)(\"ngTemplateOutletContext\", day_r10.context);\n  }\n}\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerMonth_ng_template_1_div_0_div_2_Template_div_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var day_r10 = ctx.$implicit;\n      var ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n      ctx_r14.doSelect(day_r10);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template, 1, 2, \"ng-template\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var day_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"disabled\", day_r10.context.disabled)(\"hidden\", day_r10.hidden)(\"ngb-dp-today\", day_r10.context.today);\n    ɵngcc0.ɵɵproperty(\"tabindex\", day_r10.tabindex);\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r10.ariaLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !day_r10.hidden);\n  }\n}\nfunction NgbDatepickerMonth_ng_template_1_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_1_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonth_ng_template_1_div_0_div_2_Template, 2, 9, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var week_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.datepicker.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", week_r5.days);\n  }\n}\nfunction NgbDatepickerMonth_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_Template, 3, 2, \"div\", 7);\n  }\n  if (rf & 2) {\n    var week_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", !week_r5.collapsed);\n  }\n}\nfunction NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation-select\", 7);\n    ɵngcc0.ɵɵlistener(\"select\", function NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template_ngb_datepicker_navigation_select_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.select.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r0.date)(\"disabled\", ctx_r0.disabled)(\"months\", ctx_r0.selectBoxes.months)(\"years\", ctx_r0.selectBoxes.years);\n  }\n}\nfunction NgbDatepickerNavigation_4_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n  }\n}\nfunction NgbDatepickerNavigation_4_ng_template_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n  }\n}\nfunction NgbDatepickerNavigation_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_div_0_Template, 1, 0, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 10);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbDatepickerNavigation_4_ng_template_0_div_3_Template, 1, 0, \"div\", 9);\n  }\n  if (rf & 2) {\n    var month_r5 = ctx.$implicit;\n    var i_r6 = ctx.index;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 > 0);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r4.i18n.getMonthFullName(month_r5.number, month_r5.year), \" \", ctx_r4.i18n.getYearNumerals(month_r5.year), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 !== ctx_r4.months.length - 1);\n  }\n}\nfunction NgbDatepickerNavigation_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_Template, 4, 4, \"ng-template\", 8);\n  }\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.months);\n  }\n}\nvar _c20 = [\"ngbDatepickerDayView\", \"\"];\nvar _c21 = [\"month\"];\nvar _c22 = [\"year\"];\nfunction NgbDatepickerNavigationSelect_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var m_r4 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", m_r4);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.i18n.getMonthFullName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.i18n.getMonthShortName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n  }\n}\nfunction NgbDatepickerNavigationSelect_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var y_r5 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", y_r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.i18n.getYearNumerals(y_r5));\n  }\n}\nvar _c31 = [\"dialog\"];\nvar _c32 = [\"ngbNavOutlet\", \"\"];\nfunction NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template(rf, ctx) {}\nvar _c33 = function _c33(a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction NgbNavOutlet_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", item_r1.active);\n    ɵngcc0.ɵɵproperty(\"id\", item_r1.panelDomId);\n    ɵngcc0.ɵɵattribute(\"role\", ctx_r2.paneRole ? ctx_r2.paneRole : ctx_r2.nav.roles ? \"tabpanel\" : undefined)(\"aria-labelledby\", item_r1.domId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", item_r1.contentTpl == null ? null : item_r1.contentTpl.templateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(7, _c33, item_r1.active));\n  }\n}\nfunction NgbNavOutlet_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_div_0_Template, 2, 9, \"div\", 1);\n  }\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r1.isPanelInDom());\n  }\n}\nfunction NgbPagination_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgbPagination_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgbPagination_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgbPagination_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgbPagination_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0, \"...\");\n  }\n}\nfunction NgbPagination_ng_template_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 14);\n    ɵngcc0.ɵɵtext(1, \"(current)\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgbPagination_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_ng_template_10_span_1_Template, 2, 0, \"span\", 13);\n  }\n  if (rf & 2) {\n    var page_r17 = ctx.$implicit;\n    var currentPage_r18 = ctx.currentPage;\n    ɵngcc0.ɵɵtextInterpolate1(\" \", page_r17, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", page_r17 === currentPage_r18);\n  }\n}\nfunction NgbPagination_li_13_ng_template_2_Template(rf, ctx) {}\nvar _c44 = function _c44(a0, a1) {\n  return {\n    disabled: a0,\n    currentPage: a1\n  };\n};\nfunction NgbPagination_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 16);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_13_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var ctx_r21 = ɵngcc0.ɵɵnextContext();\n      ctx_r21.selectPage(1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_13_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r12 = ɵngcc0.ɵɵnextContext();\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r12.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r12.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r12.previousDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r12.tplFirst == null ? null : ctx_r12.tplFirst.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c44, ctx_r12.previousDisabled(), ctx_r12.page));\n  }\n}\nfunction NgbPagination_li_14_ng_template_2_Template(rf, ctx) {}\nvar _c47 = function _c47(a0) {\n  return {\n    disabled: a0\n  };\n};\nfunction NgbPagination_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_14_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      ctx_r24.selectPage(ctx_r24.page - 1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_14_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext();\n    var _r2 = ɵngcc0.ɵɵreference(3);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r13.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r13.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r13.previousDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r13.tplPrevious == null ? null : ctx_r13.tplPrevious.templateRef) || _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(6, _c47, ctx_r13.previousDisabled()));\n  }\n}\nfunction NgbPagination_li_15_a_1_ng_template_1_Template(rf, ctx) {}\nvar _c48 = function _c48(a1) {\n  return {\n    disabled: true,\n    currentPage: a1\n  };\n};\nfunction NgbPagination_li_15_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 21);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_1_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n    var _r8 = ɵngcc0.ɵɵreference(9);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r27.tplEllipsis == null ? null : ctx_r27.tplEllipsis.templateRef) || _r8)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c48, ctx_r27.page));\n  }\n}\nfunction NgbPagination_li_15_a_2_ng_template_1_Template(rf, ctx) {}\nvar _c49 = function _c49(a0, a1, a2) {\n  return {\n    disabled: a0,\n    $implicit: a1,\n    currentPage: a2\n  };\n};\nfunction NgbPagination_li_15_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r33 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 22);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_15_a_2_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      var pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r31 = ɵngcc0.ɵɵnextContext();\n      ctx_r31.selectPage(pageNumber_r26);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_2_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r28 = ɵngcc0.ɵɵnextContext();\n    var _r10 = ɵngcc0.ɵɵreference(11);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r28.disabled ? \"-1\" : null)(\"aria-disabled\", ctx_r28.disabled ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r28.tplNumber == null ? null : ctx_r28.tplNumber.templateRef) || _r10)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(4, _c49, ctx_r28.disabled, pageNumber_r26, ctx_r28.page));\n  }\n}\nfunction NgbPagination_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_1_Template, 2, 4, \"a\", 19);\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_15_a_2_Template, 2, 8, \"a\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var pageNumber_r26 = ctx.$implicit;\n    var ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", pageNumber_r26 === ctx_r14.page)(\"disabled\", ctx_r14.isEllipsis(pageNumber_r26) || ctx_r14.disabled);\n    ɵngcc0.ɵɵattribute(\"aria-current\", pageNumber_r26 === ctx_r14.page ? \"page\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.isEllipsis(pageNumber_r26));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r14.isEllipsis(pageNumber_r26));\n  }\n}\nfunction NgbPagination_li_16_ng_template_2_Template(rf, ctx) {}\nfunction NgbPagination_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r37 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_16_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r37);\n      var ctx_r36 = ɵngcc0.ɵɵnextContext();\n      ctx_r36.selectPage(ctx_r36.page + 1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_16_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r15 = ɵngcc0.ɵɵnextContext();\n    var _r4 = ɵngcc0.ɵɵreference(5);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r15.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r15.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r15.nextDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r15.tplNext == null ? null : ctx_r15.tplNext.templateRef) || _r4)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c44, ctx_r15.nextDisabled(), ctx_r15.page));\n  }\n}\nfunction NgbPagination_li_17_ng_template_2_Template(rf, ctx) {}\nfunction NgbPagination_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r40 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_17_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r40);\n      var ctx_r39 = ɵngcc0.ɵɵnextContext();\n      ctx_r39.selectPage(ctx_r39.pageCount);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_17_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext();\n    var _r6 = ɵngcc0.ɵɵreference(7);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r16.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r16.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r16.nextDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r16.tplLast == null ? null : ctx_r16.tplLast.templateRef) || _r6)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c44, ctx_r16.nextDisabled(), ctx_r16.page));\n  }\n}\nfunction NgbPopoverWindow_h3_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\nfunction NgbPopoverWindow_h3_1_ng_template_3_Template(rf, ctx) {}\nfunction NgbPopoverWindow_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h3\", 3);\n    ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgbPopoverWindow_h3_1_ng_template_3_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var _r1 = ɵngcc0.ɵɵreference(2);\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.isTitleTemplate() ? ctx_r0.title : _r1)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\nfunction NgbProgressbar_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵi18n(1, 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵi18nExp(ctx_r0.getPercentValue());\n    ɵngcc0.ɵɵi18nApply(1);\n  }\n}\nfunction NgbRating_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    var fill_r3 = ctx.fill;\n    ɵngcc0.ɵɵtextInterpolate(fill_r3 === 100 ? \"\\u2605\" : \"\\u2606\");\n  }\n}\nfunction NgbRating_ng_template_2_ng_template_3_Template(rf, ctx) {}\nfunction NgbRating_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"span\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbRating_ng_template_2_Template_span_mouseenter_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var index_r4 = ctx.index;\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.enter(index_r4 + 1);\n    })(\"click\", function NgbRating_ng_template_2_Template_span_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var index_r4 = ctx.index;\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.handleClick(index_r4 + 1);\n    });\n    ɵngcc0.ɵɵtemplate(3, NgbRating_ng_template_2_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var index_r4 = ctx.index;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", index_r4 < ctx_r2.nextRate ? \"*\" : \" \", \")\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"cursor\", ctx_r2.readonly || ctx_r2.disabled ? \"default\" : \"pointer\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.starTemplate || ctx_r2.starTemplateFromContent || _r0)(\"ngTemplateOutletContext\", ctx_r2.contexts[index_r4]);\n  }\n}\nfunction NgbTabset_li_1_ng_template_3_Template(rf, ctx) {}\nfunction NgbTabset_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTabset_li_1_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var tab_r2 = ctx.$implicit;\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      ctx_r4.select(tab_r2.id);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵtemplate(3, NgbTabset_li_1_ng_template_3_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tab_r2 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"active\", tab_r2.id === ctx_r0.activeId)(\"disabled\", tab_r2.disabled);\n    ɵngcc0.ɵɵproperty(\"id\", tab_r2.id);\n    ɵngcc0.ɵɵattribute(\"tabindex\", tab_r2.disabled ? \"-1\" : undefined)(\"aria-controls\", !ctx_r0.destroyOnHide || tab_r2.id === ctx_r0.activeId ? tab_r2.id + \"-panel\" : null)(\"aria-selected\", tab_r2.id === ctx_r0.activeId)(\"aria-disabled\", tab_r2.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", tab_r2.title, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", tab_r2.titleTpl == null ? null : tab_r2.titleTpl.templateRef);\n  }\n}\nfunction NgbTabset_ng_template_3_div_0_ng_template_1_Template(rf, ctx) {}\nfunction NgbTabset_ng_template_3_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbTabset_ng_template_3_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var tab_r6 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"tab-pane \", tab_r6.id === ctx_r7.activeId ? \"active\" : null, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"\", tab_r6.id, \"-panel\");\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", tab_r6.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", tab_r6.contentTpl == null ? null : tab_r6.contentTpl.templateRef);\n  }\n}\nfunction NgbTabset_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbTabset_ng_template_3_div_0_Template, 2, 6, \"div\", 7);\n  }\n  if (rf & 2) {\n    var tab_r6 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.destroyOnHide || tab_r6.id === ctx_r1.activeId);\n  }\n}\nfunction NgbTimepicker_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.changeHour(ctx_r8.hourStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r0.isSmallSize)(\"btn-lg\", ctx_r0.isLargeSize)(\"disabled\", ctx_r0.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\nfunction NgbTimepicker_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_5_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.changeHour(-ctx_r10.hourStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction NgbTimepicker_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_9_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.changeMinute(ctx_r12.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r2.isSmallSize)(\"btn-lg\", ctx_r2.isLargeSize)(\"disabled\", ctx_r2.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n  }\n}\nfunction NgbTimepicker_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_11_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.changeMinute(-ctx_r14.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r3.isSmallSize)(\"btn-lg\", ctx_r3.isLargeSize)(\"disabled\", ctx_r3.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r3.disabled);\n  }\n}\nfunction NgbTimepicker_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtext(1, \":\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction NgbTimepicker_div_13_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r18.changeSecond(ctx_r18.secondStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r16.isSmallSize)(\"btn-lg\", ctx_r16.isLargeSize)(\"disabled\", ctx_r16.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r16.disabled);\n  }\n}\nfunction NgbTimepicker_div_13_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r20.changeSecond(-ctx_r20.secondStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r17.isSmallSize)(\"btn-lg\", ctx_r17.isLargeSize)(\"disabled\", ctx_r17.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r17.disabled);\n  }\n}\nfunction NgbTimepicker_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(1, NgbTimepicker_div_13_button_1_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 20);\n    ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_div_13_Template_input_change_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext();\n      return ctx_r22.updateSecond($event.target.value);\n    })(\"input\", function NgbTimepicker_div_13_Template_input_input_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.formatInput($event.target);\n    })(\"keydown.ArrowUp\", function NgbTimepicker_div_13_Template_input_keydown_ArrowUp_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext();\n      ctx_r25.changeSecond(ctx_r25.secondStep);\n      return $event.preventDefault();\n    })(\"keydown.ArrowDown\", function NgbTimepicker_div_13_Template_input_keydown_ArrowDown_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r26 = ɵngcc0.ɵɵnextContext();\n      ctx_r26.changeSecond(-ctx_r26.secondStep);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbTimepicker_div_13_button_3_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r5.isSmallSize)(\"form-control-lg\", ctx_r5.isLargeSize);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r5.formatMinSec(ctx_r5.model == null ? null : ctx_r5.model.second))(\"readOnly\", ctx_r5.readonlyInputs)(\"disabled\", ctx_r5.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n  }\n}\nfunction NgbTimepicker_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n}\nfunction NgbTimepicker_div_15_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵi18n(1, 27);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    var ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵi18nExp(ctx_r27.i18n.getAfternoonPeriod());\n    ɵngcc0.ɵɵi18nApply(1);\n  }\n}\nfunction NgbTimepicker_div_15_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵi18n(0, 28);\n  }\n  if (rf & 2) {\n    var ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵi18nExp(ctx_r29.i18n.getMorningPeriod());\n    ɵngcc0.ɵɵi18nApply(0);\n  }\n}\nfunction NgbTimepicker_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r31 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 23);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_15_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r31);\n      var ctx_r30 = ɵngcc0.ɵɵnextContext();\n      return ctx_r30.toggleMeridian();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbTimepicker_div_15_ng_container_2_Template, 2, 1, \"ng-container\", 25);\n    ɵngcc0.ɵɵtemplate(3, NgbTimepicker_div_15_ng_template_3_Template, 1, 1, \"ng-template\", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var _r28 = ɵngcc0.ɵɵreference(4);\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r7.isSmallSize)(\"btn-lg\", ctx_r7.isLargeSize)(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", (ctx_r7.model == null ? null : ctx_r7.model.hour) >= 12)(\"ngIfElse\", _r28);\n  }\n}\nfunction NgbToast_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.header);\n  }\n}\nfunction NgbToast_ng_template_2_ng_template_1_Template(rf, ctx) {}\nfunction NgbToast_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, NgbToast_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbToast_ng_template_2_Template_button_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.hide();\n    });\n    ɵngcc0.ɵɵelementStart(3, \"span\", 7);\n    ɵngcc0.ɵɵtext(4, \"\\xD7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.contentHeaderTpl || _r0);\n  }\n}\nfunction NgbHighlight_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.highlightClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n  }\n}\nfunction NgbHighlight_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    var part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n  }\n}\nfunction NgbHighlight_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_span_0_Template, 2, 3, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgbHighlight_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    var isOdd_r2 = ctx.odd;\n    var _r4 = ɵngcc0.ɵɵreference(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", isOdd_r2)(\"ngIfElse\", _r4);\n  }\n}\nfunction NgbTypeaheadWindow_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ngb-highlight\", 2);\n  }\n  if (rf & 2) {\n    var result_r3 = ctx.result;\n    var term_r4 = ctx.term;\n    var formatter_r5 = ctx.formatter;\n    ɵngcc0.ɵɵproperty(\"result\", formatter_r5(result_r3))(\"term\", term_r4);\n  }\n}\nfunction NgbTypeaheadWindow_ng_template_2_ng_template_1_Template(rf, ctx) {}\nvar _c86 = function _c86(a0, a1, a2) {\n  return {\n    result: a0,\n    term: a1,\n    formatter: a2\n  };\n};\nfunction NgbTypeaheadWindow_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbTypeaheadWindow_ng_template_2_Template_button_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var idx_r7 = ctx.index;\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.markActive(idx_r7);\n    })(\"click\", function NgbTypeaheadWindow_ng_template_2_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var result_r6 = ctx.$implicit;\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.select(result_r6);\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbTypeaheadWindow_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var result_r6 = ctx.$implicit;\n    var idx_r7 = ctx.index;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵclassProp(\"active\", idx_r7 === ctx_r2.activeIdx);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r2.id + \"-\" + idx_r7);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.resultTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(5, _c86, result_r6, ctx_r2.term, ctx_r2.formatter));\n  }\n}\nfunction toInteger(value) {\n  return parseInt(\"\".concat(value), 10);\n}\nfunction toString(value) {\n  return value !== undefined && value !== null ? \"\".concat(value) : '';\n}\nfunction getValueInRange(value, max) {\n  var min = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return Math.max(Math.min(value, max), min);\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isNumber(value) {\n  return !isNaN(toInteger(value));\n}\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\nfunction padNumber(value) {\n  if (isNumber(value)) {\n    return \"0\".concat(value).slice(-2);\n  } else {\n    return '';\n  }\n}\nfunction regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\nfunction hasClassName(element, className) {\n  return element && element.className && element.className.split && element.className.split(/\\s+/).indexOf(className) >= 0;\n}\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n  Element.prototype.closest = function (s) {\n    var el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\nfunction closest(element, selector) {\n  if (!selector) {\n    return null;\n  }\n  return element.closest(selector);\n}\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\nvar NgbAccordionConfig = /*#__PURE__*/_createClass(function NgbAccordionConfig() {\n  _classCallCheck(this, NgbAccordionConfig);\n  this.closeOthers = false;\n});\nNgbAccordionConfig.ɵfac = function NgbAccordionConfig_Factory(t) {\n  return new (t || NgbAccordionConfig)();\n};\nNgbAccordionConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbAccordionConfig_Factory() {\n    return new NgbAccordionConfig();\n  },\n  token: NgbAccordionConfig,\n  providedIn: \"root\"\n});\nvar nextId = 0;\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\nvar NgbPanelHeader = /*#__PURE__*/_createClass(function NgbPanelHeader(templateRef) {\n  _classCallCheck(this, NgbPanelHeader);\n  this.templateRef = templateRef;\n});\nNgbPanelHeader.ɵfac = function NgbPanelHeader_Factory(t) {\n  return new (t || NgbPanelHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbPanelHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelHeader,\n  selectors: [[\"ng-template\", \"ngbPanelHeader\", \"\"]]\n});\nNgbPanelHeader.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\nvar NgbPanelTitle = /*#__PURE__*/_createClass(function NgbPanelTitle(templateRef) {\n  _classCallCheck(this, NgbPanelTitle);\n  this.templateRef = templateRef;\n});\nNgbPanelTitle.ɵfac = function NgbPanelTitle_Factory(t) {\n  return new (t || NgbPanelTitle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelTitle,\n  selectors: [[\"ng-template\", \"ngbPanelTitle\", \"\"]]\n});\nNgbPanelTitle.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive that wraps the accordion panel content.\n */\nvar NgbPanelContent = /*#__PURE__*/_createClass(function NgbPanelContent(templateRef) {\n  _classCallCheck(this, NgbPanelContent);\n  this.templateRef = templateRef;\n});\nNgbPanelContent.ɵfac = function NgbPanelContent_Factory(t) {\n  return new (t || NgbPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelContent,\n  selectors: [[\"ng-template\", \"ngbPanelContent\", \"\"]]\n});\nNgbPanelContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\nvar NgbPanel = /*#__PURE__*/function () {\n  function NgbPanel() {\n    _classCallCheck(this, NgbPanel);\n    /**\n     *  If `true`, the panel is disabled an can't be toggled.\n     */\n    this.disabled = false;\n    /**\n     *  An optional id for the panel that must be unique on the page.\n     *\n     *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n     */\n    this.id = \"ngb-panel-\".concat(nextId++);\n    this.isOpen = false;\n  }\n  _createClass(NgbPanel, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n      // only @ContentChildren allows us to specify the {descendants: false} option.\n      // Without {descendants: false} we are hitting bugs described in:\n      // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n      this.titleTpl = this.titleTpls.first;\n      this.headerTpl = this.headerTpls.first;\n      this.contentTpl = this.contentTpls.first;\n    }\n  }]);\n  return NgbPanel;\n}();\nNgbPanel.ɵfac = function NgbPanel_Factory(t) {\n  return new (t || NgbPanel)();\n};\nNgbPanel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanel,\n  selectors: [[\"ngb-panel\"]],\n  contentQueries: function NgbPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelTitle, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelHeader, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelContent, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    id: \"id\",\n    title: \"title\",\n    type: \"type\",\n    cardClass: \"cardClass\"\n  }\n});\n__decorate([Input()], NgbPanel.prototype, \"disabled\", void 0);\n__decorate([Input()], NgbPanel.prototype, \"id\", void 0);\n__decorate([Input()], NgbPanel.prototype, \"title\", void 0);\n__decorate([Input()], NgbPanel.prototype, \"type\", void 0);\n__decorate([Input()], NgbPanel.prototype, \"cardClass\", void 0);\n__decorate([ContentChildren(NgbPanelTitle, {\n  descendants: false\n})], NgbPanel.prototype, \"titleTpls\", void 0);\n__decorate([ContentChildren(NgbPanelHeader, {\n  descendants: false\n})], NgbPanel.prototype, \"headerTpls\", void 0);\n__decorate([ContentChildren(NgbPanelContent, {\n  descendants: false\n})], NgbPanel.prototype, \"contentTpls\", void 0);\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\nvar NgbAccordion = /*#__PURE__*/function () {\n  function NgbAccordion(config) {\n    _classCallCheck(this, NgbAccordion);\n    /**\n     * An array or comma separated strings of panel ids that should be opened **initially**.\n     *\n     * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n     * the `(panelChange)` event.\n     */\n    this.activeIds = [];\n    /**\n     * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n     */\n    this.destroyOnHide = true;\n    /**\n     * Event emitted right before the panel toggle happens.\n     *\n     * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n     */\n    this.panelChange = new EventEmitter();\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  _createClass(NgbAccordion, [{\n    key: \"isExpanded\",\n    value: function isExpanded(panelId) {\n      return this.activeIds.indexOf(panelId) > -1;\n    }\n    /**\n     * Expands a panel with a given id.\n     *\n     * Has no effect if the panel is already expanded or disabled.\n     */\n  }, {\n    key: \"expand\",\n    value: function expand(panelId) {\n      this._changeOpenState(this._findPanelById(panelId), true);\n    }\n    /**\n     * Expands all panels, if `[closeOthers]` is `false`.\n     *\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n     */\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this = this;\n      if (this.closeOtherPanels) {\n        if (this.activeIds.length === 0 && this.panels.length) {\n          this._changeOpenState(this.panels.first, true);\n        }\n      } else {\n        this.panels.forEach(function (panel) {\n          return _this._changeOpenState(panel, true);\n        });\n      }\n    }\n    /**\n     * Collapses a panel with the given id.\n     *\n     * Has no effect if the panel is already collapsed or disabled.\n     */\n  }, {\n    key: \"collapse\",\n    value: function collapse(panelId) {\n      this._changeOpenState(this._findPanelById(panelId), false);\n    }\n    /**\n     * Collapses all opened panels.\n     */\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this2 = this;\n      this.panels.forEach(function (panel) {\n        _this2._changeOpenState(panel, false);\n      });\n    }\n    /**\n     * Toggles a panel with the given id.\n     *\n     * Has no effect if the panel is disabled.\n     */\n  }, {\n    key: \"toggle\",\n    value: function toggle(panelId) {\n      var panel = this._findPanelById(panelId);\n      if (panel) {\n        this._changeOpenState(panel, !panel.isOpen);\n      }\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      var _this3 = this;\n      // active id updates\n      if (isString(this.activeIds)) {\n        this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n      }\n      // update panels open states\n      this.panels.forEach(function (panel) {\n        return panel.isOpen = !panel.disabled && _this3.activeIds.indexOf(panel.id) > -1;\n      });\n      // closeOthers updates\n      if (this.activeIds.length > 1 && this.closeOtherPanels) {\n        this._closeOthers(this.activeIds[0]);\n        this._updateActiveIds();\n      }\n    }\n  }, {\n    key: \"_changeOpenState\",\n    value: function _changeOpenState(panel, nextState) {\n      if (panel && !panel.disabled && panel.isOpen !== nextState) {\n        var defaultPrevented = false;\n        this.panelChange.emit({\n          panelId: panel.id,\n          nextState: nextState,\n          preventDefault: function preventDefault() {\n            defaultPrevented = true;\n          }\n        });\n        if (!defaultPrevented) {\n          panel.isOpen = nextState;\n          if (nextState && this.closeOtherPanels) {\n            this._closeOthers(panel.id);\n          }\n          this._updateActiveIds();\n        }\n      }\n    }\n  }, {\n    key: \"_closeOthers\",\n    value: function _closeOthers(panelId) {\n      this.panels.forEach(function (panel) {\n        if (panel.id !== panelId) {\n          panel.isOpen = false;\n        }\n      });\n    }\n  }, {\n    key: \"_findPanelById\",\n    value: function _findPanelById(panelId) {\n      return this.panels.find(function (p) {\n        return p.id === panelId;\n      });\n    }\n  }, {\n    key: \"_updateActiveIds\",\n    value: function _updateActiveIds() {\n      this.activeIds = this.panels.filter(function (panel) {\n        return panel.isOpen && !panel.disabled;\n      }).map(function (panel) {\n        return panel.id;\n      });\n    }\n  }]);\n  return NgbAccordion;\n}();\nNgbAccordion.ɵfac = function NgbAccordion_Factory(t) {\n  return new (t || NgbAccordion)(ɵngcc0.ɵɵdirectiveInject(NgbAccordionConfig));\n};\nNgbAccordion.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbAccordion,\n  selectors: [[\"ngb-accordion\"]],\n  contentQueries: function NgbAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanel, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panels = _t);\n    }\n  },\n  hostAttrs: [\"role\", \"tablist\", 1, \"accordion\"],\n  hostVars: 1,\n  hostBindings: function NgbAccordion_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-multiselectable\", !ctx.closeOtherPanels);\n    }\n  },\n  inputs: {\n    activeIds: \"activeIds\",\n    destroyOnHide: \"destroyOnHide\",\n    type: \"type\",\n    closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"]\n  },\n  outputs: {\n    panelChange: \"panelChange\"\n  },\n  exportAs: [\"ngbAccordion\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"ngbPanelHeader\", \"\"], [\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"btn\", \"btn-link\", 3, \"ngbPanelToggle\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tab\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"tabpanel\", \"class\", \"collapse\", 3, \"id\", \"show\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 1, \"collapse\", 3, \"id\"], [1, \"card-body\"]],\n  template: function NgbAccordion_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbAccordion_ng_template_0_Template, 3, 3, \"ng-template\", 0, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_Template, 4, 11, \"ng-template\", 2);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  directives: function directives() {\n    return [NgbPanelHeader, ɵngcc1.NgForOf, NgbPanelToggle, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf];\n  },\n  encapsulation: 2\n});\nNgbAccordion.ctorParameters = function () {\n  return [{\n    type: NgbAccordionConfig\n  }];\n};\n__decorate([ContentChildren(NgbPanel)], NgbAccordion.prototype, \"panels\", void 0);\n__decorate([Input()], NgbAccordion.prototype, \"activeIds\", void 0);\n__decorate([Input('closeOthers')], NgbAccordion.prototype, \"closeOtherPanels\", void 0);\n__decorate([Input()], NgbAccordion.prototype, \"destroyOnHide\", void 0);\n__decorate([Input()], NgbAccordion.prototype, \"type\", void 0);\n__decorate([Output()], NgbAccordion.prototype, \"panelChange\", void 0);\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\nvar NgbPanelToggle = /*#__PURE__*/function () {\n  function NgbPanelToggle(accordion, panel) {\n    _classCallCheck(this, NgbPanelToggle);\n    this.accordion = accordion;\n    this.panel = panel;\n  }\n  _createClass(NgbPanelToggle, [{\n    key: \"ngbPanelToggle\",\n    set: function set(panel) {\n      if (panel) {\n        this.panel = panel;\n      }\n    }\n  }]);\n  return NgbPanelToggle;\n}();\nNgbPanelToggle.ɵfac = function NgbPanelToggle_Factory(t) {\n  return new (t || NgbPanelToggle)(ɵngcc0.ɵɵdirectiveInject(NgbAccordion), ɵngcc0.ɵɵdirectiveInject(NgbPanel, 9));\n};\nNgbPanelToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelToggle,\n  selectors: [[\"button\", \"ngbPanelToggle\", \"\"]],\n  hostAttrs: [\"type\", \"button\"],\n  hostVars: 5,\n  hostBindings: function NgbPanelToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbPanelToggle_click_HostBindingHandler() {\n        return ctx.accordion.toggle(ctx.panel.id);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.panel.isOpen)(\"aria-controls\", ctx.panel.id);\n      ɵngcc0.ɵɵclassProp(\"collapsed\", !ctx.panel.isOpen);\n    }\n  },\n  inputs: {\n    ngbPanelToggle: \"ngbPanelToggle\"\n  }\n});\nNgbPanelToggle.ctorParameters = function () {\n  return [{\n    type: NgbAccordion\n  }, {\n    type: NgbPanel,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }];\n};\n__decorate([Input()], NgbPanelToggle.prototype, \"ngbPanelToggle\", null);\nNgbPanelToggle = __decorate([__param(1, Optional()), __param(1, Host())], NgbPanelToggle);\nvar NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\nvar NgbAccordionModule = /*#__PURE__*/_createClass(function NgbAccordionModule() {\n  _classCallCheck(this, NgbAccordionModule);\n});\nNgbAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbAccordionModule\n});\nNgbAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbAccordionModule_Factory(t) {\n    return new (t || NgbAccordionModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nvar NgbAlertConfig = /*#__PURE__*/_createClass(function NgbAlertConfig() {\n  _classCallCheck(this, NgbAlertConfig);\n  this.dismissible = true;\n  this.type = 'warning';\n});\nNgbAlertConfig.ɵfac = function NgbAlertConfig_Factory(t) {\n  return new (t || NgbAlertConfig)();\n};\nNgbAlertConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbAlertConfig_Factory() {\n    return new NgbAlertConfig();\n  },\n  token: NgbAlertConfig,\n  providedIn: \"root\"\n});\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\nvar NgbAlert = /*#__PURE__*/function () {\n  function NgbAlert(config, _renderer, _element) {\n    _classCallCheck(this, NgbAlert);\n    this._renderer = _renderer;\n    this._element = _element;\n    /**\n     * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n     */\n    this.close = new EventEmitter();\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n  _createClass(NgbAlert, [{\n    key: \"closeHandler\",\n    value: function closeHandler() {\n      this.close.emit(null);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var typeChange = changes['type'];\n      if (typeChange && !typeChange.firstChange) {\n        this._renderer.removeClass(this._element.nativeElement, \"alert-\".concat(typeChange.previousValue));\n        this._renderer.addClass(this._element.nativeElement, \"alert-\".concat(typeChange.currentValue));\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._renderer.addClass(this._element.nativeElement, \"alert-\".concat(this.type));\n    }\n  }]);\n  return NgbAlert;\n}();\nNgbAlert.ɵfac = function NgbAlert_Factory(t) {\n  return new (t || NgbAlert)(ɵngcc0.ɵɵdirectiveInject(NgbAlertConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nNgbAlert.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbAlert,\n  selectors: [[\"ngb-alert\"]],\n  hostAttrs: [\"role\", \"alert\", 1, \"alert\"],\n  hostVars: 2,\n  hostBindings: function NgbAlert_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"alert-dismissible\", ctx.dismissible);\n    }\n  },\n  inputs: {\n    dismissible: \"dismissible\",\n    type: \"type\"\n  },\n  outputs: {\n    close: \"close\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c5,\n  decls: 2,\n  vars: 1,\n  consts: function consts() {\n    var i18n_1;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2 = goog.getMsg(\"Close\");\n      i18n_1 = MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2;\n    } else {\n      i18n_1 = $localize(_templateObject || (_templateObject = _taggedTemplateLiteral([\":@@ngb.alert.close\\u241Ff4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8\\u241F7819314041543176992:Close\"])));\n    }\n    var i18n_3;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS__4 = goog.getMsg(\"Close\");\n      i18n_3 = MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS__4;\n    } else {\n      i18n_3 = $localize(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\":@@ngb.alert.close\\u241Ff4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8\\u241F7819314041543176992:Close\"])));\n    }\n    return [[\"type\", \"button\", \"class\", \"close\", \"aria-label\", i18n_1, 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", i18n_3, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n  },\n  template: function NgbAlert_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵtemplate(1, NgbAlert_button_1_Template, 3, 0, \"button\", 0);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"ngb-alert{display:block}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbAlert.ctorParameters = function () {\n  return [{\n    type: NgbAlertConfig\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n__decorate([Input()], NgbAlert.prototype, \"dismissible\", void 0);\n__decorate([Input()], NgbAlert.prototype, \"type\", void 0);\n__decorate([Output()], NgbAlert.prototype, \"close\", void 0);\nvar NgbAlertModule = /*#__PURE__*/_createClass(function NgbAlertModule() {\n  _classCallCheck(this, NgbAlertModule);\n});\nNgbAlertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbAlertModule\n});\nNgbAlertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbAlertModule_Factory(t) {\n    return new (t || NgbAlertModule)();\n  },\n  imports: [[CommonModule]]\n});\nvar NgbButtonLabel = /*#__PURE__*/_createClass(function NgbButtonLabel() {\n  _classCallCheck(this, NgbButtonLabel);\n});\nNgbButtonLabel.ɵfac = function NgbButtonLabel_Factory(t) {\n  return new (t || NgbButtonLabel)();\n};\nNgbButtonLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbButtonLabel,\n  selectors: [[\"\", \"ngbButtonLabel\", \"\"]],\n  hostVars: 8,\n  hostBindings: function NgbButtonLabel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"btn\", true)(\"active\", ctx.active)(\"disabled\", ctx.disabled)(\"focus\", ctx.focused);\n    }\n  }\n});\nvar NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbCheckBox;\n  }),\n  multi: true\n};\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\nvar NgbCheckBox = /*#__PURE__*/function () {\n  function NgbCheckBox(_label, _cd) {\n    _classCallCheck(this, NgbCheckBox);\n    this._label = _label;\n    this._cd = _cd;\n    /**\n     * If `true`, the checkbox button will be disabled\n     */\n    this.disabled = false;\n    /**\n     * The form control value when the checkbox is checked.\n     */\n    this.valueChecked = true;\n    /**\n     * The form control value when the checkbox is unchecked.\n     */\n    this.valueUnChecked = false;\n    this.onChange = function (_) {};\n    this.onTouched = function () {};\n  }\n  _createClass(NgbCheckBox, [{\n    key: \"focused\",\n    set: function set(isFocused) {\n      this._label.focused = isFocused;\n      if (!isFocused) {\n        this.onTouched();\n      }\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange($event) {\n      var modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n      this.onChange(modelToPropagate);\n      this.onTouched();\n      this.writeValue(modelToPropagate);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._label.disabled = isDisabled;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.checked = value === this.valueChecked;\n      this._label.active = this.checked;\n      // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n      this._cd.markForCheck();\n    }\n  }]);\n  return NgbCheckBox;\n}();\nNgbCheckBox.ɵfac = function NgbCheckBox_Factory(t) {\n  return new (t || NgbCheckBox)(ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nNgbCheckBox.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbCheckBox,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"checkbox\"]],\n  hostVars: 2,\n  hostBindings: function NgbCheckBox_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"change\", function NgbCheckBox_change_HostBindingHandler($event) {\n        return ctx.onInputChange($event);\n      })(\"focus\", function NgbCheckBox_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbCheckBox_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    valueChecked: \"valueChecked\",\n    valueUnChecked: \"valueUnChecked\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_CHECKBOX_VALUE_ACCESSOR])]\n});\nNgbCheckBox.ctorParameters = function () {\n  return [{\n    type: NgbButtonLabel\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n__decorate([Input()], NgbCheckBox.prototype, \"disabled\", void 0);\n__decorate([Input()], NgbCheckBox.prototype, \"valueChecked\", void 0);\n__decorate([Input()], NgbCheckBox.prototype, \"valueUnChecked\", void 0);\nvar NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbRadioGroup;\n  }),\n  multi: true\n};\nvar nextId$1 = 0;\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\nvar NgbRadioGroup = /*#__PURE__*/function () {\n  function NgbRadioGroup() {\n    _classCallCheck(this, NgbRadioGroup);\n    this._radios = new Set();\n    this._value = null;\n    /**\n     * Name of the radio group applied to radio input elements.\n     *\n     * Will be applied to all radio input elements inside the group,\n     * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n     *\n     * If not provided, will be generated in the `ngb-radio-xx` format.\n     */\n    this.name = \"ngb-radio-\".concat(nextId$1++);\n    this.onChange = function (_) {};\n    this.onTouched = function () {};\n  }\n  _createClass(NgbRadioGroup, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(isDisabled) {\n      this.setDisabledState(isDisabled);\n    }\n  }, {\n    key: \"onRadioChange\",\n    value: function onRadioChange(radio) {\n      this.writeValue(radio.value);\n      this.onChange(radio.value);\n    }\n  }, {\n    key: \"onRadioValueUpdate\",\n    value: function onRadioValueUpdate() {\n      this._updateRadiosValue();\n    }\n  }, {\n    key: \"register\",\n    value: function register(radio) {\n      this._radios.add(radio);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this._disabled = isDisabled;\n      this._updateRadiosDisabled();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(radio) {\n      this._radios.delete(radio);\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._value = value;\n      this._updateRadiosValue();\n    }\n  }, {\n    key: \"_updateRadiosValue\",\n    value: function _updateRadiosValue() {\n      var _this4 = this;\n      this._radios.forEach(function (radio) {\n        return radio.updateValue(_this4._value);\n      });\n    }\n  }, {\n    key: \"_updateRadiosDisabled\",\n    value: function _updateRadiosDisabled() {\n      this._radios.forEach(function (radio) {\n        return radio.updateDisabled();\n      });\n    }\n  }]);\n  return NgbRadioGroup;\n}();\nNgbRadioGroup.ɵfac = function NgbRadioGroup_Factory(t) {\n  return new (t || NgbRadioGroup)();\n};\nNgbRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbRadioGroup,\n  selectors: [[\"\", \"ngbRadioGroup\", \"\"]],\n  hostAttrs: [\"role\", \"radiogroup\"],\n  inputs: {\n    name: \"name\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_RADIO_VALUE_ACCESSOR])]\n});\n__decorate([Input()], NgbRadioGroup.prototype, \"name\", void 0);\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\nvar NgbRadio = /*#__PURE__*/function () {\n  function NgbRadio(_group, _label, _renderer, _element, _cd) {\n    _classCallCheck(this, NgbRadio);\n    this._group = _group;\n    this._label = _label;\n    this._renderer = _renderer;\n    this._element = _element;\n    this._cd = _cd;\n    this._value = null;\n    this._group.register(this);\n    this.updateDisabled();\n  }\n  /**\n   * The form control value when current radio button is checked.\n   */\n  _createClass(NgbRadio, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(value) {\n      this._value = value;\n      var stringValue = value ? value.toString() : '';\n      this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n      this._group.onRadioValueUpdate();\n    }\n    /**\n     * If `true`, current radio button will be disabled.\n     */\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._group.disabled || this._disabled;\n    },\n    set: function set(isDisabled) {\n      this._disabled = isDisabled !== false;\n      this.updateDisabled();\n    }\n  }, {\n    key: \"focused\",\n    set: function set(isFocused) {\n      if (this._label) {\n        this._label.focused = isFocused;\n      }\n      if (!isFocused) {\n        this._group.onTouched();\n      }\n    }\n  }, {\n    key: \"checked\",\n    get: function get() {\n      return this._checked;\n    }\n  }, {\n    key: \"nameAttr\",\n    get: function get() {\n      return this.name || this._group.name;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._group.unregister(this);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      this._group.onRadioChange(this);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n      if (this.value !== value) {\n        this._cd.markForCheck();\n      }\n      this._checked = this.value === value;\n      this._label.active = this._checked;\n    }\n  }, {\n    key: \"updateDisabled\",\n    value: function updateDisabled() {\n      this._label.disabled = this.disabled;\n    }\n  }]);\n  return NgbRadio;\n}();\nNgbRadio.ɵfac = function NgbRadio_Factory(t) {\n  return new (t || NgbRadio)(ɵngcc0.ɵɵdirectiveInject(NgbRadioGroup), ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nNgbRadio.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbRadio,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"radio\"]],\n  hostVars: 3,\n  hostBindings: function NgbRadio_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"change\", function NgbRadio_change_HostBindingHandler() {\n        return ctx.onChange();\n      })(\"focus\", function NgbRadio_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbRadio_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"name\", ctx.nameAttr);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    disabled: \"disabled\",\n    name: \"name\"\n  }\n});\nNgbRadio.ctorParameters = function () {\n  return [{\n    type: NgbRadioGroup\n  }, {\n    type: NgbButtonLabel\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n__decorate([Input()], NgbRadio.prototype, \"name\", void 0);\n__decorate([Input('value')], NgbRadio.prototype, \"value\", null);\n__decorate([Input('disabled')], NgbRadio.prototype, \"disabled\", null);\nvar NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\nvar NgbButtonsModule = /*#__PURE__*/_createClass(function NgbButtonsModule() {\n  _classCallCheck(this, NgbButtonsModule);\n});\nNgbButtonsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbButtonsModule\n});\nNgbButtonsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbButtonsModule_Factory(t) {\n    return new (t || NgbButtonsModule)();\n  }\n});\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\nvar NgbCarouselConfig = /*#__PURE__*/_createClass(function NgbCarouselConfig() {\n  _classCallCheck(this, NgbCarouselConfig);\n  this.interval = 5000;\n  this.wrap = true;\n  this.keyboard = true;\n  this.pauseOnHover = true;\n  this.showNavigationArrows = true;\n  this.showNavigationIndicators = true;\n});\nNgbCarouselConfig.ɵfac = function NgbCarouselConfig_Factory(t) {\n  return new (t || NgbCarouselConfig)();\n};\nNgbCarouselConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbCarouselConfig_Factory() {\n    return new NgbCarouselConfig();\n  },\n  token: NgbCarouselConfig,\n  providedIn: \"root\"\n});\nvar nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\nvar NgbSlide = /*#__PURE__*/_createClass(function NgbSlide(tplRef) {\n  _classCallCheck(this, NgbSlide);\n  this.tplRef = tplRef;\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  this.id = \"ngb-slide-\".concat(nextId$2++);\n});\nNgbSlide.ɵfac = function NgbSlide_Factory(t) {\n  return new (t || NgbSlide)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbSlide.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbSlide,\n  selectors: [[\"ng-template\", \"ngbSlide\", \"\"]],\n  inputs: {\n    id: \"id\"\n  }\n});\nNgbSlide.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n__decorate([Input()], NgbSlide.prototype, \"id\", void 0);\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\nvar NgbCarousel = /*#__PURE__*/function () {\n  function NgbCarousel(config, _platformId, _ngZone, _cd) {\n    _classCallCheck(this, NgbCarousel);\n    this._platformId = _platformId;\n    this._ngZone = _ngZone;\n    this._cd = _cd;\n    this.NgbSlideEventSource = NgbSlideEventSource;\n    this._destroy$ = new Subject();\n    this._interval$ = new BehaviorSubject(0);\n    this._mouseHover$ = new BehaviorSubject(false);\n    this._pauseOnHover$ = new BehaviorSubject(false);\n    this._pause$ = new BehaviorSubject(false);\n    this._wrap$ = new BehaviorSubject(false);\n    /**\n     * An event emitted right after the slide transition is completed.\n     *\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n     */\n    this.slide = new EventEmitter();\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  _createClass(NgbCarousel, [{\n    key: \"interval\",\n    get: function get() {\n      return this._interval$.value;\n    }\n    /**\n     * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n     */,\n    set: function set(value) {\n      this._interval$.next(value);\n    }\n  }, {\n    key: \"wrap\",\n    get: function get() {\n      return this._wrap$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when mouse cursor hovers the slide.\n     *\n     * @since 2.2.0\n     */,\n    set: function set(value) {\n      this._wrap$.next(value);\n    }\n  }, {\n    key: \"pauseOnHover\",\n    get: function get() {\n      return this._pauseOnHover$.value;\n    },\n    set: function set(value) {\n      this._pauseOnHover$.next(value);\n    }\n  }, {\n    key: \"mouseEnter\",\n    value: function mouseEnter() {\n      this._mouseHover$.next(true);\n    }\n  }, {\n    key: \"mouseLeave\",\n    value: function mouseLeave() {\n      this._mouseHover$.next(false);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this5 = this;\n      // setInterval() doesn't play well with SSR and protractor,\n      // so we should run it in the browser and outside Angular\n      if (isPlatformBrowser(this._platformId)) {\n        this._ngZone.runOutsideAngular(function () {\n          var hasNextSlide$ = combineLatest([_this5.slide.pipe(map(function (slideEvent) {\n            return slideEvent.current;\n          }), startWith(_this5.activeId)), _this5._wrap$, _this5.slides.changes.pipe(startWith(null))]).pipe(map(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              currentSlideId = _ref2[0],\n              wrap = _ref2[1];\n            var slideArr = _this5.slides.toArray();\n            var currentSlideIdx = _this5._getSlideIdxById(currentSlideId);\n            return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n          }), distinctUntilChanged());\n          combineLatest([_this5._pause$, _this5._pauseOnHover$, _this5._mouseHover$, _this5._interval$, hasNextSlide$]).pipe(map(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 5),\n              pause = _ref4[0],\n              pauseOnHover = _ref4[1],\n              mouseHover = _ref4[2],\n              interval = _ref4[3],\n              hasNextSlide = _ref4[4];\n            return pause || pauseOnHover && mouseHover || !hasNextSlide ? 0 : interval;\n          }), distinctUntilChanged(), switchMap(function (interval) {\n            return interval > 0 ? timer(interval, interval) : NEVER;\n          }), takeUntil(_this5._destroy$)).subscribe(function () {\n            return _this5._ngZone.run(function () {\n              return _this5.next(NgbSlideEventSource.TIMER);\n            });\n          });\n        });\n      }\n      this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(function () {\n        return _this5._cd.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      var activeSlide = this._getSlideById(this.activeId);\n      this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : null;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroy$.next();\n    }\n    /**\n     * Navigates to a slide with the specified identifier.\n     */\n  }, {\n    key: \"select\",\n    value: function select(slideId, source) {\n      this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    }\n    /**\n     * Navigates to the previous slide.\n     */\n  }, {\n    key: \"prev\",\n    value: function prev(source) {\n      this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n    }\n    /**\n     * Navigates to the next slide.\n     */\n  }, {\n    key: \"next\",\n    value: function next(source) {\n      this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n    }\n    /**\n     * Pauses cycling through the slides.\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._pause$.next(true);\n    }\n    /**\n     * Restarts cycling through the slides from left to right.\n     */\n  }, {\n    key: \"cycle\",\n    value: function cycle() {\n      this._pause$.next(false);\n    }\n  }, {\n    key: \"_cycleToSelected\",\n    value: function _cycleToSelected(slideIdx, direction, source) {\n      var selectedSlide = this._getSlideById(slideIdx);\n      if (selectedSlide && selectedSlide.id !== this.activeId) {\n        this.slide.emit({\n          prev: this.activeId,\n          current: selectedSlide.id,\n          direction: direction,\n          paused: this._pause$.value,\n          source: source\n        });\n        this.activeId = selectedSlide.id;\n      }\n      // we get here after the interval fires or any external API call like next(), prev() or select()\n      this._cd.markForCheck();\n    }\n  }, {\n    key: \"_getSlideEventDirection\",\n    value: function _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n      var currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n      var nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n      return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n    }\n  }, {\n    key: \"_getSlideById\",\n    value: function _getSlideById(slideId) {\n      return this.slides.find(function (slide) {\n        return slide.id === slideId;\n      });\n    }\n  }, {\n    key: \"_getSlideIdxById\",\n    value: function _getSlideIdxById(slideId) {\n      return this.slides.toArray().indexOf(this._getSlideById(slideId));\n    }\n  }, {\n    key: \"_getNextSlide\",\n    value: function _getNextSlide(currentSlideId) {\n      var slideArr = this.slides.toArray();\n      var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n      var isLastSlide = currentSlideIdx === slideArr.length - 1;\n      return isLastSlide ? this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id : slideArr[currentSlideIdx + 1].id;\n    }\n  }, {\n    key: \"_getPrevSlide\",\n    value: function _getPrevSlide(currentSlideId) {\n      var slideArr = this.slides.toArray();\n      var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n      var isFirstSlide = currentSlideIdx === 0;\n      return isFirstSlide ? this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id : slideArr[currentSlideIdx - 1].id;\n    }\n  }]);\n  return NgbCarousel;\n}();\nNgbCarousel.ɵfac = function NgbCarousel_Factory(t) {\n  return new (t || NgbCarousel)(ɵngcc0.ɵɵdirectiveInject(NgbCarouselConfig), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nNgbCarousel.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbCarousel,\n  selectors: [[\"ngb-carousel\"]],\n  contentQueries: function NgbCarousel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbSlide, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slides = _t);\n    }\n  },\n  hostAttrs: [\"tabIndex\", \"0\", 1, \"carousel\", \"slide\"],\n  hostVars: 2,\n  hostBindings: function NgbCarousel_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.arrowLeft\", function NgbCarousel_keydown_arrowLeft_HostBindingHandler() {\n        return ctx.keyboard && ctx.prev(ctx.NgbSlideEventSource.ARROW_LEFT);\n      })(\"keydown.arrowRight\", function NgbCarousel_keydown_arrowRight_HostBindingHandler() {\n        return ctx.keyboard && ctx.next(ctx.NgbSlideEventSource.ARROW_RIGHT);\n      })(\"mouseenter\", function NgbCarousel_mouseenter_HostBindingHandler() {\n        return ctx.mouseEnter();\n      })(\"mouseleave\", function NgbCarousel_mouseleave_HostBindingHandler() {\n        return ctx.mouseLeave();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"display\", \"block\");\n    }\n  },\n  inputs: {\n    interval: \"interval\",\n    wrap: \"wrap\",\n    keyboard: \"keyboard\",\n    pauseOnHover: \"pauseOnHover\",\n    showNavigationArrows: \"showNavigationArrows\",\n    showNavigationIndicators: \"showNavigationIndicators\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    slide: \"slide\"\n  },\n  exportAs: [\"ngbCarousel\"],\n  decls: 5,\n  vars: 4,\n  consts: function consts() {\n    var i18n_6;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__7 = goog.getMsg(\"Previous\");\n      i18n_6 = MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__7;\n    } else {\n      i18n_6 = $localize(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\":@@ngb.carousel.previous\\u241F680d5c75b7fd8d37961083608b9fcdc4167b4c43\\u241F4452427314943113135:Previous\"])));\n    }\n    var i18n_8;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__9 = goog.getMsg(\"Next\");\n      i18n_8 = MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__9;\n    } else {\n      i18n_8 = $localize(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\":@@ngb.carousel.next\\u241Ff732c304c7433e5a83ffcd862c3dce709a0f4982\\u241F3885497195825665706:Next\"])));\n    }\n    return [[\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\"], [\"class\", \"carousel-item\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"carousel-control-prev\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"carousel-control-next\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"carousel-indicators\"], [3, \"id\", \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\", \"click\"], [1, \"carousel-item\"], [3, \"ngTemplateOutlet\"], [\"role\", \"button\", 1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], [1, \"sr-only\"], i18n_6, [\"role\", \"button\", 1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"], i18n_8];\n  },\n  template: function NgbCarousel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbCarousel_ol_0_Template, 2, 1, \"ol\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, NgbCarousel_div_2_Template, 2, 3, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, NgbCarousel_a_3_Template, 4, 0, \"a\", 3);\n      ɵngcc0.ɵɵtemplate(4, NgbCarousel_a_4_Template, 4, 0, \"a\", 4);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationIndicators);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbCarousel.ctorParameters = function () {\n  return [{\n    type: NgbCarouselConfig\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n__decorate([ContentChildren(NgbSlide)], NgbCarousel.prototype, \"slides\", void 0);\n__decorate([Input()], NgbCarousel.prototype, \"activeId\", void 0);\n__decorate([Input()], NgbCarousel.prototype, \"interval\", null);\n__decorate([Input()], NgbCarousel.prototype, \"wrap\", null);\n__decorate([Input()], NgbCarousel.prototype, \"keyboard\", void 0);\n__decorate([Input()], NgbCarousel.prototype, \"pauseOnHover\", null);\n__decorate([Input()], NgbCarousel.prototype, \"showNavigationArrows\", void 0);\n__decorate([Input()], NgbCarousel.prototype, \"showNavigationIndicators\", void 0);\n__decorate([Output()], NgbCarousel.prototype, \"slide\", void 0);\n__decorate([HostListener('mouseenter')], NgbCarousel.prototype, \"mouseEnter\", null);\n__decorate([HostListener('mouseleave')], NgbCarousel.prototype, \"mouseLeave\", null);\nNgbCarousel = __decorate([__param(1, Inject(PLATFORM_ID))], NgbCarousel);\n/**\n * Defines the carousel slide transition direction.\n */\nvar NgbSlideEventDirection;\n(function (NgbSlideEventDirection) {\n  NgbSlideEventDirection[NgbSlideEventDirection[\"LEFT\"] = 'left'] = \"LEFT\";\n  NgbSlideEventDirection[NgbSlideEventDirection[\"RIGHT\"] = 'right'] = \"RIGHT\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\nvar NgbSlideEventSource;\n(function (NgbSlideEventSource) {\n  NgbSlideEventSource[\"TIMER\"] = \"timer\";\n  NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n  NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n  NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\nvar NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\nvar NgbCarouselModule = /*#__PURE__*/_createClass(function NgbCarouselModule() {\n  _classCallCheck(this, NgbCarouselModule);\n});\nNgbCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbCarouselModule\n});\nNgbCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbCarouselModule_Factory(t) {\n    return new (t || NgbCarouselModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\nvar NgbCollapse = /*#__PURE__*/_createClass(function NgbCollapse() {\n  _classCallCheck(this, NgbCollapse);\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  this.collapsed = false;\n});\nNgbCollapse.ɵfac = function NgbCollapse_Factory(t) {\n  return new (t || NgbCollapse)();\n};\nNgbCollapse.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbCollapse,\n  selectors: [[\"\", \"ngbCollapse\", \"\"]],\n  hostVars: 4,\n  hostBindings: function NgbCollapse_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"collapse\", true)(\"show\", !ctx.collapsed);\n    }\n  },\n  inputs: {\n    collapsed: [\"ngbCollapse\", \"collapsed\"]\n  },\n  exportAs: [\"ngbCollapse\"]\n});\n__decorate([Input('ngbCollapse')], NgbCollapse.prototype, \"collapsed\", void 0);\nvar NgbCollapseModule = /*#__PURE__*/_createClass(function NgbCollapseModule() {\n  _classCallCheck(this, NgbCollapseModule);\n});\nNgbCollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbCollapseModule\n});\nNgbCollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbCollapseModule_Factory(t) {\n    return new (t || NgbCollapseModule)();\n  }\n});\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nvar NgbDate = /*#__PURE__*/function () {\n  function NgbDate(year, month, day) {\n    _classCallCheck(this, NgbDate);\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  _createClass(NgbDate, [{\n    key: \"equals\",\n    value:\n    /**\n     * Checks if the current date is equal to another date.\n     */\n    function equals(other) {\n      return other && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\n     * Checks if the current date is before another date.\n     */\n  }, {\n    key: \"before\",\n    value: function before(other) {\n      if (!other) {\n        return false;\n      }\n      if (this.year === other.year) {\n        if (this.month === other.month) {\n          return this.day === other.day ? false : this.day < other.day;\n        } else {\n          return this.month < other.month;\n        }\n      } else {\n        return this.year < other.year;\n      }\n    }\n    /**\n     * Checks if the current date is after another date.\n     */\n  }, {\n    key: \"after\",\n    value: function after(other) {\n      if (!other) {\n        return false;\n      }\n      if (this.year === other.year) {\n        if (this.month === other.month) {\n          return this.day === other.day ? false : this.day > other.day;\n        } else {\n          return this.month > other.month;\n        }\n      } else {\n        return this.year > other.year;\n      }\n    }\n  }], [{\n    key: \"from\",\n    value: function from(date) {\n      if (date instanceof NgbDate) {\n        return date;\n      }\n      return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n  }]);\n  return NgbDate;\n}();\nfunction fromJSDate(jsDate) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n  var jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\nvar NgbCalendar = /*#__PURE__*/_createClass(function NgbCalendar() {\n  _classCallCheck(this, NgbCalendar);\n});\nNgbCalendar.ɵfac = function NgbCalendar_Factory(t) {\n  return new (t || NgbCalendar)();\n};\nNgbCalendar.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_CALENDAR_FACTORY,\n  token: NgbCalendar,\n  providedIn: \"root\"\n});\nvar NgbCalendarGregorian = /*#__PURE__*/function (_NgbCalendar) {\n  _inherits(NgbCalendarGregorian, _NgbCalendar);\n  var _super = _createSuper(NgbCalendarGregorian);\n  function NgbCalendarGregorian() {\n    _classCallCheck(this, NgbCalendarGregorian);\n    return _super.apply(this, arguments);\n  }\n  _createClass(NgbCalendarGregorian, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var jsDate = toJSDate(date);\n      var checkMonth = true;\n      var expectedMonth = jsDate.getMonth();\n      switch (period) {\n        case 'y':\n          jsDate.setFullYear(jsDate.getFullYear() + number);\n          break;\n        case 'm':\n          expectedMonth += number;\n          jsDate.setMonth(expectedMonth);\n          expectedMonth = expectedMonth % 12;\n          if (expectedMonth < 0) {\n            expectedMonth = expectedMonth + 12;\n          }\n          break;\n        case 'd':\n          jsDate.setDate(jsDate.getDate() + number);\n          checkMonth = false;\n          break;\n        default:\n          return date;\n      }\n      if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n        // this means the destination month has less days than the initial month\n        // let's go back to the end of the previous month:\n        jsDate.setDate(0);\n      }\n      return fromJSDate(jsDate);\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var jsDate = toJSDate(date);\n      var day = jsDate.getDay();\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = toJSDate(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n      var time = jsDate.getTime();\n      jsDate.setMonth(0); // Compare with Jan 1\n      jsDate.setDate(1);\n      return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return fromJSDate(new Date());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n        return false;\n      }\n      // year 0 doesn't exist in Gregorian calendar\n      if (date.year === 0) {\n        return false;\n      }\n      var jsDate = toJSDate(date);\n      return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n    }\n  }]);\n  return NgbCalendarGregorian;\n}(NgbCalendar);\nNgbCalendarGregorian.ɵfac = function NgbCalendarGregorian_Factory(t) {\n  return ɵNgbCalendarGregorian_BaseFactory(t || NgbCalendarGregorian);\n};\nNgbCalendarGregorian.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarGregorian,\n  factory: function factory(t) {\n    return NgbCalendarGregorian.ɵfac(t);\n  }\n});\nfunction isChangedDate(prev, next) {\n  return !dateComparator(prev, next);\n}\nfunction isChangedMonth(prev, next) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\nfunction dateComparator(prev, next) {\n  return !prev && !next || !!prev && !!next && prev.equals(next);\n}\nfunction checkMinBeforeMax(minDate, maxDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(\"'maxDate' \".concat(maxDate, \" should be greater than 'minDate' \").concat(minDate));\n  }\n}\nfunction checkDateInRange(date, minDate, maxDate) {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n  return date;\n}\nfunction isDateSelectable(date, state) {\n  var minDate = state.minDate,\n    maxDate = state.maxDate,\n    disabled = state.disabled,\n    markDisabled = state.markDisabled;\n  // clang-format off\n  return !(!isDefined(date) || disabled || markDisabled && markDisabled(date, {\n    year: date.year,\n    month: date.month\n  }) || minDate && date.before(minDate) || maxDate && date.after(maxDate));\n  // clang-format on\n}\n\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n  var months = calendar.getMonths(date.year);\n  if (minDate && date.year === minDate.year) {\n    var index = months.findIndex(function (month) {\n      return month === minDate.month;\n    });\n    months = months.slice(index);\n  }\n  if (maxDate && date.year === maxDate.year) {\n    var _index = months.findIndex(function (month) {\n      return month === maxDate.month;\n    });\n    months = months.slice(0, _index + 1);\n  }\n  return months;\n}\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n  var start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  var end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n  var length = end - start + 1;\n  var numbers = Array(length);\n  for (var i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n  return numbers;\n}\nfunction nextMonthDisabled(calendar, date, maxDate) {\n  var nextDate = Object.assign(calendar.getNext(date, 'm'), {\n    day: 1\n  });\n  return maxDate && nextDate.after(maxDate);\n}\nfunction prevMonthDisabled(calendar, date, minDate) {\n  var prevDate = Object.assign(calendar.getPrev(date, 'm'), {\n    day: 1\n  });\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month || prevDate.year < minDate.year && minDate.month === 1);\n}\nfunction buildMonths(calendar, date, state, i18n, force) {\n  var displayMonths = state.displayMonths,\n    months = state.months;\n  // move old months to a temporary array\n  var monthsToReuse = months.splice(0, months.length);\n  // generate new first dates, nullify or reuse months\n  var firstDates = Array.from({\n    length: displayMonths\n  }, function (_, i) {\n    var firstDate = Object.assign(calendar.getNext(date, 'm', i), {\n      day: 1\n    });\n    months[i] = null;\n    if (!force) {\n      var reusedIndex = monthsToReuse.findIndex(function (month) {\n        return month.firstDate.equals(firstDate);\n      });\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n    return firstDate;\n  });\n  // rebuild nullified months\n  firstDates.forEach(function (firstDate, i) {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n    }\n  });\n  return months;\n}\nfunction buildMonth(calendar, date, state, i18n) {\n  var month = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var dayTemplateData = state.dayTemplateData,\n    minDate = state.minDate,\n    maxDate = state.maxDate,\n    firstDayOfWeek = state.firstDayOfWeek,\n    markDisabled = state.markDisabled,\n    outsideDays = state.outsideDays;\n  var calendarToday = calendar.getToday();\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n  // month has weeks\n  for (var week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    var weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {\n        number: 0,\n        days: [],\n        collapsed: true\n      };\n    }\n    var days = weekObject.days;\n    // week has days\n    for (var day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n      var newDate = new NgbDate(date.year, date.month, date.day);\n      var nextDate = calendar.getNext(newDate);\n      var ariaLabel = i18n.getDayAriaLabel(newDate);\n      // marking date as disabled\n      var disabled = !!(minDate && newDate.before(minDate) || maxDate && newDate.after(maxDate));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {\n          month: month.number,\n          year: month.year\n        });\n      }\n      // today\n      var today = newDate.equals(calendarToday);\n      // adding user-provided data to the context\n      var contextUserData = dayTemplateData ? dayTemplateData(newDate, {\n        month: month.number,\n        year: month.year\n      }) : undefined;\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n      var dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {};\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year,\n        disabled: disabled,\n        focused: false,\n        selected: false,\n        today: today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n      date = nextDate;\n    }\n    weekObject.number = calendar.getWeekNumber(days.map(function (day) {\n      return day.date;\n    }), firstDayOfWeek);\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number && days[days.length - 1].date.month !== month.number;\n  }\n  return month;\n}\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n  var daysPerWeek = calendar.getDaysPerWeek();\n  var firstMonthDate = new NgbDate(date.year, date.month, 1);\n  var dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\nvar NgbDatepickerI18n = /*#__PURE__*/function () {\n  function NgbDatepickerI18n() {\n    _classCallCheck(this, NgbDatepickerI18n);\n  }\n  _createClass(NgbDatepickerI18n, [{\n    key: \"getDayNumerals\",\n    value:\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * @since 3.0.0\n     */\n    function getDayNumerals(date) {\n      return \"\".concat(date.day);\n    }\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * @since 3.0.0\n     */\n  }, {\n    key: \"getWeekNumerals\",\n    value: function getWeekNumerals(weekNumber) {\n      return \"\".concat(weekNumber);\n    }\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * @since 3.0.0\n     */\n  }, {\n    key: \"getYearNumerals\",\n    value: function getYearNumerals(year) {\n      return \"\".concat(year);\n    }\n  }]);\n  return NgbDatepickerI18n;\n}();\nNgbDatepickerI18n.ɵfac = function NgbDatepickerI18n_Factory(t) {\n  return new (t || NgbDatepickerI18n)();\n};\nNgbDatepickerI18n.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerI18n_Factory() {\n    return NGB_DATEPICKER_18N_FACTORY(ɵɵinject(LOCALE_ID));\n  },\n  token: NgbDatepickerI18n,\n  providedIn: \"root\"\n});\nvar NgbDatepickerI18nDefault = /*#__PURE__*/function (_NgbDatepickerI18n) {\n  _inherits(NgbDatepickerI18nDefault, _NgbDatepickerI18n);\n  var _super2 = _createSuper(NgbDatepickerI18nDefault);\n  function NgbDatepickerI18nDefault(_locale) {\n    var _this6;\n    _classCallCheck(this, NgbDatepickerI18nDefault);\n    _this6 = _super2.call(this);\n    _this6._locale = _locale;\n    var weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    _this6._weekdaysShort = weekdaysStartingOnSunday.map(function (day, index) {\n      return weekdaysStartingOnSunday[(index + 1) % 7];\n    });\n    _this6._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    _this6._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n    return _this6;\n  }\n  _createClass(NgbDatepickerI18nDefault, [{\n    key: \"getWeekdayShortName\",\n    value: function getWeekdayShortName(weekday) {\n      return this._weekdaysShort[weekday - 1];\n    }\n  }, {\n    key: \"getMonthShortName\",\n    value: function getMonthShortName(month) {\n      return this._monthsShort[month - 1];\n    }\n  }, {\n    key: \"getMonthFullName\",\n    value: function getMonthFullName(month) {\n      return this._monthsFull[month - 1];\n    }\n  }, {\n    key: \"getDayAriaLabel\",\n    value: function getDayAriaLabel(date) {\n      var jsDate = new Date(date.year, date.month - 1, date.day);\n      return formatDate(jsDate, 'fullDate', this._locale);\n    }\n  }]);\n  return NgbDatepickerI18nDefault;\n}(NgbDatepickerI18n);\nNgbDatepickerI18nDefault.ɵfac = function NgbDatepickerI18nDefault_Factory(t) {\n  return new (t || NgbDatepickerI18nDefault)(ɵngcc0.ɵɵinject(LOCALE_ID));\n};\nNgbDatepickerI18nDefault.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nDefault,\n  factory: function factory(t) {\n    return NgbDatepickerI18nDefault.ɵfac(t);\n  }\n});\nNgbDatepickerI18nDefault.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\nNgbDatepickerI18nDefault = __decorate([__param(0, Inject(LOCALE_ID))], NgbDatepickerI18nDefault);\nvar NgbDatepickerService = /*#__PURE__*/function () {\n  function NgbDatepickerService(_calendar, _i18n) {\n    var _this7 = this;\n    _classCallCheck(this, NgbDatepickerService);\n    this._calendar = _calendar;\n    this._i18n = _i18n;\n    this._VALIDATORS = {\n      dayTemplateData: function dayTemplateData(_dayTemplateData) {\n        if (_this7._state.dayTemplateData !== _dayTemplateData) {\n          return {\n            dayTemplateData: _dayTemplateData\n          };\n        }\n      },\n      displayMonths: function displayMonths(_displayMonths) {\n        _displayMonths = toInteger(_displayMonths);\n        if (isInteger(_displayMonths) && _displayMonths > 0 && _this7._state.displayMonths !== _displayMonths) {\n          return {\n            displayMonths: _displayMonths\n          };\n        }\n      },\n      disabled: function disabled(_disabled) {\n        if (_this7._state.disabled !== _disabled) {\n          return {\n            disabled: _disabled\n          };\n        }\n      },\n      firstDayOfWeek: function firstDayOfWeek(_firstDayOfWeek) {\n        _firstDayOfWeek = toInteger(_firstDayOfWeek);\n        if (isInteger(_firstDayOfWeek) && _firstDayOfWeek >= 0 && _this7._state.firstDayOfWeek !== _firstDayOfWeek) {\n          return {\n            firstDayOfWeek: _firstDayOfWeek\n          };\n        }\n      },\n      focusVisible: function focusVisible(_focusVisible) {\n        if (_this7._state.focusVisible !== _focusVisible && !_this7._state.disabled) {\n          return {\n            focusVisible: _focusVisible\n          };\n        }\n      },\n      markDisabled: function markDisabled(_markDisabled) {\n        if (_this7._state.markDisabled !== _markDisabled) {\n          return {\n            markDisabled: _markDisabled\n          };\n        }\n      },\n      maxDate: function maxDate(date) {\n        var maxDate = _this7.toValidDate(date, null);\n        if (isChangedDate(_this7._state.maxDate, maxDate)) {\n          return {\n            maxDate: maxDate\n          };\n        }\n      },\n      minDate: function minDate(date) {\n        var minDate = _this7.toValidDate(date, null);\n        if (isChangedDate(_this7._state.minDate, minDate)) {\n          return {\n            minDate: minDate\n          };\n        }\n      },\n      navigation: function navigation(_navigation) {\n        if (_this7._state.navigation !== _navigation) {\n          return {\n            navigation: _navigation\n          };\n        }\n      },\n      outsideDays: function outsideDays(_outsideDays) {\n        if (_this7._state.outsideDays !== _outsideDays) {\n          return {\n            outsideDays: _outsideDays\n          };\n        }\n      }\n    };\n    this._model$ = new Subject();\n    this._dateSelect$ = new Subject();\n    this._state = {\n      disabled: false,\n      displayMonths: 1,\n      firstDayOfWeek: 1,\n      focusVisible: false,\n      months: [],\n      navigation: 'select',\n      outsideDays: 'visible',\n      prevDisabled: false,\n      nextDisabled: false,\n      selectBoxes: {\n        years: [],\n        months: []\n      },\n      selectedDate: null\n    };\n  }\n  _createClass(NgbDatepickerService, [{\n    key: \"model$\",\n    get: function get() {\n      return this._model$.pipe(filter(function (model) {\n        return model.months.length > 0;\n      }));\n    }\n  }, {\n    key: \"dateSelect$\",\n    get: function get() {\n      return this._dateSelect$.pipe(filter(function (date) {\n        return date !== null;\n      }));\n    }\n  }, {\n    key: \"set\",\n    value: function set(options) {\n      var _this8 = this;\n      var patch = Object.keys(options).map(function (key) {\n        return _this8._VALIDATORS[key](options[key]);\n      }).reduce(function (obj, part) {\n        return Object.assign(Object.assign({}, obj), part);\n      }, {});\n      if (Object.keys(patch).length > 0) {\n        this._nextState(patch);\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus(date) {\n      if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n        this._nextState({\n          focusDate: date\n        });\n      }\n    }\n  }, {\n    key: \"focusSelect\",\n    value: function focusSelect() {\n      if (isDateSelectable(this._state.focusDate, this._state)) {\n        this.select(this._state.focusDate, {\n          emitEvent: true\n        });\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open(date) {\n      var firstDate = this.toValidDate(date, this._calendar.getToday());\n      if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n        this._nextState({\n          firstDate: firstDate\n        });\n      }\n    }\n  }, {\n    key: \"select\",\n    value: function select(date) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var selectedDate = this.toValidDate(date, null);\n      if (!this._state.disabled) {\n        if (isChangedDate(this._state.selectedDate, selectedDate)) {\n          this._nextState({\n            selectedDate: selectedDate\n          });\n        }\n        if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n          this._dateSelect$.next(selectedDate);\n        }\n      }\n    }\n  }, {\n    key: \"toValidDate\",\n    value: function toValidDate(date, defaultValue) {\n      var ngbDate = NgbDate.from(date);\n      if (defaultValue === undefined) {\n        defaultValue = this._calendar.getToday();\n      }\n      return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(struct) {\n      var _iterator = _createForOfIteratorHelper(this._state.months),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var month = _step.value;\n          if (struct.month === month.number && struct.year === month.year) {\n            return month;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      throw new Error(\"month \".concat(struct.month, \" of year \").concat(struct.year, \" not found\"));\n    }\n  }, {\n    key: \"_nextState\",\n    value: function _nextState(patch) {\n      var newState = this._updateState(patch);\n      this._patchContexts(newState);\n      this._state = newState;\n      this._model$.next(this._state);\n    }\n  }, {\n    key: \"_patchContexts\",\n    value: function _patchContexts(state) {\n      var months = state.months,\n        displayMonths = state.displayMonths,\n        selectedDate = state.selectedDate,\n        focusDate = state.focusDate,\n        focusVisible = state.focusVisible,\n        disabled = state.disabled,\n        outsideDays = state.outsideDays;\n      state.months.forEach(function (month) {\n        month.weeks.forEach(function (week) {\n          week.days.forEach(function (day) {\n            // patch focus flag\n            if (focusDate) {\n              day.context.focused = focusDate.equals(day.date) && focusVisible;\n            }\n            // calculating tabindex\n            day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n            // override context disabled\n            if (disabled === true) {\n              day.context.disabled = true;\n            }\n            // patch selection flag\n            if (selectedDate !== undefined) {\n              day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n            }\n            // visibility\n            if (month.number !== day.date.month) {\n              day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' || displayMonths > 1 && day.date.after(months[0].firstDate) && day.date.before(months[displayMonths - 1].lastDate);\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_updateState\",\n    value: function _updateState(patch) {\n      // patching fields\n      var state = Object.assign({}, this._state, patch);\n      var startDate = state.firstDate;\n      // min/max dates changed\n      if ('minDate' in patch || 'maxDate' in patch) {\n        checkMinBeforeMax(state.minDate, state.maxDate);\n        state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n        state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n        startDate = state.focusDate;\n      }\n      // disabled\n      if ('disabled' in patch) {\n        state.focusVisible = false;\n      }\n      // initial rebuild via 'select()'\n      if ('selectedDate' in patch && this._state.months.length === 0) {\n        startDate = state.selectedDate;\n      }\n      // terminate early if only focus visibility was changed\n      if ('focusVisible' in patch) {\n        return state;\n      }\n      // focus date changed\n      if ('focusDate' in patch) {\n        state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n        startDate = state.focusDate;\n        // nothing to rebuild if only focus changed and it is still visible\n        if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) && !state.focusDate.after(state.lastDate)) {\n          return state;\n        }\n      }\n      // first date changed\n      if ('firstDate' in patch) {\n        state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n        startDate = state.firstDate;\n      }\n      // rebuilding months\n      if (startDate) {\n        var forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n        var months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n        // updating months and boundary dates\n        state.months = months;\n        state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n        state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n        // reset selected date if 'markDisabled' returns true\n        if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n          state.selectedDate = null;\n        }\n        // adjusting focus after months were built\n        if ('firstDate' in patch) {\n          if (state.focusDate === undefined || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n            state.focusDate = startDate;\n          }\n        }\n        // adjusting months/years for the select box navigation\n        var yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n        var monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n        if (state.navigation === 'select') {\n          // years ->  boundaries (min/max were changed)\n          if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n            state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n          }\n          // months -> when current year or boundaries change\n          if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n            state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n          }\n        } else {\n          state.selectBoxes = {\n            years: [],\n            months: []\n          };\n        }\n        // updating navigation arrows -> boundaries change (min/max) or month/year changes\n        if ((state.navigation === 'arrows' || state.navigation === 'select') && (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n          state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n          state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n        }\n      }\n      return state;\n    }\n  }]);\n  return NgbDatepickerService;\n}();\nNgbDatepickerService.ɵfac = function NgbDatepickerService_Factory(t) {\n  return new (t || NgbDatepickerService)(ɵngcc0.ɵɵinject(NgbCalendar), ɵngcc0.ɵɵinject(NgbDatepickerI18n));\n};\nNgbDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerService,\n  factory: function factory(t) {\n    return NgbDatepickerService.ɵfac(t);\n  }\n});\nNgbDatepickerService.ctorParameters = function () {\n  return [{\n    type: NgbCalendar\n  }, {\n    type: NgbDatepickerI18n\n  }];\n};\n\n// clang-format on\nvar NavigationEvent;\n(function (NavigationEvent) {\n  NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n  NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nvar NgbDatepickerConfig = /*#__PURE__*/_createClass(function NgbDatepickerConfig() {\n  _classCallCheck(this, NgbDatepickerConfig);\n  this.displayMonths = 1;\n  this.firstDayOfWeek = 1;\n  this.navigation = 'select';\n  this.outsideDays = 'visible';\n  this.showWeekdays = true;\n  this.showWeekNumbers = false;\n});\nNgbDatepickerConfig.ɵfac = function NgbDatepickerConfig_Factory(t) {\n  return new (t || NgbDatepickerConfig)();\n};\nNgbDatepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerConfig_Factory() {\n    return new NgbDatepickerConfig();\n  },\n  token: NgbDatepickerConfig,\n  providedIn: \"root\"\n});\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\nvar NgbDateAdapter = /*#__PURE__*/_createClass(function NgbDateAdapter() {\n  _classCallCheck(this, NgbDateAdapter);\n});\nNgbDateAdapter.ɵfac = function NgbDateAdapter_Factory(t) {\n  return new (t || NgbDateAdapter)();\n};\nNgbDateAdapter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY,\n  token: NgbDateAdapter,\n  providedIn: \"root\"\n});\nvar NgbDateStructAdapter = /*#__PURE__*/function (_NgbDateAdapter) {\n  _inherits(NgbDateStructAdapter, _NgbDateAdapter);\n  var _super3 = _createSuper(NgbDateStructAdapter);\n  function NgbDateStructAdapter() {\n    _classCallCheck(this, NgbDateStructAdapter);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(NgbDateStructAdapter, [{\n    key: \"fromModel\",\n    value:\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    function fromModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n        year: date.year,\n        month: date.month,\n        day: date.day\n      } : null;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n  }, {\n    key: \"toModel\",\n    value: function toModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n        year: date.year,\n        month: date.month,\n        day: date.day\n      } : null;\n    }\n  }]);\n  return NgbDateStructAdapter;\n}(NgbDateAdapter);\nNgbDateStructAdapter.ɵfac = function NgbDateStructAdapter_Factory(t) {\n  return ɵNgbDateStructAdapter_BaseFactory(t || NgbDateStructAdapter);\n};\nNgbDateStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateStructAdapter,\n  factory: function factory(t) {\n    return NgbDateStructAdapter.ɵfac(t);\n  }\n});\nvar NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbDatepicker;\n  }),\n  multi: true\n};\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\nvar NgbDatepickerContent = /*#__PURE__*/_createClass(function NgbDatepickerContent(templateRef) {\n  _classCallCheck(this, NgbDatepickerContent);\n  this.templateRef = templateRef;\n});\nNgbDatepickerContent.ɵfac = function NgbDatepickerContent_Factory(t) {\n  return new (t || NgbDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbDatepickerContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDatepickerContent,\n  selectors: [[\"ng-template\", \"ngbDatepickerContent\", \"\"]]\n});\nNgbDatepickerContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\nvar NgbDatepicker = /*#__PURE__*/function () {\n  function NgbDatepicker(_service, _calendar, i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n    var _this9 = this;\n    _classCallCheck(this, NgbDatepicker);\n    this._service = _service;\n    this._calendar = _calendar;\n    this.i18n = i18n;\n    this._elementRef = _elementRef;\n    this._ngbDateAdapter = _ngbDateAdapter;\n    this._ngZone = _ngZone;\n    this._destroyed$ = new Subject();\n    this._publicState = {};\n    /**\n     * An event emitted right before the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n    this.navigate = new EventEmitter();\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 5.2.0\n     */\n    this.dateSelect = new EventEmitter();\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @deprecated 6.0.0 Please use 'dateSelect' output instead due to collision with native\n     * 'select' event.\n     */\n    this.select = this.dateSelect;\n    this.onChange = function (_) {};\n    this.onTouched = function () {};\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate'].forEach(function (input) {\n      return _this9[input] = config[input];\n    });\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(function (date) {\n      _this9.dateSelect.emit(date);\n    });\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(function (model) {\n      var newDate = model.firstDate;\n      var oldDate = _this9.model ? _this9.model.firstDate : null;\n      // update public state\n      _this9._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(function (viewModel) {\n          return viewModel.firstDate;\n        })\n      };\n      var navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        _this9.navigate.emit({\n          current: oldDate ? {\n            year: oldDate.year,\n            month: oldDate.month\n          } : null,\n          next: {\n            year: newDate.year,\n            month: newDate.month\n          },\n          preventDefault: function preventDefault() {\n            return navigationPrevented = true;\n          }\n        });\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          _this9._service.open(oldDate);\n          return;\n        }\n      }\n      var newSelectedDate = model.selectedDate;\n      var newFocusedDate = model.focusDate;\n      var oldFocusedDate = _this9.model ? _this9.model.focusDate : null;\n      _this9.model = model;\n      // handling selection change\n      if (isChangedDate(newSelectedDate, _this9._controlValue)) {\n        _this9._controlValue = newSelectedDate;\n        _this9.onTouched();\n        _this9.onChange(_this9._ngbDateAdapter.toModel(newSelectedDate));\n      }\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        _this9.focus();\n      }\n      cd.markForCheck();\n    });\n  }\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n  _createClass(NgbDatepicker, [{\n    key: \"state\",\n    get: function get() {\n      return this._publicState;\n    }\n    /**\n     *  Returns the calendar service used in the specific datepicker instance.\n     *\n     *  @since 5.3.0\n     */\n  }, {\n    key: \"calendar\",\n    get: function get() {\n      return this._calendar;\n    }\n    /**\n     *  Focuses on given date.\n     */\n  }, {\n    key: \"focusDate\",\n    value: function focusDate(date) {\n      this._service.focus(NgbDate.from(date));\n    }\n    /**\n     *  Selects focused date.\n     */\n  }, {\n    key: \"focusSelect\",\n    value: function focusSelect() {\n      this._service.focusSelect();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _this10 = this;\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n        var elementToFocus = _this10._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n        if (elementToFocus) {\n          elementToFocus.focus();\n        }\n      });\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(date) {\n      this._service.open(NgbDate.from(date ? date.day ? date : Object.assign(Object.assign({}, date), {\n        day: 1\n      }) : null));\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this11 = this;\n      this._ngZone.runOutsideAngular(function () {\n        var focusIns$ = fromEvent(_this11._contentEl.nativeElement, 'focusin');\n        var focusOuts$ = fromEvent(_this11._contentEl.nativeElement, 'focusout');\n        var nativeElement = _this11._elementRef.nativeElement;\n        // we're changing 'focusVisible' only when entering or leaving months view\n        // and ignoring all focus events where both 'target' and 'related' target are day cells\n        merge(focusIns$, focusOuts$).pipe(filter(function (_ref5) {\n          var target = _ref5.target,\n            relatedTarget = _ref5.relatedTarget;\n          return !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') && nativeElement.contains(target) && nativeElement.contains(relatedTarget));\n        }), takeUntil(_this11._destroyed$)).subscribe(function (_ref6) {\n          var type = _ref6.type;\n          return _this11._ngZone.run(function () {\n            return _this11._service.set({\n              focusVisible: type === 'focusin'\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed$.next();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this12 = this;\n      if (this.model === undefined) {\n        var inputs = {};\n        ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].forEach(function (name) {\n          return inputs[name] = _this12[name];\n        });\n        this._service.set(inputs);\n        this.navigateTo(this.startDate);\n      }\n      if (!this.dayTemplate) {\n        this.dayTemplate = this._defaultDayTemplate;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this13 = this;\n      var inputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].filter(function (name) {\n        return name in changes;\n      }).forEach(function (name) {\n        return inputs[name] = _this13[name];\n      });\n      this._service.set(inputs);\n      if ('startDate' in changes) {\n        var _changes$startDate = changes.startDate,\n          currentValue = _changes$startDate.currentValue,\n          previousValue = _changes$startDate.previousValue;\n        if (isChangedMonth(previousValue, currentValue)) {\n          this.navigateTo(this.startDate);\n        }\n      }\n    }\n  }, {\n    key: \"onDateSelect\",\n    value: function onDateSelect(date) {\n      this._service.focus(date);\n      this._service.select(date, {\n        emitEvent: true\n      });\n    }\n  }, {\n    key: \"onNavigateDateSelect\",\n    value: function onNavigateDateSelect(date) {\n      this._service.open(date);\n    }\n  }, {\n    key: \"onNavigateEvent\",\n    value: function onNavigateEvent(event) {\n      switch (event) {\n        case NavigationEvent.PREV:\n          this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n          break;\n        case NavigationEvent.NEXT:\n          this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n          break;\n      }\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(disabled) {\n      this._service.set({\n        disabled: disabled\n      });\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n      this._service.select(this._controlValue);\n    }\n  }]);\n  return NgbDatepicker;\n}();\nNgbDatepicker.ɵfac = function NgbDatepicker_Factory(t) {\n  return new (t || NgbDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nNgbDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepicker,\n  selectors: [[\"ngb-datepicker\"]],\n  contentQueries: function NgbDatepicker_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, NgbDatepickerContent, true);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  viewQuery: function NgbDatepicker_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c10, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c11, true);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._defaultDayTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentEl = _t.first);\n    }\n  },\n  inputs: {\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    maxDate: \"maxDate\",\n    minDate: \"minDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    showWeekdays: \"showWeekdays\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    dateSelect: \"dateSelect\",\n    select: \"select\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 5,\n  consts: [[\"defaultDayTemplate\", \"\"], [\"defaultContentTemplate\", \"\"], [1, \"ngb-dp-header\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\", 4, \"ngIf\"], [1, \"ngb-dp-content\"], [\"content\", \"\"], [3, \"ngTemplateOutlet\"], [\"ngbDatepickerDayView\", \"\", 3, \"date\", \"currentMonth\", \"selected\", \"disabled\", \"focused\"], [\"class\", \"ngb-dp-month\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-month\"], [\"class\", \"ngb-dp-month-name\", 4, \"ngIf\"], [3, \"month\"], [1, \"ngb-dp-month-name\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\"]],\n  template: function NgbDatepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbDatepicker_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbDatepicker_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(4, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(5, NgbDatepicker_ngb_datepicker_navigation_5_Template, 1, 7, \"ngb-datepicker-navigation\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 4, 5);\n      ɵngcc0.ɵɵtemplate(8, NgbDatepicker_ng_template_8_Template, 0, 0, \"ng-template\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, NgbDatepicker_ng_template_9_Template, 0, 0, \"ng-template\", 6);\n    }\n    if (rf & 2) {\n      var _r2 = ɵngcc0.ɵɵreference(3);\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.navigation !== \"none\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"ngb-dp-months\", !ctx.contentTemplate);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx.contentTemplate == null ? null : ctx.contentTemplate.templateRef) || _r2);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, NgbDatepickerDayView, ɵngcc1.NgForOf, NgbDatepickerMonth, NgbDatepickerNavigation];\n  },\n  styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbDatepicker.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerService\n  }, {\n    type: NgbCalendar\n  }, {\n    type: NgbDatepickerI18n\n  }, {\n    type: NgbDatepickerConfig\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: NgbDateAdapter\n  }, {\n    type: NgZone\n  }];\n};\n__decorate([ViewChild('defaultDayTemplate', {\n  static: true\n})], NgbDatepicker.prototype, \"_defaultDayTemplate\", void 0);\n__decorate([ViewChild('content', {\n  static: true\n})], NgbDatepicker.prototype, \"_contentEl\", void 0);\n__decorate([ContentChild(NgbDatepickerContent, {\n  static: true\n})], NgbDatepicker.prototype, \"contentTemplate\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"dayTemplate\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"dayTemplateData\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"displayMonths\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"firstDayOfWeek\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"footerTemplate\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"markDisabled\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"maxDate\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"minDate\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"navigation\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"outsideDays\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"showWeekdays\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"showWeekNumbers\", void 0);\n__decorate([Input()], NgbDatepicker.prototype, \"startDate\", void 0);\n__decorate([Output()], NgbDatepicker.prototype, \"navigate\", void 0);\n__decorate([Output()], NgbDatepicker.prototype, \"dateSelect\", void 0);\n__decorate([Output()], NgbDatepicker.prototype, \"select\", void 0);\nvar Key;\n(function (Key) {\n  Key[Key[\"Tab\"] = 9] = \"Tab\";\n  Key[Key[\"Enter\"] = 13] = \"Enter\";\n  Key[Key[\"Escape\"] = 27] = \"Escape\";\n  Key[Key[\"Space\"] = 32] = \"Space\";\n  Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n  Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n  Key[Key[\"End\"] = 35] = \"End\";\n  Key[Key[\"Home\"] = 36] = \"Home\";\n  Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n  Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n  Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n  Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\nvar NgbDatepickerKeyboardService = /*#__PURE__*/function () {\n  function NgbDatepickerKeyboardService() {\n    _classCallCheck(this, NgbDatepickerKeyboardService);\n  }\n  _createClass(NgbDatepickerKeyboardService, [{\n    key: \"processKey\",\n    value:\n    /**\n     * Processes a keyboard event.\n     */\n    function processKey(event, datepicker) {\n      var state = datepicker.state,\n        calendar = datepicker.calendar;\n      // tslint:disable-next-line:deprecation\n      switch (event.which) {\n        case Key.PageUp:\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n          break;\n        case Key.PageDown:\n          datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n          break;\n        case Key.End:\n          datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n          break;\n        case Key.Home:\n          datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n          break;\n        case Key.ArrowLeft:\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n          break;\n        case Key.ArrowUp:\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n          break;\n        case Key.ArrowRight:\n          datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n          break;\n        case Key.ArrowDown:\n          datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n          break;\n        case Key.Enter:\n        case Key.Space:\n          datepicker.focusSelect();\n          break;\n        default:\n          return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }]);\n  return NgbDatepickerKeyboardService;\n}();\nNgbDatepickerKeyboardService.ɵfac = function NgbDatepickerKeyboardService_Factory(t) {\n  return new (t || NgbDatepickerKeyboardService)();\n};\nNgbDatepickerKeyboardService.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerKeyboardService_Factory() {\n    return new NgbDatepickerKeyboardService();\n  },\n  token: NgbDatepickerKeyboardService,\n  providedIn: \"root\"\n});\n\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\nvar NgbDatepickerMonth = /*#__PURE__*/function () {\n  function NgbDatepickerMonth(i18n, datepicker, _keyboardService, _service) {\n    _classCallCheck(this, NgbDatepickerMonth);\n    this.i18n = i18n;\n    this.datepicker = datepicker;\n    this._keyboardService = _keyboardService;\n    this._service = _service;\n  }\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n  _createClass(NgbDatepickerMonth, [{\n    key: \"month\",\n    set: function set(month) {\n      this.viewModel = this._service.getMonth(month);\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this._keyboardService.processKey(event, this.datepicker);\n    }\n  }, {\n    key: \"doSelect\",\n    value: function doSelect(day) {\n      if (!day.context.disabled && !day.hidden) {\n        this.datepicker.onDateSelect(day.date);\n      }\n    }\n  }]);\n  return NgbDatepickerMonth;\n}();\nNgbDatepickerMonth.ɵfac = function NgbDatepickerMonth_Factory(t) {\n  return new (t || NgbDatepickerMonth)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(NgbDatepicker), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerKeyboardService), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService));\n};\nNgbDatepickerMonth.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerMonth,\n  selectors: [[\"ngb-datepicker-month\"]],\n  hostAttrs: [\"role\", \"grid\"],\n  hostBindings: function NgbDatepickerMonth_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function NgbDatepickerMonth_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    month: \"month\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"ngb-dp-week ngb-dp-weekdays\", \"role\", \"row\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"row\", 1, \"ngb-dp-week\", \"ngb-dp-weekdays\"], [\"class\", \"ngb-dp-weekday ngb-dp-showweek\", 4, \"ngIf\"], [\"class\", \"ngb-dp-weekday small\", \"role\", \"columnheader\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-weekday\", \"ngb-dp-showweek\"], [\"role\", \"columnheader\", 1, \"ngb-dp-weekday\", \"small\"], [\"class\", \"ngb-dp-week\", \"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\", 1, \"ngb-dp-week\"], [\"class\", \"ngb-dp-week-number small text-muted\", 4, \"ngIf\"], [\"class\", \"ngb-dp-day\", \"role\", \"gridcell\", 3, \"disabled\", \"tabindex\", \"hidden\", \"ngb-dp-today\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-week-number\", \"small\", \"text-muted\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"tabindex\", \"click\"], [3, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbDatepickerMonth_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_div_0_Template, 3, 2, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.datepicker.showWeekdays);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.viewModel.weeks);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"],\n  encapsulation: 2\n});\nNgbDatepickerMonth.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }, {\n    type: NgbDatepicker\n  }, {\n    type: NgbDatepickerKeyboardService\n  }, {\n    type: NgbDatepickerService\n  }];\n};\n__decorate([Input()], NgbDatepickerMonth.prototype, \"month\", null);\nvar NgbDatepickerNavigation = /*#__PURE__*/function () {\n  function NgbDatepickerNavigation(i18n) {\n    _classCallCheck(this, NgbDatepickerNavigation);\n    this.i18n = i18n;\n    this.navigation = NavigationEvent;\n    this.months = [];\n    this.navigate = new EventEmitter();\n    this.select = new EventEmitter();\n  }\n  _createClass(NgbDatepickerNavigation, [{\n    key: \"onClickPrev\",\n    value: function onClickPrev(event) {\n      event.currentTarget.focus();\n      this.navigate.emit(this.navigation.PREV);\n    }\n  }, {\n    key: \"onClickNext\",\n    value: function onClickNext(event) {\n      event.currentTarget.focus();\n      this.navigate.emit(this.navigation.NEXT);\n    }\n  }]);\n  return NgbDatepickerNavigation;\n}();\nNgbDatepickerNavigation.ɵfac = function NgbDatepickerNavigation_Factory(t) {\n  return new (t || NgbDatepickerNavigation)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\nNgbDatepickerNavigation.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigation,\n  selectors: [[\"ngb-datepicker-navigation\"]],\n  inputs: {\n    months: \"months\",\n    date: \"date\",\n    disabled: \"disabled\",\n    showSelect: \"showSelect\",\n    prevDisabled: \"prevDisabled\",\n    nextDisabled: \"nextDisabled\",\n    selectBoxes: \"selectBoxes\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    select: \"select\"\n  },\n  decls: 8,\n  vars: 4,\n  consts: function consts() {\n    var i18n_12;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13 = goog.getMsg(\"Previous month\");\n      i18n_12 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13;\n    } else {\n      i18n_12 = $localize(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\":@@ngb.datepicker.previous-month\\u241Fc3b08b07b5ab98e7cdcf18df39355690ab7d3884\\u241F8586908745456864217:Previous month\"])));\n    }\n    var i18n_14;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_15 = goog.getMsg(\"Previous month\");\n      i18n_14 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_15;\n    } else {\n      i18n_14 = $localize(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\":@@ngb.datepicker.previous-month\\u241Fc3b08b07b5ab98e7cdcf18df39355690ab7d3884\\u241F8586908745456864217:Previous month\"])));\n    }\n    var i18n_16;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17 = goog.getMsg(\"Next month\");\n      i18n_16 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17;\n    } else {\n      i18n_16 = $localize(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\":@@ngb.datepicker.next-month\\u241F4bd046985cfe13040d5ef0cd881edce0968a111a\\u241F3628374603023447227:Next month\"])));\n    }\n    var i18n_18;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_19 = goog.getMsg(\"Next month\");\n      i18n_18 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_19;\n    } else {\n      i18n_18 = $localize(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\":@@ngb.datepicker.next-month\\u241F4bd046985cfe13040d5ef0cd881edce0968a111a\\u241F3628374603023447227:Next month\"])));\n    }\n    return [[1, \"ngb-dp-arrow\"], [\"type\", \"button\", \"aria-label\", i18n_12, \"title\", i18n_14, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-chevron\"], [\"class\", \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngb-dp-arrow\", \"right\"], [\"type\", \"button\", \"aria-label\", i18n_16, \"title\", i18n_18, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"ngb-dp-arrow\", 4, \"ngIf\"], [1, \"ngb-dp-month-name\"]];\n  },\n  template: function NgbDatepickerNavigation_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_1_listener($event) {\n        return ctx.onClickPrev($event);\n      });\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template, 1, 4, \"ngb-datepicker-navigation-select\", 3);\n      ɵngcc0.ɵɵtemplate(4, NgbDatepickerNavigation_4_Template, 1, 1, undefined, 4);\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵelementStart(6, \"button\", 6);\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_6_listener($event) {\n        return ctx.onClickNext($event);\n      });\n      ɵngcc0.ɵɵelement(7, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.prevDisabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSelect);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.showSelect);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.nextDisabled);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, NgbDatepickerNavigationSelect, ɵngcc1.NgForOf];\n  },\n  styles: [\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbDatepickerNavigation.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }];\n};\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"date\", void 0);\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"disabled\", void 0);\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"months\", void 0);\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"showSelect\", void 0);\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"prevDisabled\", void 0);\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"nextDisabled\", void 0);\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"selectBoxes\", void 0);\n__decorate([Output()], NgbDatepickerNavigation.prototype, \"navigate\", void 0);\n__decorate([Output()], NgbDatepickerNavigation.prototype, \"select\", void 0);\nvar isContainedIn = function isContainedIn(element, array) {\n  return array ? array.some(function (item) {\n    return item.contains(element);\n  }) : false;\n};\nvar ɵ0 = isContainedIn;\nvar matchesSelectorIfAny = function matchesSelectorIfAny(element, selector) {\n  return !selector || closest(element, selector) != null;\n};\nvar ɵ1 = matchesSelectorIfAny;\nvar ɵ2 = function ɵ2() {\n  var isIOS = function isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) || /Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2;\n  };\n  var isAndroid = function isAndroid() {\n    return /Android/.test(navigator.userAgent);\n  };\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n};\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nvar isMobile = ɵ2();\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nvar wrapAsyncForMobile = function wrapAsyncForMobile(fn) {\n  return isMobile ? function () {\n    return setTimeout(function () {\n      return fn();\n    }, 100);\n  } : fn;\n};\nvar ɵ3 = wrapAsyncForMobile;\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(function () {\n      var shouldCloseOnClick = function shouldCloseOnClick(event) {\n        var element = event.target;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */{\n            return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n          }\n      };\n      var escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$),\n      // tslint:disable-next-line:deprecation\n      filter(function (e) {\n        return e.which === Key.Escape;\n      }), tap(function (e) {\n        return e.preventDefault();\n      }));\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      var mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n      var closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n          _ = _ref8[0],\n          shouldClose = _ref8[1];\n        return shouldClose;\n      }), delay(0), takeUntil(closed$));\n      race([escapes$, closeableClicks$]).subscribe(function () {\n        return zone.run(close);\n      });\n    }));\n  }\n}\nvar FOCUSABLE_ELEMENTS_SELECTOR = ['a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element) {\n  var list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter(function (el) {\n    return el.tabIndex !== -1;\n  });\n  return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nvar ngbFocusTrap = function ngbFocusTrap(zone, element, stopFocusTrap$) {\n  var refocusOnClick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  zone.runOutsideAngular(function () {\n    // last focused element\n    var lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(function (e) {\n      return e.target;\n    }));\n    // 'tab' / 'shift+tab' stream\n    fromEvent(element, 'keydown').pipe(takeUntil(stopFocusTrap$),\n    // tslint:disable:deprecation\n    filter(function (e) {\n      return e.which === Key.Tab;\n    }),\n    // tslint:enable:deprecation\n    withLatestFrom(lastFocusedElement$)).subscribe(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 2),\n        tabEvent = _ref10[0],\n        focusedElement = _ref10[1];\n      var _getFocusableBoundary = getFocusableBoundaryElements(element),\n        _getFocusableBoundary2 = _slicedToArray(_getFocusableBoundary, 2),\n        first = _getFocusableBoundary2[0],\n        last = _getFocusableBoundary2[1];\n      if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n        last.focus();\n        tabEvent.preventDefault();\n      }\n      if (focusedElement === last && !tabEvent.shiftKey) {\n        first.focus();\n        tabEvent.preventDefault();\n      }\n    });\n    // inside click\n    if (refocusOnClick) {\n      fromEvent(element, 'click').pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(function (arr) {\n        return arr[1];\n      })).subscribe(function (lastFocusedElement) {\n        return lastFocusedElement.focus();\n      });\n    }\n  });\n};\n\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nvar Positioning = /*#__PURE__*/function () {\n  function Positioning() {\n    _classCallCheck(this, Positioning);\n  }\n  _createClass(Positioning, [{\n    key: \"getAllStyles\",\n    value: function getAllStyles(element) {\n      return window.getComputedStyle(element);\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(element, prop) {\n      return this.getAllStyles(element)[prop];\n    }\n  }, {\n    key: \"isStaticPositioned\",\n    value: function isStaticPositioned(element) {\n      return (this.getStyle(element, 'position') || 'static') === 'static';\n    }\n  }, {\n    key: \"offsetParent\",\n    value: function offsetParent(element) {\n      var offsetParentEl = element.offsetParent || document.documentElement;\n      while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n        offsetParentEl = offsetParentEl.offsetParent;\n      }\n      return offsetParentEl || document.documentElement;\n    }\n  }, {\n    key: \"position\",\n    value: function position(element) {\n      var round = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var elPosition;\n      var parentOffset = {\n        width: 0,\n        height: 0,\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n      };\n      if (this.getStyle(element, 'position') === 'fixed') {\n        elPosition = element.getBoundingClientRect();\n        elPosition = {\n          top: elPosition.top,\n          bottom: elPosition.bottom,\n          left: elPosition.left,\n          right: elPosition.right,\n          height: elPosition.height,\n          width: elPosition.width\n        };\n      } else {\n        var offsetParentEl = this.offsetParent(element);\n        elPosition = this.offset(element, false);\n        if (offsetParentEl !== document.documentElement) {\n          parentOffset = this.offset(offsetParentEl, false);\n        }\n        parentOffset.top += offsetParentEl.clientTop;\n        parentOffset.left += offsetParentEl.clientLeft;\n      }\n      elPosition.top -= parentOffset.top;\n      elPosition.bottom -= parentOffset.top;\n      elPosition.left -= parentOffset.left;\n      elPosition.right -= parentOffset.left;\n      if (round) {\n        elPosition.top = Math.round(elPosition.top);\n        elPosition.bottom = Math.round(elPosition.bottom);\n        elPosition.left = Math.round(elPosition.left);\n        elPosition.right = Math.round(elPosition.right);\n      }\n      return elPosition;\n    }\n  }, {\n    key: \"offset\",\n    value: function offset(element) {\n      var round = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var elBcr = element.getBoundingClientRect();\n      var viewportOffset = {\n        top: window.pageYOffset - document.documentElement.clientTop,\n        left: window.pageXOffset - document.documentElement.clientLeft\n      };\n      var elOffset = {\n        height: elBcr.height || element.offsetHeight,\n        width: elBcr.width || element.offsetWidth,\n        top: elBcr.top + viewportOffset.top,\n        bottom: elBcr.bottom + viewportOffset.top,\n        left: elBcr.left + viewportOffset.left,\n        right: elBcr.right + viewportOffset.left\n      };\n      if (round) {\n        elOffset.height = Math.round(elOffset.height);\n        elOffset.width = Math.round(elOffset.width);\n        elOffset.top = Math.round(elOffset.top);\n        elOffset.bottom = Math.round(elOffset.bottom);\n        elOffset.left = Math.round(elOffset.left);\n        elOffset.right = Math.round(elOffset.right);\n      }\n      return elOffset;\n    }\n    /*\n      Return false if the element to position is outside the viewport\n    */\n  }, {\n    key: \"positionElements\",\n    value: function positionElements(hostElement, targetElement, placement, appendToBody) {\n      var _placement$split = placement.split('-'),\n        _placement$split2 = _slicedToArray(_placement$split, 2),\n        _placement$split2$ = _placement$split2[0],\n        placementPrimary = _placement$split2$ === void 0 ? 'top' : _placement$split2$,\n        _placement$split2$2 = _placement$split2[1],\n        placementSecondary = _placement$split2$2 === void 0 ? 'center' : _placement$split2$2;\n      var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n      var targetElStyles = this.getAllStyles(targetElement);\n      var marginTop = parseFloat(targetElStyles.marginTop);\n      var marginBottom = parseFloat(targetElStyles.marginBottom);\n      var marginLeft = parseFloat(targetElStyles.marginLeft);\n      var marginRight = parseFloat(targetElStyles.marginRight);\n      var topPosition = 0;\n      var leftPosition = 0;\n      switch (placementPrimary) {\n        case 'top':\n          topPosition = hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom);\n          break;\n        case 'bottom':\n          topPosition = hostElPosition.top + hostElPosition.height;\n          break;\n        case 'left':\n          leftPosition = hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight);\n          break;\n        case 'right':\n          leftPosition = hostElPosition.left + hostElPosition.width;\n          break;\n      }\n      switch (placementSecondary) {\n        case 'top':\n          topPosition = hostElPosition.top;\n          break;\n        case 'bottom':\n          topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n          break;\n        case 'left':\n          leftPosition = hostElPosition.left;\n          break;\n        case 'right':\n          leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n          break;\n        case 'center':\n          if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n            leftPosition = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n          } else {\n            topPosition = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n          }\n          break;\n      }\n      /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n      // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n      targetElement.style.transform = \"translate(\".concat(Math.round(leftPosition), \"px, \").concat(Math.round(topPosition), \"px)\");\n      // Check if the targetElement is inside the viewport\n      var targetElBCR = targetElement.getBoundingClientRect();\n      var html = document.documentElement;\n      var windowHeight = window.innerHeight || html.clientHeight;\n      var windowWidth = window.innerWidth || html.clientWidth;\n      return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth && targetElBCR.bottom <= windowHeight;\n    }\n  }]);\n  return Positioning;\n}();\nvar placementSeparator = /\\s+/;\nvar positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nfunction positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\n  var placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);\n  var allowedPlacements = ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom'];\n  var classList = targetElement.classList;\n  var addClassesToTarget = function addClassesToTarget(targetPlacement) {\n    var _targetPlacement$spli = targetPlacement.split('-'),\n      _targetPlacement$spli2 = _slicedToArray(_targetPlacement$spli, 2),\n      primary = _targetPlacement$spli2[0],\n      secondary = _targetPlacement$spli2[1];\n    var classes = [];\n    if (baseClass) {\n      classes.push(\"\".concat(baseClass, \"-\").concat(primary));\n      if (secondary) {\n        classes.push(\"\".concat(baseClass, \"-\").concat(primary, \"-\").concat(secondary));\n      }\n      classes.forEach(function (classname) {\n        classList.add(classname);\n      });\n    }\n    return classes;\n  };\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach(function (placementToRemove) {\n      classList.remove(\"\".concat(baseClass, \"-\").concat(placementToRemove));\n    });\n  }\n  // replace auto placement with other placements\n  var hasAuto = placementVals.findIndex(function (val) {\n    return val === 'auto';\n  });\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function (obj) {\n      if (placementVals.find(function (val) {\n        return val.search('^' + obj) !== -1;\n      }) == null) {\n        placementVals.splice(hasAuto++, 1, obj);\n      }\n    });\n  }\n  // coordinates where to position\n  // Required for transform:\n  var style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n  var testPlacement;\n  var isInViewport = false;\n  var _iterator2 = _createForOfIteratorHelper(placementVals),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      testPlacement = _step2.value;\n      var addedClasses = addClassesToTarget(testPlacement);\n      if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n        isInViewport = true;\n        break;\n      }\n      // Remove the baseClasses for further calculation\n      if (baseClass) {\n        addedClasses.forEach(function (classname) {\n          classList.remove(classname);\n        });\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n  return testPlacement;\n}\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\nvar NgbDateParserFormatter = /*#__PURE__*/_createClass(function NgbDateParserFormatter() {\n  _classCallCheck(this, NgbDateParserFormatter);\n});\nNgbDateParserFormatter.ɵfac = function NgbDateParserFormatter_Factory(t) {\n  return new (t || NgbDateParserFormatter)();\n};\nNgbDateParserFormatter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY,\n  token: NgbDateParserFormatter,\n  providedIn: \"root\"\n});\nvar NgbDateISOParserFormatter = /*#__PURE__*/function (_NgbDateParserFormatt) {\n  _inherits(NgbDateISOParserFormatter, _NgbDateParserFormatt);\n  var _super4 = _createSuper(NgbDateISOParserFormatter);\n  function NgbDateISOParserFormatter() {\n    _classCallCheck(this, NgbDateISOParserFormatter);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(NgbDateISOParserFormatter, [{\n    key: \"parse\",\n    value: function parse(value) {\n      if (value) {\n        var dateParts = value.trim().split('-');\n        if (dateParts.length === 1 && isNumber(dateParts[0])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: null,\n            day: null\n          };\n        } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: null\n          };\n        } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: toInteger(dateParts[2])\n          };\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"format\",\n    value: function format(date) {\n      return date ? \"\".concat(date.year, \"-\").concat(isNumber(date.month) ? padNumber(date.month) : '', \"-\").concat(isNumber(date.day) ? padNumber(date.day) : '') : '';\n    }\n  }]);\n  return NgbDateISOParserFormatter;\n}(NgbDateParserFormatter);\nNgbDateISOParserFormatter.ɵfac = function NgbDateISOParserFormatter_Factory(t) {\n  return ɵNgbDateISOParserFormatter_BaseFactory(t || NgbDateISOParserFormatter);\n};\nNgbDateISOParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateISOParserFormatter,\n  factory: function factory(t) {\n    return NgbDateISOParserFormatter.ɵfac(t);\n  }\n});\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\nvar NgbInputDatepickerConfig = /*#__PURE__*/function (_NgbDatepickerConfig) {\n  _inherits(NgbInputDatepickerConfig, _NgbDatepickerConfig);\n  var _super5 = _createSuper(NgbInputDatepickerConfig);\n  function NgbInputDatepickerConfig() {\n    var _this14;\n    _classCallCheck(this, NgbInputDatepickerConfig);\n    _this14 = _super5.apply(this, arguments);\n    _this14.autoClose = true;\n    _this14.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    _this14.restoreFocus = true;\n    return _this14;\n  }\n  return _createClass(NgbInputDatepickerConfig);\n}(NgbDatepickerConfig);\nNgbInputDatepickerConfig.ɵfac = function NgbInputDatepickerConfig_Factory(t) {\n  return ɵNgbInputDatepickerConfig_BaseFactory(t || NgbInputDatepickerConfig);\n};\nNgbInputDatepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbInputDatepickerConfig_Factory() {\n    return new NgbInputDatepickerConfig();\n  },\n  token: NgbInputDatepickerConfig,\n  providedIn: \"root\"\n});\nvar NGB_DATEPICKER_VALUE_ACCESSOR$1 = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbInputDatepicker;\n  }),\n  multi: true\n};\nvar NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(function () {\n    return NgbInputDatepicker;\n  }),\n  multi: true\n};\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\nvar NgbInputDatepicker = /*#__PURE__*/function () {\n  function NgbInputDatepicker(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n    var _this15 = this;\n    _classCallCheck(this, NgbInputDatepicker);\n    this._parserFormatter = _parserFormatter;\n    this._elRef = _elRef;\n    this._vcRef = _vcRef;\n    this._renderer = _renderer;\n    this._cfr = _cfr;\n    this._ngZone = _ngZone;\n    this._calendar = _calendar;\n    this._dateAdapter = _dateAdapter;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    this._cRef = null;\n    this._disabled = false;\n    this._elWithFocus = null;\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 1.1.1\n     */\n    this.dateSelect = new EventEmitter();\n    /**\n     * Event emitted right after the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n    this.navigate = new EventEmitter();\n    /**\n     * An event fired after closing datepicker window.\n     *\n     * @since 4.2.0\n     */\n    this.closed = new EventEmitter();\n    this._onChange = function (_) {};\n    this._onTouched = function () {};\n    this._validatorChange = function () {};\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(function (input) {\n      return _this15[input] = config[input];\n    });\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      return _this15._updatePopupPosition();\n    });\n  }\n  _createClass(NgbInputDatepicker, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = value === '' || value && value !== 'false';\n      if (this.isOpen()) {\n        this._cRef.instance.setDisabledState(this._disabled);\n      }\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this._validatorChange = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(c) {\n      var value = c.value;\n      if (value === null || value === undefined) {\n        return null;\n      }\n      var ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n      if (!this._calendar.isValid(ngbDate)) {\n        return {\n          'ngbDate': {\n            invalid: value\n          }\n        };\n      }\n      if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n        return {\n          'ngbDate': {\n            minDate: {\n              minDate: this.minDate,\n              actual: value\n            }\n          }\n        };\n      }\n      if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n        return {\n          'ngbDate': {\n            maxDate: {\n              maxDate: this.maxDate,\n              actual: value\n            }\n          }\n        };\n      }\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n      this._writeModelValue(this._model);\n    }\n  }, {\n    key: \"manualDateChange\",\n    value: function manualDateChange(value) {\n      var updateView = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var inputValueChanged = value !== this._inputValue;\n      if (inputValueChanged) {\n        this._inputValue = value;\n        this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n      }\n      if (inputValueChanged || !updateView) {\n        this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n      }\n      if (updateView && this._model) {\n        this._writeModelValue(this._model);\n      }\n    }\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return !!this._cRef;\n    }\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     */\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this16 = this;\n      if (!this.isOpen()) {\n        var cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n        this._cRef = this._vcRef.createComponent(cf);\n        this._applyPopupStyling(this._cRef.location.nativeElement);\n        this._applyDatepickerInputs(this._cRef.instance);\n        this._subscribeForDatepickerOutputs(this._cRef.instance);\n        this._cRef.instance.ngOnInit();\n        this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n        // date selection event handling\n        this._cRef.instance.registerOnChange(function (selectedDate) {\n          _this16.writeValue(selectedDate);\n          _this16._onChange(selectedDate);\n          _this16._onTouched();\n        });\n        this._cRef.changeDetectorRef.detectChanges();\n        this._cRef.instance.setDisabledState(this.disabled);\n        if (this.container === 'body') {\n          window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n        }\n        // focus handling\n        this._elWithFocus = this._document.activeElement;\n        ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n        this._cRef.instance.focus();\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n          return _this16.close();\n        }, this.closed, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n      }\n    }\n    /**\n     * Closes the datepicker popup.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.isOpen()) {\n        this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n        this._cRef = null;\n        this.closed.emit();\n        this._changeDetector.markForCheck();\n        // restore focus\n        var elementToFocus = this._elWithFocus;\n        if (isString(this.restoreFocus)) {\n          elementToFocus = this._document.querySelector(this.restoreFocus);\n        } else if (this.restoreFocus !== undefined) {\n          elementToFocus = this.restoreFocus;\n        }\n        // in IE document.activeElement can contain an object without 'focus()' sometimes\n        if (elementToFocus && elementToFocus['focus']) {\n          elementToFocus.focus();\n        } else {\n          this._document.body.focus();\n        }\n      }\n    }\n    /**\n     * Toggles the datepicker popup.\n     */\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isOpen()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(date) {\n      if (this.isOpen()) {\n        this._cRef.instance.navigateTo(date);\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this._onTouched();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this._elWithFocus = this._elRef.nativeElement;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['minDate'] || changes['maxDate']) {\n        this._validatorChange();\n        if (this.isOpen()) {\n          if (changes['minDate']) {\n            this._cRef.instance.minDate = this._dateAdapter.toModel(changes.minDate.currentValue);\n          }\n          if (changes['maxDate']) {\n            this._cRef.instance.maxDate = this._dateAdapter.toModel(changes.maxDate.currentValue);\n          }\n          this._cRef.instance.ngOnChanges(changes);\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close();\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"_applyDatepickerInputs\",\n    value: function _applyDatepickerInputs(datepickerInstance) {\n      var _this17 = this;\n      ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers'].forEach(function (optionName) {\n        if (_this17[optionName] !== undefined) {\n          datepickerInstance[optionName] = _this17[optionName];\n        }\n      });\n      datepickerInstance.startDate = this.startDate || this._model;\n    }\n  }, {\n    key: \"_applyPopupStyling\",\n    value: function _applyPopupStyling(nativeElement) {\n      this._renderer.addClass(nativeElement, 'dropdown-menu');\n      this._renderer.addClass(nativeElement, 'show');\n      if (this.container === 'body') {\n        this._renderer.addClass(nativeElement, 'ngb-dp-body');\n      }\n    }\n  }, {\n    key: \"_subscribeForDatepickerOutputs\",\n    value: function _subscribeForDatepickerOutputs(datepickerInstance) {\n      var _this18 = this;\n      datepickerInstance.navigate.subscribe(function (navigateEvent) {\n        return _this18.navigate.emit(navigateEvent);\n      });\n      datepickerInstance.dateSelect.subscribe(function (date) {\n        _this18.dateSelect.emit(date);\n        if (_this18.autoClose === true || _this18.autoClose === 'inside') {\n          _this18.close();\n        }\n      });\n    }\n  }, {\n    key: \"_writeModelValue\",\n    value: function _writeModelValue(model) {\n      var value = this._parserFormatter.format(model);\n      this._inputValue = value;\n      this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n      if (this.isOpen()) {\n        this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n        this._onTouched();\n      }\n    }\n  }, {\n    key: \"_fromDateStruct\",\n    value: function _fromDateStruct(date) {\n      var ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n      return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n  }, {\n    key: \"_updatePopupPosition\",\n    value: function _updatePopupPosition() {\n      if (!this._cRef) {\n        return;\n      }\n      var hostElement;\n      if (isString(this.positionTarget)) {\n        hostElement = this._document.querySelector(this.positionTarget);\n      } else if (this.positionTarget instanceof HTMLElement) {\n        hostElement = this.positionTarget;\n      } else {\n        hostElement = this._elRef.nativeElement;\n      }\n      if (this.positionTarget && !hostElement) {\n        throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n      }\n      positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n    }\n  }]);\n  return NgbInputDatepicker;\n}();\nNgbInputDatepicker.ɵfac = function NgbInputDatepicker_Factory(t) {\n  return new (t || NgbInputDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDateParserFormatter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbInputDatepickerConfig));\n};\nNgbInputDatepicker.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbInputDatepicker,\n  selectors: [[\"input\", \"ngbDatepicker\", \"\"]],\n  hostVars: 1,\n  hostBindings: function NgbInputDatepicker_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function NgbInputDatepicker_input_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value);\n      })(\"change\", function NgbInputDatepicker_change_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value, true);\n      })(\"focus\", function NgbInputDatepicker_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function NgbInputDatepicker_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    autoClose: \"autoClose\",\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    placement: \"placement\",\n    restoreFocus: \"restoreFocus\",\n    showWeekdays: \"showWeekdays\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\",\n    container: \"container\",\n    positionTarget: \"positionTarget\"\n  },\n  outputs: {\n    dateSelect: \"dateSelect\",\n    navigate: \"navigate\",\n    closed: \"closed\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, {\n    provide: NgbDatepickerConfig,\n    useExisting: NgbInputDatepickerConfig\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\nNgbInputDatepicker.ctorParameters = function () {\n  return [{\n    type: NgbDateParserFormatter\n  }, {\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: NgZone\n  }, {\n    type: NgbCalendar\n  }, {\n    type: NgbDateAdapter\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgbInputDatepickerConfig\n  }];\n};\n__decorate([Input()], NgbInputDatepicker.prototype, \"autoClose\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"dayTemplate\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"dayTemplateData\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"displayMonths\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"firstDayOfWeek\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"footerTemplate\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"markDisabled\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"minDate\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"maxDate\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"navigation\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"outsideDays\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"placement\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"restoreFocus\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"showWeekdays\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"showWeekNumbers\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"startDate\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"container\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"positionTarget\", void 0);\n__decorate([Output()], NgbInputDatepicker.prototype, \"dateSelect\", void 0);\n__decorate([Output()], NgbInputDatepicker.prototype, \"navigate\", void 0);\n__decorate([Output()], NgbInputDatepicker.prototype, \"closed\", void 0);\n__decorate([Input()], NgbInputDatepicker.prototype, \"disabled\", null);\nNgbInputDatepicker = __decorate([__param(8, Inject(DOCUMENT))], NgbInputDatepicker);\nvar NgbDatepickerDayView = /*#__PURE__*/function () {\n  function NgbDatepickerDayView(i18n) {\n    _classCallCheck(this, NgbDatepickerDayView);\n    this.i18n = i18n;\n  }\n  _createClass(NgbDatepickerDayView, [{\n    key: \"isMuted\",\n    value: function isMuted() {\n      return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n    }\n  }]);\n  return NgbDatepickerDayView;\n}();\nNgbDatepickerDayView.ɵfac = function NgbDatepickerDayView_Factory(t) {\n  return new (t || NgbDatepickerDayView)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\nNgbDatepickerDayView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerDayView,\n  selectors: [[\"\", \"ngbDatepickerDayView\", \"\"]],\n  hostAttrs: [1, \"btn-light\"],\n  hostVars: 10,\n  hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"bg-primary\", ctx.selected)(\"text-white\", ctx.selected)(\"text-muted\", ctx.isMuted())(\"outside\", ctx.isMuted())(\"active\", ctx.focused);\n    }\n  },\n  inputs: {\n    currentMonth: \"currentMonth\",\n    date: \"date\",\n    disabled: \"disabled\",\n    focused: \"focused\",\n    selected: \"selected\"\n  },\n  attrs: _c20,\n  decls: 1,\n  vars: 1,\n  template: function NgbDatepickerDayView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtext(0);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵtextInterpolate(ctx.i18n.getDayNumerals(ctx.date));\n    }\n  },\n  styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbDatepickerDayView.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }];\n};\n__decorate([Input()], NgbDatepickerDayView.prototype, \"currentMonth\", void 0);\n__decorate([Input()], NgbDatepickerDayView.prototype, \"date\", void 0);\n__decorate([Input()], NgbDatepickerDayView.prototype, \"disabled\", void 0);\n__decorate([Input()], NgbDatepickerDayView.prototype, \"focused\", void 0);\n__decorate([Input()], NgbDatepickerDayView.prototype, \"selected\", void 0);\nvar NgbDatepickerNavigationSelect = /*#__PURE__*/function () {\n  function NgbDatepickerNavigationSelect(i18n, _renderer) {\n    _classCallCheck(this, NgbDatepickerNavigationSelect);\n    this.i18n = i18n;\n    this._renderer = _renderer;\n    this.select = new EventEmitter();\n    this._month = -1;\n    this._year = -1;\n  }\n  _createClass(NgbDatepickerNavigationSelect, [{\n    key: \"changeMonth\",\n    value: function changeMonth(month) {\n      this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n    }\n  }, {\n    key: \"changeYear\",\n    value: function changeYear(year) {\n      this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this.date) {\n        if (this.date.month !== this._month) {\n          this._month = this.date.month;\n          this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n        }\n        if (this.date.year !== this._year) {\n          this._year = this.date.year;\n          this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n        }\n      }\n    }\n  }]);\n  return NgbDatepickerNavigationSelect;\n}();\nNgbDatepickerNavigationSelect.ɵfac = function NgbDatepickerNavigationSelect_Factory(t) {\n  return new (t || NgbDatepickerNavigationSelect)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\nNgbDatepickerNavigationSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigationSelect,\n  selectors: [[\"ngb-datepicker-navigation-select\"]],\n  viewQuery: function NgbDatepickerNavigationSelect_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c21, true, ElementRef);\n      ɵngcc0.ɵɵstaticViewQuery(_c22, true, ElementRef);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthSelect = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearSelect = _t.first);\n    }\n  },\n  inputs: {\n    date: \"date\",\n    disabled: \"disabled\",\n    months: \"months\",\n    years: \"years\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  decls: 6,\n  vars: 4,\n  consts: function consts() {\n    var i18n_23;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24 = goog.getMsg(\"Select month\");\n      i18n_23 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24;\n    } else {\n      i18n_23 = $localize(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\":@@ngb.datepicker.select-month\\u241F1dbc84807f35518112f62e5775d1daebd3d8462b\\u241F2253869508135064750:Select month\"])));\n    }\n    var i18n_25;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_26 = goog.getMsg(\"Select month\");\n      i18n_25 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_26;\n    } else {\n      i18n_25 = $localize(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\":@@ngb.datepicker.select-month\\u241F1dbc84807f35518112f62e5775d1daebd3d8462b\\u241F2253869508135064750:Select month\"])));\n    }\n    var i18n_27;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28 = goog.getMsg(\"Select year\");\n      i18n_27 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28;\n    } else {\n      i18n_27 = $localize(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\":@@ngb.datepicker.select-year\\u241F8ceb09d002bf0c5d1cac171dfbffe1805d2b3962\\u241F8852264961585484321:Select year\"])));\n    }\n    var i18n_29;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_30 = goog.getMsg(\"Select year\");\n      i18n_29 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_30;\n    } else {\n      i18n_29 = $localize(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\":@@ngb.datepicker.select-year\\u241F8ceb09d002bf0c5d1cac171dfbffe1805d2b3962\\u241F8852264961585484321:Select year\"])));\n    }\n    return [[\"aria-label\", i18n_23, \"title\", i18n_25, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"month\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", i18n_27, \"title\", i18n_29, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"year\", \"\"], [3, \"value\"]];\n  },\n  template: function NgbDatepickerNavigationSelect_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"select\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_0_listener($event) {\n        return ctx.changeMonth($event.target.value);\n      });\n      ɵngcc0.ɵɵtemplate(2, NgbDatepickerNavigationSelect_option_2_Template, 2, 3, \"option\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"select\", 3, 4);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_3_listener($event) {\n        return ctx.changeYear($event.target.value);\n      });\n      ɵngcc0.ɵɵtemplate(5, NgbDatepickerNavigationSelect_option_5_Template, 2, 2, \"option\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.months);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.years);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc2.NgSelectOption, ɵngcc2.ɵangular_packages_forms_forms_x],\n  styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbDatepickerNavigationSelect.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }, {\n    type: Renderer2\n  }];\n};\n__decorate([Input()], NgbDatepickerNavigationSelect.prototype, \"date\", void 0);\n__decorate([Input()], NgbDatepickerNavigationSelect.prototype, \"disabled\", void 0);\n__decorate([Input()], NgbDatepickerNavigationSelect.prototype, \"months\", void 0);\n__decorate([Input()], NgbDatepickerNavigationSelect.prototype, \"years\", void 0);\n__decorate([Output()], NgbDatepickerNavigationSelect.prototype, \"select\", void 0);\n__decorate([ViewChild('month', {\n  static: true,\n  read: ElementRef\n})], NgbDatepickerNavigationSelect.prototype, \"monthSelect\", void 0);\n__decorate([ViewChild('year', {\n  static: true,\n  read: ElementRef\n})], NgbDatepickerNavigationSelect.prototype, \"yearSelect\", void 0);\nvar NgbCalendarHijri = /*#__PURE__*/function (_NgbCalendar2) {\n  _inherits(NgbCalendarHijri, _NgbCalendar2);\n  var _super6 = _createSuper(NgbCalendarHijri);\n  function NgbCalendarHijri() {\n    _classCallCheck(this, NgbCalendarHijri);\n    return _super6.apply(this, arguments);\n  }\n  _createClass(NgbCalendarHijri, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      date = new NgbDate(date.year, date.month, date.day);\n      switch (period) {\n        case 'y':\n          date = this._setYear(date, date.year + number);\n          date.month = 1;\n          date.day = 1;\n          return date;\n        case 'm':\n          date = this._setMonth(date, date.month + number);\n          date.day = 1;\n          return date;\n        case 'd':\n          return this._setDay(date, date.day + number);\n        default:\n          return date;\n      }\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var day = this.toGregorian(date).getDay();\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = this.toGregorian(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n      var time = jsDate.getTime();\n      var MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n      return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return this.fromGregorian(new Date());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) && !isNaN(this.toGregorian(date).getTime());\n    }\n  }, {\n    key: \"_setDay\",\n    value: function _setDay(date, day) {\n      day = +day;\n      var mDays = this.getDaysPerMonth(date.month, date.year);\n      if (day <= 0) {\n        while (day <= 0) {\n          date = this._setMonth(date, date.month - 1);\n          mDays = this.getDaysPerMonth(date.month, date.year);\n          day += mDays;\n        }\n      } else if (day > mDays) {\n        while (day > mDays) {\n          day -= mDays;\n          date = this._setMonth(date, date.month + 1);\n          mDays = this.getDaysPerMonth(date.month, date.year);\n        }\n      }\n      date.day = day;\n      return date;\n    }\n  }, {\n    key: \"_setMonth\",\n    value: function _setMonth(date, month) {\n      month = +month;\n      date.year = date.year + Math.floor((month - 1) / 12);\n      date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n      return date;\n    }\n  }, {\n    key: \"_setYear\",\n    value: function _setYear(date, year) {\n      date.year = +year;\n      return date;\n    }\n  }]);\n  return NgbCalendarHijri;\n}(NgbCalendar);\nNgbCalendarHijri.ɵfac = function NgbCalendarHijri_Factory(t) {\n  return ɵNgbCalendarHijri_BaseFactory(t || NgbCalendarHijri);\n};\nNgbCalendarHijri.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarHijri,\n  factory: function factory(t) {\n    return NgbCalendarHijri.ɵfac(t);\n  }\n});\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear) {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate) {\n  var year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year) {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\nvar GREGORIAN_EPOCH = 1721425.5;\nvar ISLAMIC_EPOCH = 1948439.5;\nvar NgbCalendarIslamicCivil = /*#__PURE__*/function (_NgbCalendarHijri) {\n  _inherits(NgbCalendarIslamicCivil, _NgbCalendarHijri);\n  var _super7 = _createSuper(NgbCalendarIslamicCivil);\n  function NgbCalendarIslamicCivil() {\n    _classCallCheck(this, NgbCalendarIslamicCivil);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(NgbCalendarIslamicCivil, [{\n    key: \"fromGregorian\",\n    value:\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     */\n    function fromGregorian(gDate) {\n      var gYear = gDate.getFullYear(),\n        gMonth = gDate.getMonth(),\n        gDay = gDate.getDate();\n      var julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) + -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n      julianDay = Math.floor(julianDay) + 0.5;\n      var days = julianDay - ISLAMIC_EPOCH;\n      var hYear = Math.floor((30 * days + 10646) / 10631.0);\n      var hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n      hMonth = Math.min(hMonth, 11);\n      var hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n      return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n  }, {\n    key: \"toGregorian\",\n    value: function toGregorian(hDate) {\n      var hYear = hDate.year;\n      var hMonth = hDate.month - 1;\n      var hDay = hDate.day;\n      var julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n      var wjd = Math.floor(julianDay - 0.5) + 0.5,\n        depoch = wjd - GREGORIAN_EPOCH,\n        quadricent = Math.floor(depoch / 146097),\n        dqc = mod(depoch, 146097),\n        cent = Math.floor(dqc / 36524),\n        dcent = mod(dqc, 36524),\n        quad = Math.floor(dcent / 1461),\n        dquad = mod(dcent, 1461),\n        yindex = Math.floor(dquad / 365);\n      var year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n      if (!(cent === 4 || yindex === 4)) {\n        year++;\n      }\n      var gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);\n      var yearday = wjd - gYearStart;\n      var tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n      var leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n      var month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n      var tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n      var day = wjd - tjd2 + 1;\n      return new Date(year, month - 1, day);\n    }\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n  }, {\n    key: \"getDaysPerMonth\",\n    value: function getDaysPerMonth(month, year) {\n      year = year + Math.floor(month / 13);\n      month = (month - 1) % 12 + 1;\n      var length = 29 + month % 2;\n      if (month === 12 && isIslamicLeapYear(year)) {\n        length++;\n      }\n      return length;\n    }\n  }]);\n  return NgbCalendarIslamicCivil;\n}(NgbCalendarHijri);\nNgbCalendarIslamicCivil.ɵfac = function NgbCalendarIslamicCivil_Factory(t) {\n  return ɵNgbCalendarIslamicCivil_BaseFactory(t || NgbCalendarIslamicCivil);\n};\nNgbCalendarIslamicCivil.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicCivil,\n  factory: function factory(t) {\n    return NgbCalendarIslamicCivil.ɵfac(t);\n  }\n});\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\nvar GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nvar GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nvar HIJRI_BEGIN = 1300;\nvar HIJRI_END = 1600;\nvar ONE_DAY = 1000 * 60 * 60 * 24;\nvar MONTH_LENGTH = [\n// 1300-1304\n'101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n// 1305-1309\n'001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n// 1310-1314\n'101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n// 1315-1319\n'011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n// 1320-1324\n'010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n// 1325-1329\n'101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n// 1330-1334\n'110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n// 1335-1339\n'101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n// 1340-1344\n'001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n// 1345-1349\n'101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n// 1350-1354\n'010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n// 1355-1359\n'100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n// 1360-1364\n'011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n// 1365-1369\n'110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n// 1370-1374\n'100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n// 1375-1379\n'101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n// 1380-1384\n'010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n// 1385-1389\n'001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n// 1390-1394\n'010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n// 1395-1399\n'101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n// 1400-1404\n'101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n// 1405-1409\n'101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n// 1410-1414\n'110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n// 1415-1419\n'010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n// 1420-1424\n'010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n// 1425-1429\n'101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n// 1430-1434\n'011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n// 1435-1439\n'101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n// 1440-1444\n'010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n// 1445-1449\n'011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n// 1450-1454\n'101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n// 1455-1459\n'010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n// 1460-1464\n'011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n// 1465-1469\n'101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n// 1470-1474\n'001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n// 1475-1479\n'011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n// 1480-1484\n'101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n// 1485-1489\n'100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n// 1490-1494\n'010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n// 1495-1499\n'011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n// 1500-1504\n'010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n// 1505-1509\n'101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n// 1510-1514\n'101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n// 1515-1519\n'001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n// 1520-1524\n'010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n// 1525-1529\n'110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n// 1530-1534\n'011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n// 1535-1539\n'101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n// 1540-1544\n'011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n// 1545-1549\n'110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n// 1550-1554\n'101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n// 1555-1559\n'001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n// 1560-1564\n'110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n// 1565-1569\n'010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n// 1570-1574\n'010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n// 1575-1579\n'111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n// 1580-1584\n'011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n// 1585-1589\n'010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n// 1590-1594\n'101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n// 1595-1599\n'010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n// 1600\n'001010011101'];\nfunction getDaysDiff(date1, date2) {\n  // Ignores the time part in date1 and date2:\n  var time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  var time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  var diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\nvar NgbCalendarIslamicUmalqura = /*#__PURE__*/function (_NgbCalendarIslamicCi) {\n  _inherits(NgbCalendarIslamicUmalqura, _NgbCalendarIslamicCi);\n  var _super8 = _createSuper(NgbCalendarIslamicUmalqura);\n  function NgbCalendarIslamicUmalqura() {\n    _classCallCheck(this, NgbCalendarIslamicUmalqura);\n    return _super8.apply(this, arguments);\n  }\n  _createClass(NgbCalendarIslamicUmalqura, [{\n    key: \"fromGregorian\",\n    value:\n    /**\n    * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n    * `gdate` is s JS Date to be converted to Hijri.\n    */\n    function fromGregorian(gDate) {\n      var hDay = 1,\n        hMonth = 0,\n        hYear = 1300;\n      var daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n      if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n        var year = 1300;\n        for (var i = 0; i < MONTH_LENGTH.length; i++, year++) {\n          for (var j = 0; j < 12; j++) {\n            var numOfDays = +MONTH_LENGTH[i][j] + 29;\n            if (daysDiff <= numOfDays) {\n              hDay = daysDiff + 1;\n              if (hDay > numOfDays) {\n                hDay = 1;\n                j++;\n              }\n              if (j > 11) {\n                j = 0;\n                year++;\n              }\n              hMonth = j;\n              hYear = year;\n              return new NgbDate(hYear, hMonth + 1, hDay);\n            }\n            daysDiff = daysDiff - numOfDays;\n          }\n        }\n      } else {\n        return _get(_getPrototypeOf(NgbCalendarIslamicUmalqura.prototype), \"fromGregorian\", this).call(this, gDate);\n      }\n    }\n    /**\n    * Converts the current Hijri date to Gregorian.\n    */\n  }, {\n    key: \"toGregorian\",\n    value: function toGregorian(hDate) {\n      var hYear = hDate.year;\n      var hMonth = hDate.month - 1;\n      var hDay = hDate.day;\n      var gDate = new Date(GREGORIAN_FIRST_DATE);\n      var dayDiff = hDay - 1;\n      if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n        for (var y = 0; y < hYear - HIJRI_BEGIN; y++) {\n          for (var m = 0; m < 12; m++) {\n            dayDiff += +MONTH_LENGTH[y][m] + 29;\n          }\n        }\n        for (var _m = 0; _m < hMonth; _m++) {\n          dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][_m] + 29;\n        }\n        gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n      } else {\n        gDate = _get(_getPrototypeOf(NgbCalendarIslamicUmalqura.prototype), \"toGregorian\", this).call(this, hDate);\n      }\n      return gDate;\n    }\n    /**\n    * Returns the number of days in a specific Hijri hMonth.\n    * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n    * `hYear` is any Hijri hYear.\n    */\n  }, {\n    key: \"getDaysPerMonth\",\n    value: function getDaysPerMonth(hMonth, hYear) {\n      if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n        var pos = hYear - HIJRI_BEGIN;\n        return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n      }\n      return _get(_getPrototypeOf(NgbCalendarIslamicUmalqura.prototype), \"getDaysPerMonth\", this).call(this, hMonth, hYear);\n    }\n  }]);\n  return NgbCalendarIslamicUmalqura;\n}(NgbCalendarIslamicCivil);\nNgbCalendarIslamicUmalqura.ɵfac = function NgbCalendarIslamicUmalqura_Factory(t) {\n  return ɵNgbCalendarIslamicUmalqura_BaseFactory(t || NgbCalendarIslamicUmalqura);\n};\nNgbCalendarIslamicUmalqura.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicUmalqura,\n  factory: function factory(t) {\n    return NgbCalendarIslamicUmalqura.ɵfac(t);\n  }\n});\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nfunction toGregorian(jalaliDate) {\n  var jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  var date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nfunction fromGregorian(gdate) {\n  var g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\nfunction setJalaliYear(date, yearValue) {\n  date.year = +yearValue;\n  return date;\n}\nfunction setJalaliMonth(date, month) {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\nfunction setJalaliDay(date, day) {\n  var mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\nfunction mod$1(a, b) {\n  return a - b * Math.floor(a / b);\n}\nfunction div(a, b) {\n  return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear) {\n  // Jalali years starting the 33-year rule.\n  var breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  var breaksLength = breaks.length;\n  var gYear = jalaliYear + 621;\n  var leapJ = -14;\n  var jp = breaks[0];\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n  // Find the limiting years for the Jalali year jalaliYear.\n  var jump;\n  for (var i = 1; i < breaksLength; i += 1) {\n    var jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod$1(jump, 33), 4);\n    jp = jm;\n  }\n  var n = jalaliYear - jp;\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod$1(n, 33) + 3, 4);\n  if (mod$1(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n  // And the same in the Gregorian calendar (until the year gYear).\n  var leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n  // Determine the Gregorian date of Farvardin the 1st.\n  var march = 20 + leapJ - leapG;\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  var leap = mod$1(mod$1(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n  return {\n    leap: leap,\n    gy: gYear,\n    march: march\n  };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber) {\n  var j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  var i = div(mod$1(j, 1461), 4) * 5 + 308;\n  var gDay = div(mod$1(i, 153), 5) + 1;\n  var gMonth = mod$1(div(i, 153), 12) + 1;\n  var gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n  return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy, gm, gd) {\n  var d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod$1(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber) {\n  var gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n    ,\n    jalaliYear = gy - 621,\n    r = jalCal(jalaliYear),\n    gregorianDay = gregorianToJulian(gy, 3, r.march),\n    jalaliDay,\n    jalaliMonth,\n    numberOfDays;\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod$1(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod$1(numberOfDays, 30) + 1;\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n  var r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month, year) {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\nvar NgbCalendarPersian = /*#__PURE__*/function (_NgbCalendar3) {\n  _inherits(NgbCalendarPersian, _NgbCalendar3);\n  var _super9 = _createSuper(NgbCalendarPersian);\n  function NgbCalendarPersian() {\n    _classCallCheck(this, NgbCalendarPersian);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(NgbCalendarPersian, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      date = new NgbDate(date.year, date.month, date.day);\n      switch (period) {\n        case 'y':\n          date = setJalaliYear(date, date.year + number);\n          date.month = 1;\n          date.day = 1;\n          return date;\n        case 'm':\n          date = setJalaliMonth(date, date.month + number);\n          date.day = 1;\n          return date;\n        case 'd':\n          return setJalaliDay(date, date.day + number);\n        default:\n          return date;\n      }\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var day = toGregorian(date).getDay();\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = toGregorian(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n      var time = jsDate.getTime();\n      var startDate = toGregorian(new NgbDate(date.year, 1, 1));\n      return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return fromGregorian(new Date());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) && !isNaN(toGregorian(date).getTime());\n    }\n  }]);\n  return NgbCalendarPersian;\n}(NgbCalendar);\nNgbCalendarPersian.ɵfac = function NgbCalendarPersian_Factory(t) {\n  return ɵNgbCalendarPersian_BaseFactory(t || NgbCalendarPersian);\n};\nNgbCalendarPersian.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarPersian,\n  factory: function factory(t) {\n    return NgbCalendarPersian.ɵfac(t);\n  }\n});\nvar PARTS_PER_HOUR = 1080;\nvar PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nvar PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nvar PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nvar BAHARAD = 11 * PARTS_PER_HOUR + 204;\nvar HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nvar GREGORIAN_EPOCH$1 = 1721425.5;\nfunction isGregorianLeapYear$1(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nfunction numberOfFirstDayInYear(year) {\n  var monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  var fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  var dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  var timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n  var dayOfWeek = dayNumber % 7; // 0 == Monday\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\nfunction getDaysInGregorianMonth(month, year) {\n  var days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear$1(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\nfunction getHebrewMonths(year) {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year) {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\nfunction isHebrewLeapYear(year) {\n  var b = (year * 12 + 17) % 19;\n  return b >= (b < 0 ? -7 : 12);\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewMonth(month, year) {\n  var yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  var yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n  var leapYear = isHebrewLeapYear(year);\n  var daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n  }\n\n  if (yearType > 1) {\n    daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n  }\n\n  return daysInMonth[month - 1];\n}\nfunction getDayNumberInHebrewYear(date) {\n  var numberOfDay = 0;\n  for (var i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\nfunction setHebrewMonth(date, val) {\n  var after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\nfunction setHebrewDay(date, val) {\n  var after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nfunction fromGregorian$1(gdate) {\n  var date = new Date(gdate);\n  var gYear = date.getFullYear(),\n    gMonth = date.getMonth(),\n    gDay = date.getDate();\n  var julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) - Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  var daysSinceHebEpoch = julianDay - 347997;\n  var monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  var hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  var firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  var dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  var hMonth = 1;\n  var hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nfunction toGregorian$1(hebrewDate) {\n  var hYear = hebrewDate.year;\n  var hMonth = hebrewDate.month;\n  var hDay = hebrewDate.day;\n  var days = numberOfFirstDayInYear(hYear);\n  for (var i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  var diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  var after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  var gYear = 1970;\n  var gMonth = 1;\n  var gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear$1(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear$1(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear$1(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear$1(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\nfunction hebrewNumerals(numerals) {\n  if (!numerals) {\n    return '';\n  }\n  var hArray0_9 = ['', \"\\u05D0\", \"\\u05D1\", \"\\u05D2\", \"\\u05D3\", \"\\u05D4\", \"\\u05D5\", \"\\u05D6\", \"\\u05D7\", \"\\u05D8\"];\n  var hArray10_19 = [\"\\u05D9\", \"\\u05D9\\u05D0\", \"\\u05D9\\u05D1\", \"\\u05D9\\u05D2\", \"\\u05D9\\u05D3\", \"\\u05D8\\u05D5\", \"\\u05D8\\u05D6\", \"\\u05D9\\u05D6\", \"\\u05D9\\u05D7\", \"\\u05D9\\u05D8\"];\n  var hArray20_90 = ['', '', \"\\u05DB\", \"\\u05DC\", \"\\u05DE\", \"\\u05E0\", \"\\u05E1\", \"\\u05E2\", \"\\u05E4\", \"\\u05E6\"];\n  var hArray100_900 = ['', \"\\u05E7\", \"\\u05E8\", \"\\u05E9\", \"\\u05EA\", \"\\u05EA\\u05E7\", \"\\u05EA\\u05E8\", \"\\u05EA\\u05E9\", \"\\u05EA\\u05EA\", \"\\u05EA\\u05EA\\u05E7\"];\n  var hArray1000_9000 = ['', \"\\u05D0\", \"\\u05D1\", \"\\u05D1\\u05D0\", \"\\u05D1\\u05D1\", \"\\u05D4\", \"\\u05D4\\u05D0\", \"\\u05D4\\u05D1\", \"\\u05D4\\u05D1\\u05D0\", \"\\u05D4\\u05D1\\u05D1\"];\n  var geresh = \"\\u05F3\",\n    gershaim = \"\\u05F4\";\n  var mem = 0;\n  var result = [];\n  var step = 0;\n  while (numerals > 0) {\n    var m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n\n/**\n * @since 3.2.0\n */\nvar NgbCalendarHebrew = /*#__PURE__*/function (_NgbCalendar4) {\n  _inherits(NgbCalendarHebrew, _NgbCalendar4);\n  var _super10 = _createSuper(NgbCalendarHebrew);\n  function NgbCalendarHebrew() {\n    _classCallCheck(this, NgbCalendarHebrew);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(NgbCalendarHebrew, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths(year) {\n      if (year && isHebrewLeapYear(year)) {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n      } else {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      }\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      var b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n      b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n      b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n      return b && !isNaN(toGregorian$1(date).getTime());\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      date = new NgbDate(date.year, date.month, date.day);\n      switch (period) {\n        case 'y':\n          date.year += number;\n          date.month = 1;\n          date.day = 1;\n          return date;\n        case 'm':\n          date = setHebrewMonth(date, number);\n          date.day = 1;\n          return date;\n        case 'd':\n          return setHebrewDay(date, number);\n        default:\n          return date;\n      }\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var day = toGregorian$1(date).getDay();\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      var date = week[week.length - 1];\n      return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return fromGregorian$1(new Date());\n    }\n    /**\n     * @since 3.4.0\n     */\n  }, {\n    key: \"toGregorian\",\n    value: function toGregorian(date) {\n      return fromJSDate(toGregorian$1(date));\n    }\n    /**\n     * @since 3.4.0\n     */\n  }, {\n    key: \"fromGregorian\",\n    value: function fromGregorian(date) {\n      return fromGregorian$1(toJSDate(date));\n    }\n  }]);\n  return NgbCalendarHebrew;\n}(NgbCalendar);\nNgbCalendarHebrew.ɵfac = function NgbCalendarHebrew_Factory(t) {\n  return ɵNgbCalendarHebrew_BaseFactory(t || NgbCalendarHebrew);\n};\nNgbCalendarHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarHebrew,\n  factory: function factory(t) {\n    return NgbCalendarHebrew.ɵfac(t);\n  }\n});\nvar WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nvar MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nvar MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * @since 3.2.0\n */\nvar NgbDatepickerI18nHebrew = /*#__PURE__*/function (_NgbDatepickerI18n2) {\n  _inherits(NgbDatepickerI18nHebrew, _NgbDatepickerI18n2);\n  var _super11 = _createSuper(NgbDatepickerI18nHebrew);\n  function NgbDatepickerI18nHebrew() {\n    _classCallCheck(this, NgbDatepickerI18nHebrew);\n    return _super11.apply(this, arguments);\n  }\n  _createClass(NgbDatepickerI18nHebrew, [{\n    key: \"getMonthShortName\",\n    value: function getMonthShortName(month, year) {\n      return this.getMonthFullName(month, year);\n    }\n  }, {\n    key: \"getMonthFullName\",\n    value: function getMonthFullName(month, year) {\n      return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n    }\n  }, {\n    key: \"getWeekdayShortName\",\n    value: function getWeekdayShortName(weekday) {\n      return WEEKDAYS[weekday - 1];\n    }\n  }, {\n    key: \"getDayAriaLabel\",\n    value: function getDayAriaLabel(date) {\n      return \"\".concat(hebrewNumerals(date.day), \" \").concat(this.getMonthFullName(date.month, date.year), \" \").concat(hebrewNumerals(date.year));\n    }\n  }, {\n    key: \"getDayNumerals\",\n    value: function getDayNumerals(date) {\n      return hebrewNumerals(date.day);\n    }\n  }, {\n    key: \"getWeekNumerals\",\n    value: function getWeekNumerals(weekNumber) {\n      return hebrewNumerals(weekNumber);\n    }\n  }, {\n    key: \"getYearNumerals\",\n    value: function getYearNumerals(year) {\n      return hebrewNumerals(year);\n    }\n  }]);\n  return NgbDatepickerI18nHebrew;\n}(NgbDatepickerI18n);\nNgbDatepickerI18nHebrew.ɵfac = function NgbDatepickerI18nHebrew_Factory(t) {\n  return ɵNgbDatepickerI18nHebrew_BaseFactory(t || NgbDatepickerI18nHebrew);\n};\nNgbDatepickerI18nHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nHebrew,\n  factory: function factory(t) {\n    return NgbDatepickerI18nHebrew.ɵfac(t);\n  }\n});\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\nvar NgbDateNativeAdapter = /*#__PURE__*/function (_NgbDateAdapter2) {\n  _inherits(NgbDateNativeAdapter, _NgbDateAdapter2);\n  var _super12 = _createSuper(NgbDateNativeAdapter);\n  function NgbDateNativeAdapter() {\n    _classCallCheck(this, NgbDateNativeAdapter);\n    return _super12.apply(this, arguments);\n  }\n  _createClass(NgbDateNativeAdapter, [{\n    key: \"fromModel\",\n    value:\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     */\n    function fromModel(date) {\n      return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n    }\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     */\n  }, {\n    key: \"toModel\",\n    value: function toModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) : null;\n    }\n  }, {\n    key: \"_fromNativeDate\",\n    value: function _fromNativeDate(date) {\n      return {\n        year: date.getFullYear(),\n        month: date.getMonth() + 1,\n        day: date.getDate()\n      };\n    }\n  }, {\n    key: \"_toNativeDate\",\n    value: function _toNativeDate(date) {\n      var jsDate = new Date(date.year, date.month - 1, date.day, 12);\n      // avoid 30 -> 1930 conversion\n      jsDate.setFullYear(date.year);\n      return jsDate;\n    }\n  }]);\n  return NgbDateNativeAdapter;\n}(NgbDateAdapter);\nNgbDateNativeAdapter.ɵfac = function NgbDateNativeAdapter_Factory(t) {\n  return ɵNgbDateNativeAdapter_BaseFactory(t || NgbDateNativeAdapter);\n};\nNgbDateNativeAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateNativeAdapter,\n  factory: function factory(t) {\n    return NgbDateNativeAdapter.ɵfac(t);\n  }\n});\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\nvar NgbDateNativeUTCAdapter = /*#__PURE__*/function (_NgbDateNativeAdapter) {\n  _inherits(NgbDateNativeUTCAdapter, _NgbDateNativeAdapter);\n  var _super13 = _createSuper(NgbDateNativeUTCAdapter);\n  function NgbDateNativeUTCAdapter() {\n    _classCallCheck(this, NgbDateNativeUTCAdapter);\n    return _super13.apply(this, arguments);\n  }\n  _createClass(NgbDateNativeUTCAdapter, [{\n    key: \"_fromNativeDate\",\n    value: function _fromNativeDate(date) {\n      return {\n        year: date.getUTCFullYear(),\n        month: date.getUTCMonth() + 1,\n        day: date.getUTCDate()\n      };\n    }\n  }, {\n    key: \"_toNativeDate\",\n    value: function _toNativeDate(date) {\n      var jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n      // avoid 30 -> 1930 conversion\n      jsDate.setUTCFullYear(date.year);\n      return jsDate;\n    }\n  }]);\n  return NgbDateNativeUTCAdapter;\n}(NgbDateNativeAdapter);\nNgbDateNativeUTCAdapter.ɵfac = function NgbDateNativeUTCAdapter_Factory(t) {\n  return ɵNgbDateNativeUTCAdapter_BaseFactory(t || NgbDateNativeUTCAdapter);\n};\nNgbDateNativeUTCAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateNativeUTCAdapter,\n  factory: function factory(t) {\n    return NgbDateNativeUTCAdapter.ɵfac(t);\n  }\n});\nvar NgbDatepickerModule = /*#__PURE__*/_createClass(function NgbDatepickerModule() {\n  _classCallCheck(this, NgbDatepickerModule);\n});\nNgbDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbDatepickerModule\n});\nNgbDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbDatepickerModule_Factory(t) {\n    return new (t || NgbDatepickerModule)();\n  },\n  imports: [[CommonModule, FormsModule]]\n});\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nvar NgbDropdownConfig = /*#__PURE__*/_createClass(function NgbDropdownConfig() {\n  _classCallCheck(this, NgbDropdownConfig);\n  this.autoClose = true;\n  this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n});\nNgbDropdownConfig.ɵfac = function NgbDropdownConfig_Factory(t) {\n  return new (t || NgbDropdownConfig)();\n};\nNgbDropdownConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDropdownConfig_Factory() {\n    return new NgbDropdownConfig();\n  },\n  token: NgbDropdownConfig,\n  providedIn: \"root\"\n});\nvar NgbDropdownToggle_1;\nvar NgbNavbar = /*#__PURE__*/_createClass(function NgbNavbar() {\n  _classCallCheck(this, NgbNavbar);\n});\nNgbNavbar.ɵfac = function NgbNavbar_Factory(t) {\n  return new (t || NgbNavbar)();\n};\nNgbNavbar.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavbar,\n  selectors: [[\"\", 8, \"navbar\"]]\n});\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\nvar NgbDropdownItem = /*#__PURE__*/function () {\n  function NgbDropdownItem(elementRef) {\n    _classCallCheck(this, NgbDropdownItem);\n    this.elementRef = elementRef;\n    this._disabled = false;\n  }\n  _createClass(NgbDropdownItem, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = value === '' || value === true; // accept an empty attribute as true\n    }\n  }]);\n  return NgbDropdownItem;\n}();\nNgbDropdownItem.ɵfac = function NgbDropdownItem_Factory(t) {\n  return new (t || NgbDropdownItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nNgbDropdownItem.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownItem,\n  selectors: [[\"\", \"ngbDropdownItem\", \"\"]],\n  hostAttrs: [1, \"dropdown-item\"],\n  hostVars: 2,\n  hostBindings: function NgbDropdownItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  }\n});\nNgbDropdownItem.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n__decorate([Input()], NgbDropdownItem.prototype, \"disabled\", null);\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\nvar NgbDropdownMenu = /*#__PURE__*/_createClass(function NgbDropdownMenu(dropdown) {\n  _classCallCheck(this, NgbDropdownMenu);\n  this.dropdown = dropdown;\n  this.placement = 'bottom';\n  this.isOpen = false;\n});\nNgbDropdownMenu.ɵfac = function NgbDropdownMenu_Factory(t) {\n  return new (t || NgbDropdownMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbDropdown;\n  })));\n};\nNgbDropdownMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownMenu,\n  selectors: [[\"\", \"ngbDropdownMenu\", \"\"]],\n  contentQueries: function NgbDropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownItem, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menuItems = _t);\n    }\n  },\n  hostVars: 5,\n  hostBindings: function NgbDropdownMenu_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.ArrowUp\", function NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownMenu_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownMenu_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Enter\", function NgbDropdownMenu_keydown_Enter_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Space\", function NgbDropdownMenu_keydown_Space_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"x-placement\", ctx.placement);\n      ɵngcc0.ɵɵclassProp(\"dropdown-menu\", true)(\"show\", ctx.dropdown.isOpen());\n    }\n  }\n});\nNgbDropdownMenu.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbDropdown;\n      })]\n    }]\n  }];\n};\n__decorate([ContentChildren(NgbDropdownItem)], NgbDropdownMenu.prototype, \"menuItems\", void 0);\nNgbDropdownMenu = __decorate([__param(0, Inject(forwardRef(function () {\n  return NgbDropdown;\n})))], NgbDropdownMenu);\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\nvar NgbDropdownAnchor = /*#__PURE__*/function () {\n  function NgbDropdownAnchor(dropdown, _elementRef) {\n    _classCallCheck(this, NgbDropdownAnchor);\n    this.dropdown = dropdown;\n    this._elementRef = _elementRef;\n    this.anchorEl = _elementRef.nativeElement;\n  }\n  _createClass(NgbDropdownAnchor, [{\n    key: \"getNativeElement\",\n    value: function getNativeElement() {\n      return this._elementRef.nativeElement;\n    }\n  }]);\n  return NgbDropdownAnchor;\n}();\nNgbDropdownAnchor.ɵfac = function NgbDropdownAnchor_Factory(t) {\n  return new (t || NgbDropdownAnchor)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbDropdown;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nNgbDropdownAnchor.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownAnchor,\n  selectors: [[\"\", \"ngbDropdownAnchor\", \"\"]],\n  hostAttrs: [\"aria-haspopup\", \"true\", 1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownAnchor_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  }\n});\nNgbDropdownAnchor.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbDropdown;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\nNgbDropdownAnchor = __decorate([__param(0, Inject(forwardRef(function () {\n  return NgbDropdown;\n})))], NgbDropdownAnchor);\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\nvar NgbDropdownToggle = NgbDropdownToggle_1 = /*#__PURE__*/function (_NgbDropdownAnchor) {\n  _inherits(NgbDropdownToggle, _NgbDropdownAnchor);\n  var _super14 = _createSuper(NgbDropdownToggle);\n  function NgbDropdownToggle(dropdown, elementRef) {\n    _classCallCheck(this, NgbDropdownToggle);\n    return _super14.call(this, dropdown, elementRef);\n  }\n  return _createClass(NgbDropdownToggle);\n}(NgbDropdownAnchor);\nNgbDropdownToggle.ɵfac = function NgbDropdownToggle_Factory(t) {\n  return new (t || NgbDropdownToggle)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbDropdown;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nNgbDropdownToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownToggle,\n  selectors: [[\"\", \"ngbDropdownToggle\", \"\"]],\n  hostAttrs: [\"aria-haspopup\", \"true\", 1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDropdownToggle_click_HostBindingHandler() {\n        return ctx.dropdown.toggle();\n      })(\"keydown.ArrowUp\", function NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownToggle_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownToggle_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NgbDropdownAnchor,\n    useExisting: forwardRef(function () {\n      return NgbDropdownToggle_1;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nNgbDropdownToggle.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbDropdown;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\nNgbDropdownToggle = NgbDropdownToggle_1 = __decorate([__param(0, Inject(forwardRef(function () {\n  return NgbDropdown;\n})))], NgbDropdownToggle);\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\nvar NgbDropdown = /*#__PURE__*/function () {\n  function NgbDropdown(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n    var _this19 = this;\n    _classCallCheck(this, NgbDropdown);\n    this._changeDetector = _changeDetector;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._closed$ = new Subject();\n    /**\n     * Defines whether or not the dropdown menu is opened initially.\n     */\n    this._open = false;\n    /**\n     * An event fired when the dropdown is opened or closed.\n     *\n     * The event payload is a `boolean`:\n     * * `true` - the dropdown was opened\n     * * `false` - the dropdown was closed\n     */\n    this.openChange = new EventEmitter();\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      _this19._positionMenu();\n    });\n  }\n  _createClass(NgbDropdown, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this20 = this;\n      this._ngZone.onStable.pipe(take(1)).subscribe(function () {\n        _this20._applyPlacementClasses();\n        if (_this20._open) {\n          _this20._setCloseHandlers();\n        }\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.container && this._open) {\n        this._applyContainer(this.container);\n      }\n      if (changes.placement && !changes.placement.isFirstChange) {\n        this._applyPlacementClasses();\n      }\n    }\n    /**\n     * Checks if the dropdown menu is open.\n     */\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._open;\n    }\n    /**\n     * Opens the dropdown menu.\n     */\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!this._open) {\n        this._open = true;\n        this._applyContainer(this.container);\n        this.openChange.emit(true);\n        this._setCloseHandlers();\n      }\n    }\n  }, {\n    key: \"_setCloseHandlers\",\n    value: function _setCloseHandlers() {\n      var _this21 = this;\n      var anchor = this._anchor;\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n        return _this21.close();\n      }, this._closed$, this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\n     * Closes the dropdown menu.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._open) {\n        this._open = false;\n        this._resetContainer();\n        this._closed$.next();\n        this.openChange.emit(false);\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Toggles the dropdown menu.\n     */\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isOpen()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._resetContainer();\n      this._closed$.next();\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      var _this22 = this;\n      // tslint:disable-next-line:deprecation\n      var key = event.which;\n      var itemElements = this._getMenuElements();\n      var position = -1;\n      var isEventFromItems = false;\n      var itemElement = null;\n      var isEventFromToggle = this._isEventFromToggle(event);\n      if (!isEventFromToggle && itemElements.length) {\n        itemElements.forEach(function (item, index) {\n          if (item.contains(event.target)) {\n            isEventFromItems = true;\n            itemElement = item;\n          }\n          if (item === _this22._document.activeElement) {\n            position = index;\n          }\n        });\n      }\n      // closing on Enter / Space\n      if (key === Key.Space || key === Key.Enter) {\n        if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n          // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n          // So we have to register a one-time click handler that will fire after any user defined click handlers\n          // to close the dropdown\n          fromEvent(itemElement, 'click').pipe(take(1)).subscribe(function () {\n            return _this22.close();\n          });\n        }\n        return;\n      }\n      // opening / navigating\n      if (isEventFromToggle || isEventFromItems) {\n        this.open();\n        if (itemElements.length) {\n          switch (key) {\n            case Key.ArrowDown:\n              position = Math.min(position + 1, itemElements.length - 1);\n              break;\n            case Key.ArrowUp:\n              if (this._isDropup() && position === -1) {\n                position = itemElements.length - 1;\n                break;\n              }\n              position = Math.max(position - 1, 0);\n              break;\n            case Key.Home:\n              position = 0;\n              break;\n            case Key.End:\n              position = itemElements.length - 1;\n              break;\n          }\n          itemElements[position].focus();\n        }\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"_isDropup\",\n    value: function _isDropup() {\n      return this._elementRef.nativeElement.classList.contains('dropup');\n    }\n  }, {\n    key: \"_isEventFromToggle\",\n    value: function _isEventFromToggle(event) {\n      return this._anchor.getNativeElement().contains(event.target);\n    }\n  }, {\n    key: \"_getMenuElements\",\n    value: function _getMenuElements() {\n      var menu = this._menu;\n      if (menu == null) {\n        return [];\n      }\n      return menu.menuItems.filter(function (item) {\n        return !item.disabled;\n      }).map(function (item) {\n        return item.elementRef.nativeElement;\n      });\n    }\n  }, {\n    key: \"_positionMenu\",\n    value: function _positionMenu() {\n      var menu = this._menu;\n      if (this.isOpen() && menu) {\n        this._applyPlacementClasses(this.display === 'dynamic' ? positionElements(this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement, this.container === 'body') : this._getFirstPlacement(this.placement));\n      }\n    }\n  }, {\n    key: \"_getFirstPlacement\",\n    value: function _getFirstPlacement(placement) {\n      return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n    }\n  }, {\n    key: \"_resetContainer\",\n    value: function _resetContainer() {\n      var renderer = this._renderer;\n      var menuElement = this._menuElement;\n      if (menuElement) {\n        var dropdownElement = this._elementRef.nativeElement;\n        var dropdownMenuElement = menuElement.nativeElement;\n        renderer.appendChild(dropdownElement, dropdownMenuElement);\n        renderer.removeStyle(dropdownMenuElement, 'position');\n        renderer.removeStyle(dropdownMenuElement, 'transform');\n      }\n      if (this._bodyContainer) {\n        renderer.removeChild(this._document.body, this._bodyContainer);\n        this._bodyContainer = null;\n      }\n    }\n  }, {\n    key: \"_applyContainer\",\n    value: function _applyContainer() {\n      var container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this._resetContainer();\n      if (container === 'body') {\n        var renderer = this._renderer;\n        var dropdownMenuElement = this._menuElement.nativeElement;\n        var bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n        // Override some styles to have the positionning working\n        renderer.setStyle(bodyContainer, 'position', 'absolute');\n        renderer.setStyle(dropdownMenuElement, 'position', 'static');\n        renderer.setStyle(bodyContainer, 'z-index', '1050');\n        renderer.appendChild(bodyContainer, dropdownMenuElement);\n        renderer.appendChild(this._document.body, bodyContainer);\n      }\n    }\n  }, {\n    key: \"_applyPlacementClasses\",\n    value: function _applyPlacementClasses(placement) {\n      var menu = this._menu;\n      if (menu) {\n        if (!placement) {\n          placement = this._getFirstPlacement(this.placement);\n        }\n        var renderer = this._renderer;\n        var dropdownElement = this._elementRef.nativeElement;\n        // remove the current placement classes\n        renderer.removeClass(dropdownElement, 'dropup');\n        renderer.removeClass(dropdownElement, 'dropdown');\n        menu.placement = this.display === 'static' ? null : placement;\n        /*\n        * apply the new placement\n        * in case of top use up-arrow or down-arrow otherwise\n        */\n        var dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n        renderer.addClass(dropdownElement, dropdownClass);\n        var bodyContainer = this._bodyContainer;\n        if (bodyContainer) {\n          renderer.removeClass(bodyContainer, 'dropup');\n          renderer.removeClass(bodyContainer, 'dropdown');\n          renderer.addClass(bodyContainer, dropdownClass);\n        }\n      }\n    }\n  }]);\n  return NgbDropdown;\n}();\nNgbDropdown.ɵfac = function NgbDropdown_Factory(t) {\n  return new (t || NgbDropdown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbDropdownConfig), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NgbNavbar, 8));\n};\nNgbDropdown.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdown,\n  selectors: [[\"\", \"ngbDropdown\", \"\"]],\n  contentQueries: function NgbDropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, true, ElementRef);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownAnchor, true);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._menu = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._menuElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._anchor = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbDropdown_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"show\", ctx.isOpen());\n    }\n  },\n  inputs: {\n    _open: [\"open\", \"_open\"],\n    placement: \"placement\",\n    container: \"container\",\n    autoClose: \"autoClose\",\n    display: \"display\"\n  },\n  outputs: {\n    openChange: \"openChange\"\n  },\n  exportAs: [\"ngbDropdown\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nNgbDropdown.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NgbDropdownConfig\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NgbNavbar,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n__decorate([ContentChild(NgbDropdownMenu, {\n  static: false\n})], NgbDropdown.prototype, \"_menu\", void 0);\n__decorate([ContentChild(NgbDropdownMenu, {\n  read: ElementRef,\n  static: false\n})], NgbDropdown.prototype, \"_menuElement\", void 0);\n__decorate([ContentChild(NgbDropdownAnchor, {\n  static: false\n})], NgbDropdown.prototype, \"_anchor\", void 0);\n__decorate([Input()], NgbDropdown.prototype, \"autoClose\", void 0);\n__decorate([Input('open')], NgbDropdown.prototype, \"_open\", void 0);\n__decorate([Input()], NgbDropdown.prototype, \"placement\", void 0);\n__decorate([Input()], NgbDropdown.prototype, \"container\", void 0);\n__decorate([Input()], NgbDropdown.prototype, \"display\", void 0);\n__decorate([Output()], NgbDropdown.prototype, \"openChange\", void 0);\nNgbDropdown = __decorate([__param(2, Inject(DOCUMENT)), __param(6, Optional())], NgbDropdown);\nvar NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\nvar NgbDropdownModule = /*#__PURE__*/_createClass(function NgbDropdownModule() {\n  _classCallCheck(this, NgbDropdownModule);\n});\nNgbDropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbDropdownModule\n});\nNgbDropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbDropdownModule_Factory(t) {\n    return new (t || NgbDropdownModule)();\n  }\n});\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\nvar NgbModalConfig = /*#__PURE__*/_createClass(function NgbModalConfig() {\n  _classCallCheck(this, NgbModalConfig);\n  this.backdrop = true;\n  this.keyboard = true;\n});\nNgbModalConfig.ɵfac = function NgbModalConfig_Factory(t) {\n  return new (t || NgbModalConfig)();\n};\nNgbModalConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModalConfig_Factory() {\n    return new NgbModalConfig();\n  },\n  token: NgbModalConfig,\n  providedIn: \"root\"\n});\nvar ContentRef = /*#__PURE__*/_createClass(function ContentRef(nodes, viewRef, componentRef) {\n  _classCallCheck(this, ContentRef);\n  this.nodes = nodes;\n  this.viewRef = viewRef;\n  this.componentRef = componentRef;\n});\nvar PopupService = /*#__PURE__*/function () {\n  function PopupService(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver, _applicationRef) {\n    _classCallCheck(this, PopupService);\n    this._type = _type;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._applicationRef = _applicationRef;\n  }\n  _createClass(PopupService, [{\n    key: \"open\",\n    value: function open(content, context) {\n      if (!this._windowRef) {\n        this._contentRef = this._getContentRef(content, context);\n        this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), this._viewContainerRef.length, this._injector, this._contentRef.nodes);\n      }\n      return this._windowRef;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._windowRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n        this._windowRef = null;\n        if (this._contentRef.viewRef) {\n          this._applicationRef.detachView(this._contentRef.viewRef);\n          this._contentRef.viewRef.destroy();\n          this._contentRef = null;\n        }\n      }\n    }\n  }, {\n    key: \"_getContentRef\",\n    value: function _getContentRef(content, context) {\n      if (!content) {\n        return new ContentRef([]);\n      } else if (content instanceof TemplateRef) {\n        var viewRef = content.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n      } else {\n        return new ContentRef([[this._renderer.createText(\"\".concat(content))]]);\n      }\n    }\n  }]);\n  return PopupService;\n}();\nvar noop = function noop() {};\nvar ɵ0$1 = noop;\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\nvar ScrollBar = /*#__PURE__*/function () {\n  function ScrollBar(_document) {\n    _classCallCheck(this, ScrollBar);\n    this._document = _document;\n  }\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  _createClass(ScrollBar, [{\n    key: \"compensate\",\n    value: function compensate() {\n      var width = this._getWidth();\n      return !this._isPresent(width) ? noop : this._adjustBody(width);\n    }\n    /**\n     * Adds a padding of the given width on the right of the body.\n     *\n     * @return a callback used to revert the padding to its previous value\n     */\n  }, {\n    key: \"_adjustBody\",\n    value: function _adjustBody(scrollbarWidth) {\n      var body = this._document.body;\n      var userSetPaddingStyle = body.style.paddingRight;\n      var actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n      body.style['padding-right'] = \"\".concat(actualPadding + scrollbarWidth, \"px\");\n      return function () {\n        return body.style['padding-right'] = userSetPaddingStyle;\n      };\n    }\n    /**\n     * Tells whether a scrollbar is currently present on the body.\n     *\n     * @return true if scrollbar is present, false otherwise\n     */\n  }, {\n    key: \"_isPresent\",\n    value: function _isPresent(scrollbarWidth) {\n      var rect = this._document.body.getBoundingClientRect();\n      var bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n      var uncertainty = 0.1 * scrollbarWidth;\n      return bodyToViewportGap >= scrollbarWidth - uncertainty;\n    }\n    /**\n     * Calculates and returns the width of a scrollbar.\n     *\n     * @return the width of a scrollbar on this page\n     */\n  }, {\n    key: \"_getWidth\",\n    value: function _getWidth() {\n      var measurer = this._document.createElement('div');\n      measurer.className = 'modal-scrollbar-measure';\n      var body = this._document.body;\n      body.appendChild(measurer);\n      var width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n      body.removeChild(measurer);\n      return width;\n    }\n  }]);\n  return ScrollBar;\n}();\nScrollBar.ɵfac = function ScrollBar_Factory(t) {\n  return new (t || ScrollBar)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\nScrollBar.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\nScrollBar.ɵprov = ɵɵdefineInjectable({\n  factory: function ScrollBar_Factory() {\n    return new ScrollBar(ɵɵinject(DOCUMENT));\n  },\n  token: ScrollBar,\n  providedIn: \"root\"\n});\nScrollBar = __decorate([__param(0, Inject(DOCUMENT))], ScrollBar);\nvar NgbModalBackdrop = /*#__PURE__*/_createClass(function NgbModalBackdrop() {\n  _classCallCheck(this, NgbModalBackdrop);\n});\nNgbModalBackdrop.ɵfac = function NgbModalBackdrop_Factory(t) {\n  return new (t || NgbModalBackdrop)();\n};\nNgbModalBackdrop.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbModalBackdrop,\n  selectors: [[\"ngb-modal-backdrop\"]],\n  hostAttrs: [2, \"z-index\", \"1050\"],\n  hostVars: 2,\n  hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"modal-backdrop fade show\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n    }\n  },\n  inputs: {\n    backdropClass: \"backdropClass\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function NgbModalBackdrop_Template(rf, ctx) {},\n  encapsulation: 2\n});\n__decorate([Input()], NgbModalBackdrop.prototype, \"backdropClass\", void 0);\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nvar NgbActiveModal = /*#__PURE__*/function () {\n  function NgbActiveModal() {\n    _classCallCheck(this, NgbActiveModal);\n  }\n  _createClass(NgbActiveModal, [{\n    key: \"close\",\n    value:\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    function close(result) {}\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n  }, {\n    key: \"dismiss\",\n    value: function dismiss(reason) {}\n  }]);\n  return NgbActiveModal;\n}();\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nvar NgbModalRef = /*#__PURE__*/function () {\n  function NgbModalRef(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    var _this23 = this;\n    _classCallCheck(this, NgbModalRef);\n    this._windowCmptRef = _windowCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n    _windowCmptRef.instance.dismissEvent.subscribe(function (reason) {\n      _this23.dismiss(reason);\n    });\n    this.result = new Promise(function (resolve, reject) {\n      _this23._resolve = resolve;\n      _this23._reject = reject;\n    });\n    this.result.then(null, function () {});\n  }\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  _createClass(NgbModalRef, [{\n    key: \"componentInstance\",\n    get: function get() {\n      if (this._contentRef && this._contentRef.componentRef) {\n        return this._contentRef.componentRef.instance;\n      }\n    }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n  }, {\n    key: \"close\",\n    value: function close(result) {\n      if (this._windowCmptRef) {\n        this._resolve(result);\n        this._removeModalElements();\n      }\n    }\n  }, {\n    key: \"_dismiss\",\n    value: function _dismiss(reason) {\n      this._reject(reason);\n      this._removeModalElements();\n    }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n  }, {\n    key: \"dismiss\",\n    value: function dismiss(reason) {\n      var _this24 = this;\n      if (this._windowCmptRef) {\n        if (!this._beforeDismiss) {\n          this._dismiss(reason);\n        } else {\n          var dismiss = this._beforeDismiss();\n          if (dismiss && dismiss.then) {\n            dismiss.then(function (result) {\n              if (result !== false) {\n                _this24._dismiss(reason);\n              }\n            }, function () {});\n          } else if (dismiss !== false) {\n            this._dismiss(reason);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_removeModalElements\",\n    value: function _removeModalElements() {\n      var windowNativeEl = this._windowCmptRef.location.nativeElement;\n      windowNativeEl.parentNode.removeChild(windowNativeEl);\n      this._windowCmptRef.destroy();\n      if (this._backdropCmptRef) {\n        var backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n        backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n        this._backdropCmptRef.destroy();\n      }\n      if (this._contentRef && this._contentRef.viewRef) {\n        this._contentRef.viewRef.destroy();\n      }\n      this._windowCmptRef = null;\n      this._backdropCmptRef = null;\n      this._contentRef = null;\n    }\n  }]);\n  return NgbModalRef;\n}();\nvar ModalDismissReasons;\n(function (ModalDismissReasons) {\n  ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\nvar NgbModalWindow = /*#__PURE__*/function () {\n  function NgbModalWindow(_document, _elRef, _zone) {\n    _classCallCheck(this, NgbModalWindow);\n    this._document = _document;\n    this._elRef = _elRef;\n    this._zone = _zone;\n    this._closed$ = new Subject();\n    this.backdrop = true;\n    this.keyboard = true;\n    this.dismissEvent = new EventEmitter();\n  }\n  _createClass(NgbModalWindow, [{\n    key: \"dismiss\",\n    value: function dismiss(reason) {\n      this.dismissEvent.emit(reason);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._elWithFocus = this._document.activeElement;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this25 = this;\n      var nativeElement = this._elRef.nativeElement;\n      this._zone.runOutsideAngular(function () {\n        fromEvent(nativeElement, 'keydown').pipe(takeUntil(_this25._closed$),\n        // tslint:disable-next-line:deprecation\n        filter(function (e) {\n          return e.which === Key.Escape && _this25.keyboard;\n        })).subscribe(function (event) {\n          return requestAnimationFrame(function () {\n            if (!event.defaultPrevented) {\n              _this25._zone.run(function () {\n                return _this25.dismiss(ModalDismissReasons.ESC);\n              });\n            }\n          });\n        });\n        // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n        // inside the modal dialog and releasing it outside\n        var preventClose = false;\n        fromEvent(_this25._dialogEl.nativeElement, 'mousedown').pipe(takeUntil(_this25._closed$), tap(function () {\n          return preventClose = false;\n        }), switchMap(function () {\n          return fromEvent(nativeElement, 'mouseup').pipe(takeUntil(_this25._closed$), take(1));\n        }), filter(function (_ref11) {\n          var target = _ref11.target;\n          return nativeElement === target;\n        })).subscribe(function () {\n          preventClose = true;\n        });\n        // We're listening to 'click' to dismiss modal on modal window click, except when:\n        // 1. clicking on modal dialog itself\n        // 2. closing was prevented by mousedown/up handlers\n        // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n        fromEvent(nativeElement, 'click').pipe(takeUntil(_this25._closed$)).subscribe(function (_ref12) {\n          var target = _ref12.target;\n          if (_this25.backdrop === true && nativeElement === target && !preventClose) {\n            _this25._zone.run(function () {\n              return _this25.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n            });\n          }\n          preventClose = false;\n        });\n      });\n      if (!nativeElement.contains(document.activeElement)) {\n        var autoFocusable = nativeElement.querySelector(\"[ngbAutofocus]\");\n        var firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n        var elementToFocus = autoFocusable || firstFocusable || nativeElement;\n        elementToFocus.focus();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var _this26 = this;\n      var body = this._document.body;\n      var elWithFocus = this._elWithFocus;\n      var elementToFocus;\n      if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n        elementToFocus = elWithFocus;\n      } else {\n        elementToFocus = body;\n      }\n      this._zone.runOutsideAngular(function () {\n        setTimeout(function () {\n          return elementToFocus.focus();\n        });\n        _this26._elWithFocus = null;\n      });\n      this._closed$.next();\n    }\n  }]);\n  return NgbModalWindow;\n}();\nNgbModalWindow.ɵfac = function NgbModalWindow_Factory(t) {\n  return new (t || NgbModalWindow)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nNgbModalWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbModalWindow,\n  selectors: [[\"ngb-modal-window\"]],\n  viewQuery: function NgbModalWindow_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c31, true);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._dialogEl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"],\n  hostVars: 4,\n  hostBindings: function NgbModalWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy);\n      ɵngcc0.ɵɵclassMap(\"modal fade show d-block\" + (ctx.windowClass ? \" \" + ctx.windowClass : \"\"));\n    }\n  },\n  inputs: {\n    backdrop: \"backdrop\",\n    keyboard: \"keyboard\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    centered: \"centered\",\n    scrollable: \"scrollable\",\n    size: \"size\",\n    windowClass: \"windowClass\"\n  },\n  outputs: {\n    dismissEvent: \"dismiss\"\n  },\n  ngContentSelectors: _c5,\n  decls: 4,\n  vars: 2,\n  consts: [[\"role\", \"document\"], [\"dialog\", \"\"], [1, \"modal-content\"]],\n  template: function NgbModalWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"modal-dialog\" + (ctx.size ? \" modal-\" + ctx.size : \"\") + (ctx.centered ? \" modal-dialog-centered\" : \"\") + (ctx.scrollable ? \" modal-dialog-scrollable\" : \"\"));\n    }\n  },\n  styles: [\"ngb-modal-window .component-host-scrollable{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}\"],\n  encapsulation: 2\n});\nNgbModalWindow.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n__decorate([ViewChild('dialog', {\n  static: true\n})], NgbModalWindow.prototype, \"_dialogEl\", void 0);\n__decorate([Input()], NgbModalWindow.prototype, \"ariaLabelledBy\", void 0);\n__decorate([Input()], NgbModalWindow.prototype, \"backdrop\", void 0);\n__decorate([Input()], NgbModalWindow.prototype, \"centered\", void 0);\n__decorate([Input()], NgbModalWindow.prototype, \"keyboard\", void 0);\n__decorate([Input()], NgbModalWindow.prototype, \"scrollable\", void 0);\n__decorate([Input()], NgbModalWindow.prototype, \"size\", void 0);\n__decorate([Input()], NgbModalWindow.prototype, \"windowClass\", void 0);\n__decorate([Output('dismiss')], NgbModalWindow.prototype, \"dismissEvent\", void 0);\nNgbModalWindow = __decorate([__param(0, Inject(DOCUMENT))], NgbModalWindow);\nvar NgbModalStack = /*#__PURE__*/function () {\n  function NgbModalStack(_applicationRef, _injector, _document, _scrollBar, _rendererFactory, _ngZone) {\n    var _this27 = this;\n    _classCallCheck(this, NgbModalStack);\n    this._applicationRef = _applicationRef;\n    this._injector = _injector;\n    this._document = _document;\n    this._scrollBar = _scrollBar;\n    this._rendererFactory = _rendererFactory;\n    this._ngZone = _ngZone;\n    this._activeWindowCmptHasChanged = new Subject();\n    this._ariaHiddenValues = new Map();\n    this._backdropAttributes = ['backdropClass'];\n    this._modalRefs = [];\n    this._windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n    this._windowCmpts = [];\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(function () {\n      if (_this27._windowCmpts.length) {\n        var activeWindowCmpt = _this27._windowCmpts[_this27._windowCmpts.length - 1];\n        ngbFocusTrap(_this27._ngZone, activeWindowCmpt.location.nativeElement, _this27._activeWindowCmptHasChanged);\n        _this27._revertAriaHidden();\n        _this27._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n  _createClass(NgbModalStack, [{\n    key: \"open\",\n    value: function open(moduleCFR, contentInjector, content, options) {\n      var _this28 = this;\n      var containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n      var renderer = this._rendererFactory.createRenderer(null, null);\n      var revertPaddingForScrollBar = this._scrollBar.compensate();\n      var removeBodyClass = function removeBodyClass() {\n        if (!_this28._modalRefs.length) {\n          renderer.removeClass(_this28._document.body, 'modal-open');\n          _this28._revertAriaHidden();\n        }\n      };\n      if (!containerEl) {\n        throw new Error(\"The specified modal container \\\"\".concat(options.container || 'body', \"\\\" was not found in the DOM.\"));\n      }\n      var activeModal = new NgbActiveModal();\n      var contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n      var backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n      var windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n      var ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n      this._registerModalRef(ngbModalRef);\n      this._registerWindowCmpt(windowCmptRef);\n      ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n      ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n      activeModal.close = function (result) {\n        ngbModalRef.close(result);\n      };\n      activeModal.dismiss = function (reason) {\n        ngbModalRef.dismiss(reason);\n      };\n      this._applyWindowOptions(windowCmptRef.instance, options);\n      if (this._modalRefs.length === 1) {\n        renderer.addClass(this._document.body, 'modal-open');\n      }\n      if (backdropCmptRef && backdropCmptRef.instance) {\n        this._applyBackdropOptions(backdropCmptRef.instance, options);\n      }\n      return ngbModalRef;\n    }\n  }, {\n    key: \"dismissAll\",\n    value: function dismissAll(reason) {\n      this._modalRefs.forEach(function (ngbModalRef) {\n        return ngbModalRef.dismiss(reason);\n      });\n    }\n  }, {\n    key: \"hasOpenModals\",\n    value: function hasOpenModals() {\n      return this._modalRefs.length > 0;\n    }\n  }, {\n    key: \"_attachBackdrop\",\n    value: function _attachBackdrop(moduleCFR, containerEl) {\n      var backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n      var backdropCmptRef = backdropFactory.create(this._injector);\n      this._applicationRef.attachView(backdropCmptRef.hostView);\n      containerEl.appendChild(backdropCmptRef.location.nativeElement);\n      return backdropCmptRef;\n    }\n  }, {\n    key: \"_attachWindowComponent\",\n    value: function _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n      var windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n      var windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n      this._applicationRef.attachView(windowCmptRef.hostView);\n      containerEl.appendChild(windowCmptRef.location.nativeElement);\n      return windowCmptRef;\n    }\n  }, {\n    key: \"_applyWindowOptions\",\n    value: function _applyWindowOptions(windowInstance, options) {\n      this._windowAttributes.forEach(function (optionName) {\n        if (isDefined(options[optionName])) {\n          windowInstance[optionName] = options[optionName];\n        }\n      });\n    }\n  }, {\n    key: \"_applyBackdropOptions\",\n    value: function _applyBackdropOptions(backdropInstance, options) {\n      this._backdropAttributes.forEach(function (optionName) {\n        if (isDefined(options[optionName])) {\n          backdropInstance[optionName] = options[optionName];\n        }\n      });\n    }\n  }, {\n    key: \"_getContentRef\",\n    value: function _getContentRef(moduleCFR, contentInjector, content, activeModal, options) {\n      if (!content) {\n        return new ContentRef([]);\n      } else if (content instanceof TemplateRef) {\n        return this._createFromTemplateRef(content, activeModal);\n      } else if (isString(content)) {\n        return this._createFromString(content);\n      } else {\n        return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n      }\n    }\n  }, {\n    key: \"_createFromTemplateRef\",\n    value: function _createFromTemplateRef(content, activeModal) {\n      var context = {\n        $implicit: activeModal,\n        close: function close(result) {\n          activeModal.close(result);\n        },\n        dismiss: function dismiss(reason) {\n          activeModal.dismiss(reason);\n        }\n      };\n      var viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n  }, {\n    key: \"_createFromString\",\n    value: function _createFromString(content) {\n      var component = this._document.createTextNode(\"\".concat(content));\n      return new ContentRef([[component]]);\n    }\n  }, {\n    key: \"_createFromComponent\",\n    value: function _createFromComponent(moduleCFR, contentInjector, content, context, options) {\n      var contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n      var modalContentInjector = Injector.create({\n        providers: [{\n          provide: NgbActiveModal,\n          useValue: context\n        }],\n        parent: contentInjector\n      });\n      var componentRef = contentCmptFactory.create(modalContentInjector);\n      var componentNativeEl = componentRef.location.nativeElement;\n      if (options.scrollable) {\n        componentNativeEl.classList.add('component-host-scrollable');\n      }\n      this._applicationRef.attachView(componentRef.hostView);\n      // FIXME: we should here get rid of the component nativeElement\n      // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n      return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n  }, {\n    key: \"_setAriaHidden\",\n    value: function _setAriaHidden(element) {\n      var _this29 = this;\n      var parent = element.parentElement;\n      if (parent && element !== this._document.body) {\n        Array.from(parent.children).forEach(function (sibling) {\n          if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n            _this29._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n            sibling.setAttribute('aria-hidden', 'true');\n          }\n        });\n        this._setAriaHidden(parent);\n      }\n    }\n  }, {\n    key: \"_revertAriaHidden\",\n    value: function _revertAriaHidden() {\n      this._ariaHiddenValues.forEach(function (value, element) {\n        if (value) {\n          element.setAttribute('aria-hidden', value);\n        } else {\n          element.removeAttribute('aria-hidden');\n        }\n      });\n      this._ariaHiddenValues.clear();\n    }\n  }, {\n    key: \"_registerModalRef\",\n    value: function _registerModalRef(ngbModalRef) {\n      var _this30 = this;\n      var unregisterModalRef = function unregisterModalRef() {\n        var index = _this30._modalRefs.indexOf(ngbModalRef);\n        if (index > -1) {\n          _this30._modalRefs.splice(index, 1);\n        }\n      };\n      this._modalRefs.push(ngbModalRef);\n      ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n  }, {\n    key: \"_registerWindowCmpt\",\n    value: function _registerWindowCmpt(ngbWindowCmpt) {\n      var _this31 = this;\n      this._windowCmpts.push(ngbWindowCmpt);\n      this._activeWindowCmptHasChanged.next();\n      ngbWindowCmpt.onDestroy(function () {\n        var index = _this31._windowCmpts.indexOf(ngbWindowCmpt);\n        if (index > -1) {\n          _this31._windowCmpts.splice(index, 1);\n          _this31._activeWindowCmptHasChanged.next();\n        }\n      });\n    }\n  }]);\n  return NgbModalStack;\n}();\nNgbModalStack.ɵfac = function NgbModalStack_Factory(t) {\n  return new (t || NgbModalStack)(ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ScrollBar), ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nNgbModalStack.ctorParameters = function () {\n  return [{\n    type: ApplicationRef\n  }, {\n    type: Injector\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ScrollBar\n  }, {\n    type: RendererFactory2\n  }, {\n    type: NgZone\n  }];\n};\nNgbModalStack.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModalStack_Factory() {\n    return new NgbModalStack(ɵɵinject(ApplicationRef), ɵɵinject(INJECTOR), ɵɵinject(DOCUMENT), ɵɵinject(ScrollBar), ɵɵinject(RendererFactory2), ɵɵinject(NgZone));\n  },\n  token: NgbModalStack,\n  providedIn: \"root\"\n});\nNgbModalStack = __decorate([__param(2, Inject(DOCUMENT))], NgbModalStack);\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\nvar NgbModal = /*#__PURE__*/function () {\n  function NgbModal(_moduleCFR, _injector, _modalStack, _config) {\n    _classCallCheck(this, NgbModal);\n    this._moduleCFR = _moduleCFR;\n    this._injector = _injector;\n    this._modalStack = _modalStack;\n    this._config = _config;\n  }\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  _createClass(NgbModal, [{\n    key: \"open\",\n    value: function open(content) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var combinedOptions = Object.assign({}, this._config, options);\n      return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n    }\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * @since 3.1.0\n     */\n  }, {\n    key: \"dismissAll\",\n    value: function dismissAll(reason) {\n      this._modalStack.dismissAll(reason);\n    }\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * @since 3.3.0\n     */\n  }, {\n    key: \"hasOpenModals\",\n    value: function hasOpenModals() {\n      return this._modalStack.hasOpenModals();\n    }\n  }]);\n  return NgbModal;\n}();\nNgbModal.ɵfac = function NgbModal_Factory(t) {\n  return new (t || NgbModal)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(NgbModalStack), ɵngcc0.ɵɵinject(NgbModalConfig));\n};\nNgbModal.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }, {\n    type: Injector\n  }, {\n    type: NgbModalStack\n  }, {\n    type: NgbModalConfig\n  }];\n};\nNgbModal.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModal_Factory() {\n    return new NgbModal(ɵɵinject(ComponentFactoryResolver), ɵɵinject(INJECTOR), ɵɵinject(NgbModalStack), ɵɵinject(NgbModalConfig));\n  },\n  token: NgbModal,\n  providedIn: \"root\"\n});\nvar NgbModalModule = /*#__PURE__*/_createClass(function NgbModalModule() {\n  _classCallCheck(this, NgbModalModule);\n});\nNgbModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbModalModule\n});\nNgbModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbModalModule_Factory(t) {\n    return new (t || NgbModalModule)();\n  },\n  providers: [NgbModal]\n});\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\nvar NgbNavConfig = /*#__PURE__*/_createClass(function NgbNavConfig() {\n  _classCallCheck(this, NgbNavConfig);\n  this.destroyOnHide = true;\n  this.orientation = 'horizontal';\n  this.roles = 'tablist';\n});\nNgbNavConfig.ɵfac = function NgbNavConfig_Factory(t) {\n  return new (t || NgbNavConfig)();\n};\nNgbNavConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbNavConfig_Factory() {\n    return new NgbNavConfig();\n  },\n  token: NgbNavConfig,\n  providedIn: \"root\"\n});\nvar isValidNavId = function isValidNavId(id) {\n  return isDefined(id) && id !== '';\n};\nvar ɵ0$2 = isValidNavId;\nvar navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\nvar NgbNavContent = /*#__PURE__*/_createClass(function NgbNavContent(templateRef) {\n  _classCallCheck(this, NgbNavContent);\n  this.templateRef = templateRef;\n});\nNgbNavContent.ɵfac = function NgbNavContent_Factory(t) {\n  return new (t || NgbNavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbNavContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavContent,\n  selectors: [[\"ng-template\", \"ngbNavContent\", \"\"]]\n});\nNgbNavContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\nvar NgbNavItem = /*#__PURE__*/function () {\n  function NgbNavItem(nav, elementRef) {\n    _classCallCheck(this, NgbNavItem);\n    this.elementRef = elementRef;\n    /**\n     * If `true`, the current nav item is disabled and can't be toggled by user.\n     *\n     * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n     */\n    this.disabled = false;\n    // TODO: cf https://github.com/angular/angular/issues/30106\n    this._nav = nav;\n  }\n  _createClass(NgbNavItem, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n      // only @ContentChildren allows us to specify the {descendants: false} option.\n      // Without {descendants: false} we are hitting bugs described in:\n      // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n      this.contentTpl = this.contentTpls.first;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (!isDefined(this.domId)) {\n        this.domId = \"ngb-nav-\".concat(navCounter++);\n      }\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._nav.activeId === this.id;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return isValidNavId(this._id) ? this._id : this.domId;\n    }\n  }, {\n    key: \"panelDomId\",\n    get: function get() {\n      return \"\".concat(this.domId, \"-panel\");\n    }\n  }, {\n    key: \"isPanelInDom\",\n    value: function isPanelInDom() {\n      return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n    }\n  }]);\n  return NgbNavItem;\n}();\nNgbNavItem.ɵfac = function NgbNavItem_Factory(t) {\n  return new (t || NgbNavItem)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbNav;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nNgbNavItem.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavItem,\n  selectors: [[\"\", \"ngbNavItem\", \"\"]],\n  contentQueries: function NgbNavItem_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavContent, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbNavItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"nav-item\", true);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    domId: \"domId\",\n    destroyOnHide: \"destroyOnHide\",\n    _id: [\"ngbNavItem\", \"_id\"]\n  },\n  exportAs: [\"ngbNavItem\"]\n});\nNgbNavItem.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbNav;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\n__decorate([Input()], NgbNavItem.prototype, \"destroyOnHide\", void 0);\n__decorate([Input()], NgbNavItem.prototype, \"disabled\", void 0);\n__decorate([Input()], NgbNavItem.prototype, \"domId\", void 0);\n__decorate([Input('ngbNavItem')], NgbNavItem.prototype, \"_id\", void 0);\n__decorate([ContentChildren(NgbNavContent, {\n  descendants: false\n})], NgbNavItem.prototype, \"contentTpls\", void 0);\nNgbNavItem = __decorate([__param(0, Inject(forwardRef(function () {\n  return NgbNav;\n})))], NgbNavItem);\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\nvar NgbNav = /*#__PURE__*/function () {\n  function NgbNav(role, config, _cd) {\n    _classCallCheck(this, NgbNav);\n    this.role = role;\n    this._cd = _cd;\n    /**\n     * The event emitted after the active nav changes\n     * The payload of the event is the newly active nav id\n     *\n     * If you want to prevent nav change, you should use `(navChange)` event\n     */\n    this.activeIdChange = new EventEmitter();\n    /**\n     * The nav change event emitted right before the nav change happens on user click.\n     *\n     * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n     *\n     * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n     */\n    this.navChange = new EventEmitter();\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n  }\n  _createClass(NgbNav, [{\n    key: \"click\",\n    value: function click(item) {\n      if (!item.disabled) {\n        this._updateActiveId(item.id);\n      }\n    }\n    /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     */\n  }, {\n    key: \"select\",\n    value: function select(id) {\n      this._updateActiveId(id, false);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      if (!isDefined(this.activeId)) {\n        var _nextId = this.items.first ? this.items.first.id : null;\n        if (isValidNavId(_nextId)) {\n          this._updateActiveId(_nextId, false);\n          this._cd.detectChanges();\n        }\n      }\n    }\n  }, {\n    key: \"_updateActiveId\",\n    value: function _updateActiveId(nextId) {\n      var emitNavChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (this.activeId !== nextId) {\n        var defaultPrevented = false;\n        if (emitNavChange) {\n          this.navChange.emit({\n            activeId: this.activeId,\n            nextId: nextId,\n            preventDefault: function preventDefault() {\n              defaultPrevented = true;\n            }\n          });\n        }\n        if (!defaultPrevented) {\n          this.activeId = nextId;\n          this.activeIdChange.emit(nextId);\n        }\n      }\n    }\n  }]);\n  return NgbNav;\n}();\nNgbNav.ɵfac = function NgbNav_Factory(t) {\n  return new (t || NgbNav)(ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NgbNavConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nNgbNav.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNav,\n  selectors: [[\"\", \"ngbNav\", \"\"]],\n  contentQueries: function NgbNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavItem, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function NgbNav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.orientation === \"vertical\" && ctx.roles === \"tablist\" ? \"vertical\" : undefined)(\"role\", ctx.role ? ctx.role : ctx.roles ? \"tablist\" : undefined);\n      ɵngcc0.ɵɵclassProp(\"nav\", true)(\"flex-column\", ctx.orientation === \"vertical\");\n    }\n  },\n  inputs: {\n    destroyOnHide: \"destroyOnHide\",\n    orientation: \"orientation\",\n    roles: \"roles\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    activeIdChange: \"activeIdChange\",\n    navChange: \"navChange\"\n  },\n  exportAs: [\"ngbNav\"]\n});\nNgbNav.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['role']\n    }]\n  }, {\n    type: NgbNavConfig\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n__decorate([Input()], NgbNav.prototype, \"activeId\", void 0);\n__decorate([Output()], NgbNav.prototype, \"activeIdChange\", void 0);\n__decorate([Input()], NgbNav.prototype, \"destroyOnHide\", void 0);\n__decorate([Input()], NgbNav.prototype, \"orientation\", void 0);\n__decorate([Input()], NgbNav.prototype, \"roles\", void 0);\n__decorate([ContentChildren(NgbNavItem)], NgbNav.prototype, \"items\", void 0);\n__decorate([Output()], NgbNav.prototype, \"navChange\", void 0);\nNgbNav = __decorate([__param(0, Attribute('role'))], NgbNav);\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\nvar NgbNavLink = /*#__PURE__*/function () {\n  function NgbNavLink(role, navItem, nav) {\n    _classCallCheck(this, NgbNavLink);\n    this.role = role;\n    this.navItem = navItem;\n    this.nav = nav;\n  }\n  _createClass(NgbNavLink, [{\n    key: \"hasNavItemClass\",\n    value: function hasNavItemClass() {\n      // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n      return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n    }\n  }]);\n  return NgbNavLink;\n}();\nNgbNavLink.ɵfac = function NgbNavLink_Factory(t) {\n  return new (t || NgbNavLink)(ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NgbNavItem), ɵngcc0.ɵɵdirectiveInject(NgbNav));\n};\nNgbNavLink.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavLink,\n  selectors: [[\"a\", \"ngbNavLink\", \"\"]],\n  hostAttrs: [\"href\", \"\"],\n  hostVars: 14,\n  hostBindings: function NgbNavLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbNavLink_click_HostBindingHandler($event) {\n        ctx.nav.click(ctx.navItem);\n        return $event.preventDefault();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.navItem.domId);\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tab\" : undefined)(\"tabindex\", ctx.navItem.disabled ? -1 : undefined)(\"aria-controls\", ctx.navItem.isPanelInDom() ? ctx.navItem.panelDomId : null)(\"aria-selected\", ctx.navItem.active)(\"aria-disabled\", ctx.navItem.disabled);\n      ɵngcc0.ɵɵclassProp(\"nav-link\", true)(\"nav-item\", ctx.hasNavItemClass())(\"active\", ctx.navItem.active)(\"disabled\", ctx.navItem.disabled);\n    }\n  }\n});\nNgbNavLink.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['role']\n    }]\n  }, {\n    type: NgbNavItem\n  }, {\n    type: NgbNav\n  }];\n};\nNgbNavLink = __decorate([__param(0, Attribute('role'))], NgbNavLink);\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\nvar NgbNavOutlet = /*#__PURE__*/_createClass(function NgbNavOutlet() {\n  _classCallCheck(this, NgbNavOutlet);\n});\nNgbNavOutlet.ɵfac = function NgbNavOutlet_Factory(t) {\n  return new (t || NgbNavOutlet)();\n};\nNgbNavOutlet.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbNavOutlet,\n  selectors: [[\"\", \"ngbNavOutlet\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NgbNavOutlet_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"tab-content\", true);\n    }\n  },\n  inputs: {\n    paneRole: \"paneRole\",\n    nav: [\"ngbNavOutlet\", \"nav\"]\n  },\n  attrs: _c32,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"tab-pane\", 3, \"id\", \"active\", 4, \"ngIf\"], [1, \"tab-pane\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbNavOutlet_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.nav.items);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\n__decorate([Input()], NgbNavOutlet.prototype, \"paneRole\", void 0);\n__decorate([Input('ngbNavOutlet')], NgbNavOutlet.prototype, \"nav\", void 0);\nvar NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\nvar NgbNavModule = /*#__PURE__*/_createClass(function NgbNavModule() {\n  _classCallCheck(this, NgbNavModule);\n});\nNgbNavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbNavModule\n});\nNgbNavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbNavModule_Factory(t) {\n    return new (t || NgbNavModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nvar NgbPaginationConfig = /*#__PURE__*/_createClass(function NgbPaginationConfig() {\n  _classCallCheck(this, NgbPaginationConfig);\n  this.disabled = false;\n  this.boundaryLinks = false;\n  this.directionLinks = true;\n  this.ellipses = true;\n  this.maxSize = 0;\n  this.pageSize = 10;\n  this.rotate = false;\n});\nNgbPaginationConfig.ɵfac = function NgbPaginationConfig_Factory(t) {\n  return new (t || NgbPaginationConfig)();\n};\nNgbPaginationConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbPaginationConfig_Factory() {\n    return new NgbPaginationConfig();\n  },\n  token: NgbPaginationConfig,\n  providedIn: \"root\"\n});\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\nvar NgbPaginationEllipsis = /*#__PURE__*/_createClass(function NgbPaginationEllipsis(templateRef) {\n  _classCallCheck(this, NgbPaginationEllipsis);\n  this.templateRef = templateRef;\n});\nNgbPaginationEllipsis.ɵfac = function NgbPaginationEllipsis_Factory(t) {\n  return new (t || NgbPaginationEllipsis)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbPaginationEllipsis.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationEllipsis,\n  selectors: [[\"ng-template\", \"ngbPaginationEllipsis\", \"\"]]\n});\nNgbPaginationEllipsis.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\nvar NgbPaginationFirst = /*#__PURE__*/_createClass(function NgbPaginationFirst(templateRef) {\n  _classCallCheck(this, NgbPaginationFirst);\n  this.templateRef = templateRef;\n});\nNgbPaginationFirst.ɵfac = function NgbPaginationFirst_Factory(t) {\n  return new (t || NgbPaginationFirst)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbPaginationFirst.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationFirst,\n  selectors: [[\"ng-template\", \"ngbPaginationFirst\", \"\"]]\n});\nNgbPaginationFirst.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\nvar NgbPaginationLast = /*#__PURE__*/_createClass(function NgbPaginationLast(templateRef) {\n  _classCallCheck(this, NgbPaginationLast);\n  this.templateRef = templateRef;\n});\nNgbPaginationLast.ɵfac = function NgbPaginationLast_Factory(t) {\n  return new (t || NgbPaginationLast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbPaginationLast.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationLast,\n  selectors: [[\"ng-template\", \"ngbPaginationLast\", \"\"]]\n});\nNgbPaginationLast.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\nvar NgbPaginationNext = /*#__PURE__*/_createClass(function NgbPaginationNext(templateRef) {\n  _classCallCheck(this, NgbPaginationNext);\n  this.templateRef = templateRef;\n});\nNgbPaginationNext.ɵfac = function NgbPaginationNext_Factory(t) {\n  return new (t || NgbPaginationNext)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbPaginationNext.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationNext,\n  selectors: [[\"ng-template\", \"ngbPaginationNext\", \"\"]]\n});\nNgbPaginationNext.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\nvar NgbPaginationNumber = /*#__PURE__*/_createClass(function NgbPaginationNumber(templateRef) {\n  _classCallCheck(this, NgbPaginationNumber);\n  this.templateRef = templateRef;\n});\nNgbPaginationNumber.ɵfac = function NgbPaginationNumber_Factory(t) {\n  return new (t || NgbPaginationNumber)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbPaginationNumber.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationNumber,\n  selectors: [[\"ng-template\", \"ngbPaginationNumber\", \"\"]]\n});\nNgbPaginationNumber.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\nvar NgbPaginationPrevious = /*#__PURE__*/_createClass(function NgbPaginationPrevious(templateRef) {\n  _classCallCheck(this, NgbPaginationPrevious);\n  this.templateRef = templateRef;\n});\nNgbPaginationPrevious.ɵfac = function NgbPaginationPrevious_Factory(t) {\n  return new (t || NgbPaginationPrevious)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbPaginationPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationPrevious,\n  selectors: [[\"ng-template\", \"ngbPaginationPrevious\", \"\"]]\n});\nNgbPaginationPrevious.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\nvar NgbPagination = /*#__PURE__*/function () {\n  function NgbPagination(config) {\n    _classCallCheck(this, NgbPagination);\n    this.pageCount = 0;\n    this.pages = [];\n    /**\n     *  The current page.\n     *\n     *  Page numbers start with `1`.\n     */\n    this.page = 1;\n    /**\n     *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n     *\n     *  Event payload is the number of the newly selected page.\n     *\n     *  Page numbers start with `1`.\n     */\n    this.pageChange = new EventEmitter(true);\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n  _createClass(NgbPagination, [{\n    key: \"hasPrevious\",\n    value: function hasPrevious() {\n      return this.page > 1;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.page < this.pageCount;\n    }\n  }, {\n    key: \"nextDisabled\",\n    value: function nextDisabled() {\n      return !this.hasNext() || this.disabled;\n    }\n  }, {\n    key: \"previousDisabled\",\n    value: function previousDisabled() {\n      return !this.hasPrevious() || this.disabled;\n    }\n  }, {\n    key: \"selectPage\",\n    value: function selectPage(pageNumber) {\n      this._updatePages(pageNumber);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this._updatePages(this.page);\n    }\n  }, {\n    key: \"isEllipsis\",\n    value: function isEllipsis(pageNumber) {\n      return pageNumber === -1;\n    }\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n  }, {\n    key: \"_applyEllipses\",\n    value: function _applyEllipses(start, end) {\n      if (this.ellipses) {\n        if (start > 0) {\n          // The first page will always be included. If the displayed range\n          // starts after the third page, then add ellipsis. But if the range\n          // starts on the third page, then add the second page instead of\n          // an ellipsis, because the ellipsis would only hide a single page.\n          if (start > 2) {\n            this.pages.unshift(-1);\n          } else if (start === 2) {\n            this.pages.unshift(2);\n          }\n          this.pages.unshift(1);\n        }\n        if (end < this.pageCount) {\n          // The last page will always be included. If the displayed range\n          // ends before the third-last page, then add ellipsis. But if the range\n          // ends on third-last page, then add the second-last page instead of\n          // an ellipsis, because the ellipsis would only hide a single page.\n          if (end < this.pageCount - 2) {\n            this.pages.push(-1);\n          } else if (end === this.pageCount - 2) {\n            this.pages.push(this.pageCount - 1);\n          }\n          this.pages.push(this.pageCount);\n        }\n      }\n    }\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n  }, {\n    key: \"_applyRotation\",\n    value: function _applyRotation() {\n      var start = 0;\n      var end = this.pageCount;\n      var leftOffset = Math.floor(this.maxSize / 2);\n      var rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n      if (this.page <= leftOffset) {\n        // very beginning, no rotation -> [0..maxSize]\n        end = this.maxSize;\n      } else if (this.pageCount - this.page < leftOffset) {\n        // very end, no rotation -> [len-maxSize..len]\n        start = this.pageCount - this.maxSize;\n      } else {\n        // rotate\n        start = this.page - leftOffset - 1;\n        end = this.page + rightOffset;\n      }\n      return [start, end];\n    }\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     */\n  }, {\n    key: \"_applyPagination\",\n    value: function _applyPagination() {\n      var page = Math.ceil(this.page / this.maxSize) - 1;\n      var start = page * this.maxSize;\n      var end = start + this.maxSize;\n      return [start, end];\n    }\n  }, {\n    key: \"_setPageInRange\",\n    value: function _setPageInRange(newPageNo) {\n      var prevPageNo = this.page;\n      this.page = getValueInRange(newPageNo, this.pageCount, 1);\n      if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n        this.pageChange.emit(this.page);\n      }\n    }\n  }, {\n    key: \"_updatePages\",\n    value: function _updatePages(newPage) {\n      this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n      if (!isNumber(this.pageCount)) {\n        this.pageCount = 0;\n      }\n      // fill-in model needed to render pages\n      this.pages.length = 0;\n      for (var i = 1; i <= this.pageCount; i++) {\n        this.pages.push(i);\n      }\n      // set page within 1..max range\n      this._setPageInRange(newPage);\n      // apply maxSize if necessary\n      if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n        var start = 0;\n        var end = this.pageCount;\n        // either paginating or rotating page numbers\n        if (this.rotate) {\n          var _this$_applyRotation = this._applyRotation();\n          var _this$_applyRotation2 = _slicedToArray(_this$_applyRotation, 2);\n          start = _this$_applyRotation2[0];\n          end = _this$_applyRotation2[1];\n        } else {\n          var _this$_applyPaginatio = this._applyPagination();\n          var _this$_applyPaginatio2 = _slicedToArray(_this$_applyPaginatio, 2);\n          start = _this$_applyPaginatio2[0];\n          end = _this$_applyPaginatio2[1];\n        }\n        this.pages = this.pages.slice(start, end);\n        // adding ellipses\n        this._applyEllipses(start, end);\n      }\n    }\n  }]);\n  return NgbPagination;\n}();\nNgbPagination.ɵfac = function NgbPagination_Factory(t) {\n  return new (t || NgbPagination)(ɵngcc0.ɵɵdirectiveInject(NgbPaginationConfig));\n};\nNgbPagination.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbPagination,\n  selectors: [[\"ngb-pagination\"]],\n  contentQueries: function NgbPagination_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationEllipsis, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationFirst, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationLast, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNext, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNumber, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationPrevious, true);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplEllipsis = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplFirst = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplLast = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNext = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNumber = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplPrevious = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"navigation\"],\n  inputs: {\n    page: \"page\",\n    disabled: \"disabled\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    ellipses: \"ellipses\",\n    maxSize: \"maxSize\",\n    pageSize: \"pageSize\",\n    rotate: \"rotate\",\n    size: \"size\",\n    collectionSize: \"collectionSize\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 18,\n  vars: 7,\n  consts: function consts() {\n    var i18n_34;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__35 = goog.getMsg(\"\\xAB\\xAB\");\n      i18n_34 = MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__35;\n    } else {\n      i18n_34 = $localize(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\":@@ngb.pagination.first\\u241F656506dfd46380956a655f919f1498d018f75ca0\\u241F6867721956102594380:\\xAB\\xAB\"])));\n    }\n    var i18n_36;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__37 = goog.getMsg(\"\\xAB\");\n      i18n_36 = MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__37;\n    } else {\n      i18n_36 = $localize(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\":@@ngb.pagination.previous\\u241F6e52b6ee77a4848d899dd21b591c6fd499e3aef3\\u241F6479320895410098858:\\xAB\"])));\n    }\n    var i18n_38;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__39 = goog.getMsg(\"\\xBB\");\n      i18n_38 = MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__39;\n    } else {\n      i18n_38 = $localize(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\":@@ngb.pagination.next\\u241Fba9cbb4ff311464308a3627e4f1c3345d9fe6d7d\\u241F5458177150283468089:\\xBB\"])));\n    }\n    var i18n_40;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__41 = goog.getMsg(\"\\xBB\\xBB\");\n      i18n_40 = MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__41;\n    } else {\n      i18n_40 = $localize(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\":@@ngb.pagination.last\\u241F49f27a460bc97e7e00be5b37098bfa79884fc7d9\\u241F5277020320267646988:\\xBB\\xBB\"])));\n    }\n    var i18n_42;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__43 = goog.getMsg(\"First\");\n      i18n_42 = MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__43;\n    } else {\n      i18n_42 = $localize(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\":@@ngb.pagination.first-aria\\u241Ff2f852318759c6396b5d3d17031d53817d7b38cc\\u241F2241508602425256033:First\"])));\n    }\n    var i18n_45;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__46 = goog.getMsg(\"Previous\");\n      i18n_45 = MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__46;\n    } else {\n      i18n_45 = $localize(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\":@@ngb.pagination.previous-aria\\u241F680d5c75b7fd8d37961083608b9fcdc4167b4c43\\u241F4452427314943113135:Previous\"])));\n    }\n    var i18n_50;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__51 = goog.getMsg(\"Next\");\n      i18n_50 = MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__51;\n    } else {\n      i18n_50 = $localize(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\":@@ngb.pagination.next-aria\\u241Ff732c304c7433e5a83ffcd862c3dce709a0f4982\\u241F3885497195825665706:Next\"])));\n    }\n    var i18n_52;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__53 = goog.getMsg(\"Last\");\n      i18n_52 = MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__53;\n    } else {\n      i18n_52 = $localize(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\":@@ngb.pagination.last-aria\\u241F5c729788ba138508aca1bec050b610f7bf81db3e\\u241F4882268002141858767:Last\"])));\n    }\n    return [[\"first\", \"\"], [\"previous\", \"\"], [\"next\", \"\"], [\"last\", \"\"], [\"ellipsis\", \"\"], [\"defaultNumber\", \"\"], [\"class\", \"page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], i18n_34, i18n_36, i18n_38, i18n_40, [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [1, \"page-item\"], [\"aria-label\", i18n_42, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-label\", i18n_45, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"class\", \"page-link\", \"tabindex\", \"-1\", \"aria-disabled\", \"true\", 4, \"ngIf\"], [\"class\", \"page-link\", \"href\", \"\", 3, \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"aria-disabled\", \"true\", 1, \"page-link\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_50, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_52, \"href\", \"\", 1, \"page-link\", 3, \"click\"]];\n  },\n  template: function NgbPagination_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbPagination_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbPagination_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(4, NgbPagination_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(6, NgbPagination_ng_template_6_Template, 2, 0, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(8, NgbPagination_ng_template_8_Template, 1, 0, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(10, NgbPagination_ng_template_10_Template, 2, 2, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(12, \"ul\");\n      ɵngcc0.ɵɵtemplate(13, NgbPagination_li_13_Template, 3, 9, \"li\", 6);\n      ɵngcc0.ɵɵtemplate(14, NgbPagination_li_14_Template, 3, 8, \"li\", 6);\n      ɵngcc0.ɵɵtemplate(15, NgbPagination_li_15_Template, 3, 7, \"li\", 7);\n      ɵngcc0.ɵɵtemplate(16, NgbPagination_li_16_Template, 3, 9, \"li\", 6);\n      ɵngcc0.ɵɵtemplate(17, NgbPagination_li_17_Template, 3, 9, \"li\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(12);\n      ɵngcc0.ɵɵclassMap(\"pagination\" + (ctx.size ? \" pagination-\" + ctx.size : \"\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbPagination.ctorParameters = function () {\n  return [{\n    type: NgbPaginationConfig\n  }];\n};\n__decorate([ContentChild(NgbPaginationEllipsis, {\n  static: false\n})], NgbPagination.prototype, \"tplEllipsis\", void 0);\n__decorate([ContentChild(NgbPaginationFirst, {\n  static: false\n})], NgbPagination.prototype, \"tplFirst\", void 0);\n__decorate([ContentChild(NgbPaginationLast, {\n  static: false\n})], NgbPagination.prototype, \"tplLast\", void 0);\n__decorate([ContentChild(NgbPaginationNext, {\n  static: false\n})], NgbPagination.prototype, \"tplNext\", void 0);\n__decorate([ContentChild(NgbPaginationNumber, {\n  static: false\n})], NgbPagination.prototype, \"tplNumber\", void 0);\n__decorate([ContentChild(NgbPaginationPrevious, {\n  static: false\n})], NgbPagination.prototype, \"tplPrevious\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"disabled\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"boundaryLinks\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"directionLinks\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"ellipses\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"rotate\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"collectionSize\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"maxSize\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"page\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"pageSize\", void 0);\n__decorate([Output()], NgbPagination.prototype, \"pageChange\", void 0);\n__decorate([Input()], NgbPagination.prototype, \"size\", void 0);\nvar DIRECTIVES = [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious];\nvar NgbPaginationModule = /*#__PURE__*/_createClass(function NgbPaginationModule() {\n  _classCallCheck(this, NgbPaginationModule);\n});\nNgbPaginationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbPaginationModule\n});\nNgbPaginationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbPaginationModule_Factory(t) {\n    return new (t || NgbPaginationModule)();\n  },\n  imports: [[CommonModule]]\n});\nvar Trigger = /*#__PURE__*/function () {\n  function Trigger(open, close) {\n    _classCallCheck(this, Trigger);\n    this.open = open;\n    this.close = close;\n    if (!close) {\n      this.close = open;\n    }\n  }\n  _createClass(Trigger, [{\n    key: \"isManual\",\n    value: function isManual() {\n      return this.open === 'manual' || this.close === 'manual';\n    }\n  }]);\n  return Trigger;\n}();\nvar DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout']\n};\nfunction parseTriggers(triggers) {\n  var aliases = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ALIASES;\n  var trimmedTriggers = (triggers || '').trim();\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n  var parsedTriggers = trimmedTriggers.split(/\\s+/).map(function (trigger) {\n    return trigger.split(':');\n  }).map(function (triggerPair) {\n    var alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n  var manualTriggers = parsedTriggers.filter(function (triggerPair) {\n    return triggerPair.isManual();\n  });\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n  return parsedTriggers;\n}\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n  return new Observable(function (subscriber) {\n    var listeners = [];\n    var openFn = function openFn() {\n      return subscriber.next(true);\n    };\n    var closeFn = function closeFn() {\n      return subscriber.next(false);\n    };\n    var toggleFn = function toggleFn() {\n      return subscriber.next(!isOpenedFn());\n    };\n    triggers.forEach(function (trigger) {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n    return function () {\n      listeners.forEach(function (unsubscribeFn) {\n        return unsubscribeFn();\n      });\n    };\n  });\n}\nvar delayOrNoop = function delayOrNoop(time) {\n  return time > 0 ? delay(time) : function (a) {\n    return a;\n  };\n};\nvar ɵ0$3 = delayOrNoop;\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n  return function (input$) {\n    var pending = null;\n    var filteredInput$ = input$.pipe(map(function (open) {\n      return {\n        open: open\n      };\n    }), filter(function (event) {\n      var currentlyOpen = isOpenedFn();\n      if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n        pending = event;\n        return true;\n      }\n      if (pending && pending.open !== event.open) {\n        pending = null;\n      }\n      return false;\n    }), share());\n    var delayedOpen$ = filteredInput$.pipe(filter(function (event) {\n      return event.open;\n    }), delayOrNoop(openDelay));\n    var delayedClose$ = filteredInput$.pipe(filter(function (event) {\n      return !event.open;\n    }), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$).pipe(filter(function (event) {\n      if (event === pending) {\n        pending = null;\n        return event.open !== isOpenedFn();\n      }\n      return false;\n    }), map(function (event) {\n      return event.open;\n    }));\n  };\n}\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn) {\n  var openDelay = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var closeDelay = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  var parsedTriggers = parseTriggers(triggers);\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return function () {};\n  }\n  var subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn).pipe(triggerDelay(openDelay, closeDelay, isOpenedFn)).subscribe(function (open) {\n    return open ? openFn() : closeFn();\n  });\n  return function () {\n    return subscription.unsubscribe();\n  };\n}\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nvar NgbPopoverConfig = /*#__PURE__*/_createClass(function NgbPopoverConfig() {\n  _classCallCheck(this, NgbPopoverConfig);\n  this.autoClose = true;\n  this.placement = 'auto';\n  this.triggers = 'click';\n  this.disablePopover = false;\n  this.openDelay = 0;\n  this.closeDelay = 0;\n});\nNgbPopoverConfig.ɵfac = function NgbPopoverConfig_Factory(t) {\n  return new (t || NgbPopoverConfig)();\n};\nNgbPopoverConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbPopoverConfig_Factory() {\n    return new NgbPopoverConfig();\n  },\n  token: NgbPopoverConfig,\n  providedIn: \"root\"\n});\nvar nextId$3 = 0;\nvar NgbPopoverWindow = /*#__PURE__*/function () {\n  function NgbPopoverWindow() {\n    _classCallCheck(this, NgbPopoverWindow);\n  }\n  _createClass(NgbPopoverWindow, [{\n    key: \"isTitleTemplate\",\n    value: function isTitleTemplate() {\n      return this.title instanceof TemplateRef;\n    }\n  }]);\n  return NgbPopoverWindow;\n}();\nNgbPopoverWindow.ɵfac = function NgbPopoverWindow_Factory(t) {\n  return new (t || NgbPopoverWindow)();\n};\nNgbPopoverWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbPopoverWindow,\n  selectors: [[\"ngb-popover-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 3,\n  hostBindings: function NgbPopoverWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"popover\" + (ctx.popoverClass ? \" \" + ctx.popoverClass : \"\"));\n    }\n  },\n  inputs: {\n    title: \"title\",\n    id: \"id\",\n    popoverClass: \"popoverClass\",\n    context: \"context\"\n  },\n  ngContentSelectors: _c5,\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"arrow\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [1, \"popover-body\"], [1, \"popover-header\"], [\"simpleTitle\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbPopoverWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_Template, 4, 2, \"h3\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title != null);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{top:auto;bottom:.7em}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n__decorate([Input()], NgbPopoverWindow.prototype, \"title\", void 0);\n__decorate([Input()], NgbPopoverWindow.prototype, \"id\", void 0);\n__decorate([Input()], NgbPopoverWindow.prototype, \"popoverClass\", void 0);\n__decorate([Input()], NgbPopoverWindow.prototype, \"context\", void 0);\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\nvar NgbPopover = /*#__PURE__*/function () {\n  function NgbPopover(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    var _this32 = this;\n    _classCallCheck(this, NgbPopover);\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the popover is shown. Contains no payload.\n     */\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the popover is hidden. Contains no payload.\n     */\n    this.hidden = new EventEmitter();\n    this._ngbPopoverWindowId = \"ngb-popover-\".concat(nextId$3++);\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      if (_this32._windowRef) {\n        positionElements(_this32._elementRef.nativeElement, _this32._windowRef.location.nativeElement, _this32.placement, _this32.container === 'body', 'bs-popover');\n      }\n    });\n  }\n  _createClass(NgbPopover, [{\n    key: \"_isDisabled\",\n    value: function _isDisabled() {\n      if (this.disablePopover) {\n        return true;\n      }\n      if (!this.ngbPopover && !this.popoverTitle) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     */\n  }, {\n    key: \"open\",\n    value: function open(context) {\n      var _this33 = this;\n      if (!this._windowRef && !this._isDisabled()) {\n        this._windowRef = this._popupService.open(this.ngbPopover, context);\n        this._windowRef.instance.title = this.popoverTitle;\n        this._windowRef.instance.context = context;\n        this._windowRef.instance.popoverClass = this.popoverClass;\n        this._windowRef.instance.id = this._ngbPopoverWindowId;\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n        if (this.container === 'body') {\n          this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n        }\n        // We need to detect changes, because we don't know where .open() might be called from.\n        // Ex. opening popover from one of lifecycle hooks that run after the CD\n        // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n        this._windowRef.changeDetectorRef.detectChanges();\n        // We need to mark for check, because popover won't work inside the OnPush component.\n        // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n        // inside the template of an OnPush component and we change the popover from\n        // open -> closed, the expression in question won't be updated unless we explicitly\n        // mark the parent component to be checked.\n        this._windowRef.changeDetectorRef.markForCheck();\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n          return _this33.close();\n        }, this.hidden, [this._windowRef.location.nativeElement]);\n        this.shown.emit();\n      }\n    }\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._windowRef) {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n        this._popupService.close();\n        this._windowRef = null;\n        this.hidden.emit();\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this._windowRef) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._windowRef != null;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_ref13) {\n      var ngbPopover = _ref13.ngbPopover,\n        popoverTitle = _ref13.popoverTitle,\n        disablePopover = _ref13.disablePopover,\n        popoverClass = _ref13.popoverClass;\n      if (popoverClass && this.isOpen()) {\n        this._windowRef.instance.popoverClass = popoverClass.currentValue;\n      }\n      // close popover if title and content become empty, or disablePopover set to true\n      if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n        this.close();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close();\n      // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n      // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n      if (this._unregisterListenersFn) {\n        this._unregisterListenersFn();\n      }\n      this._zoneSubscription.unsubscribe();\n    }\n  }]);\n  return NgbPopover;\n}();\nNgbPopover.ɵfac = function NgbPopover_Factory(t) {\n  return new (t || NgbPopover)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbPopoverConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\nNgbPopover.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPopover,\n  selectors: [[\"\", \"ngbPopover\", \"\"]],\n  inputs: {\n    autoClose: \"autoClose\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disablePopover: \"disablePopover\",\n    popoverClass: \"popoverClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\",\n    ngbPopover: \"ngbPopover\",\n    popoverTitle: \"popoverTitle\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbPopover\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nNgbPopover.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: NgbPopoverConfig\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ApplicationRef\n  }];\n};\n__decorate([Input()], NgbPopover.prototype, \"autoClose\", void 0);\n__decorate([Input()], NgbPopover.prototype, \"ngbPopover\", void 0);\n__decorate([Input()], NgbPopover.prototype, \"popoverTitle\", void 0);\n__decorate([Input()], NgbPopover.prototype, \"placement\", void 0);\n__decorate([Input()], NgbPopover.prototype, \"triggers\", void 0);\n__decorate([Input()], NgbPopover.prototype, \"container\", void 0);\n__decorate([Input()], NgbPopover.prototype, \"disablePopover\", void 0);\n__decorate([Input()], NgbPopover.prototype, \"popoverClass\", void 0);\n__decorate([Input()], NgbPopover.prototype, \"openDelay\", void 0);\n__decorate([Input()], NgbPopover.prototype, \"closeDelay\", void 0);\n__decorate([Output()], NgbPopover.prototype, \"shown\", void 0);\n__decorate([Output()], NgbPopover.prototype, \"hidden\", void 0);\nNgbPopover = __decorate([__param(7, Inject(DOCUMENT))], NgbPopover);\nvar NgbPopoverModule = /*#__PURE__*/_createClass(function NgbPopoverModule() {\n  _classCallCheck(this, NgbPopoverModule);\n});\nNgbPopoverModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbPopoverModule\n});\nNgbPopoverModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbPopoverModule_Factory(t) {\n    return new (t || NgbPopoverModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nvar NgbProgressbarConfig = /*#__PURE__*/_createClass(function NgbProgressbarConfig() {\n  _classCallCheck(this, NgbProgressbarConfig);\n  this.max = 100;\n  this.animated = false;\n  this.striped = false;\n  this.showValue = false;\n});\nNgbProgressbarConfig.ɵfac = function NgbProgressbarConfig_Factory(t) {\n  return new (t || NgbProgressbarConfig)();\n};\nNgbProgressbarConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbProgressbarConfig_Factory() {\n    return new NgbProgressbarConfig();\n  },\n  token: NgbProgressbarConfig,\n  providedIn: \"root\"\n});\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nvar NgbProgressbar = /*#__PURE__*/function () {\n  function NgbProgressbar(config) {\n    _classCallCheck(this, NgbProgressbar);\n    /**\n     * The current value for the progress bar.\n     *\n     * Should be in the `[0, max]` range.\n     */\n    this.value = 0;\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  _createClass(NgbProgressbar, [{\n    key: \"max\",\n    get: function get() {\n      return this._max;\n    },\n    set: function set(max) {\n      this._max = !isNumber(max) || max <= 0 ? 100 : max;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return getValueInRange(this.value, this.max);\n    }\n  }, {\n    key: \"getPercentValue\",\n    value: function getPercentValue() {\n      return 100 * this.getValue() / this.max;\n    }\n  }]);\n  return NgbProgressbar;\n}();\nNgbProgressbar.ɵfac = function NgbProgressbar_Factory(t) {\n  return new (t || NgbProgressbar)(ɵngcc0.ɵɵdirectiveInject(NgbProgressbarConfig));\n};\nNgbProgressbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbProgressbar,\n  selectors: [[\"ngb-progressbar\"]],\n  inputs: {\n    value: \"value\",\n    max: \"max\",\n    animated: \"animated\",\n    striped: \"striped\",\n    textType: \"textType\",\n    type: \"type\",\n    showValue: \"showValue\",\n    height: \"height\"\n  },\n  ngContentSelectors: _c5,\n  decls: 4,\n  vars: 13,\n  consts: function consts() {\n    var i18n_54;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__55 = goog.getMsg(\"{$interpolation}%\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_54 = MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__55;\n    } else {\n      i18n_54 = $localize(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral([\":@@ngb.progressbar.value\\u241F04d611d19c117c60c9e14d0a04399a027184bc77\\u241F5214781723415385277:\", \":INTERPOLATION:%\"])), \"\\uFFFD0\\uFFFD\");\n    }\n    return [[1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\"], [4, \"ngIf\"], i18n_54];\n  },\n  template: function NgbProgressbar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, NgbProgressbar_span_2_Template, 2, 1, \"span\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx.height);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMapInterpolate4(\"progress-bar\", ctx.type ? \" bg-\" + ctx.type : \"\", \"\", ctx.textType ? \" text-\" + ctx.textType : \"\", \"\\n      \", ctx.animated ? \" progress-bar-animated\" : \"\", \"\", ctx.striped ? \" progress-bar-striped\" : \"\", \"\");\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.getPercentValue(), \"%\");\n      ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.getValue())(\"aria-valuemax\", ctx.max);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbProgressbar.ctorParameters = function () {\n  return [{\n    type: NgbProgressbarConfig\n  }];\n};\n__decorate([Input()], NgbProgressbar.prototype, \"max\", null);\n__decorate([Input()], NgbProgressbar.prototype, \"animated\", void 0);\n__decorate([Input()], NgbProgressbar.prototype, \"striped\", void 0);\n__decorate([Input()], NgbProgressbar.prototype, \"showValue\", void 0);\n__decorate([Input()], NgbProgressbar.prototype, \"textType\", void 0);\n__decorate([Input()], NgbProgressbar.prototype, \"type\", void 0);\n__decorate([Input()], NgbProgressbar.prototype, \"value\", void 0);\n__decorate([Input()], NgbProgressbar.prototype, \"height\", void 0);\nvar NgbProgressbarModule = /*#__PURE__*/_createClass(function NgbProgressbarModule() {\n  _classCallCheck(this, NgbProgressbarModule);\n});\nNgbProgressbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbProgressbarModule\n});\nNgbProgressbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbProgressbarModule_Factory(t) {\n    return new (t || NgbProgressbarModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nvar NgbRatingConfig = /*#__PURE__*/_createClass(function NgbRatingConfig() {\n  _classCallCheck(this, NgbRatingConfig);\n  this.max = 10;\n  this.readonly = false;\n  this.resettable = false;\n});\nNgbRatingConfig.ɵfac = function NgbRatingConfig_Factory(t) {\n  return new (t || NgbRatingConfig)();\n};\nNgbRatingConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbRatingConfig_Factory() {\n    return new NgbRatingConfig();\n  },\n  token: NgbRatingConfig,\n  providedIn: \"root\"\n});\nvar NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbRating;\n  }),\n  multi: true\n};\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\nvar NgbRating = /*#__PURE__*/function () {\n  function NgbRating(config, _changeDetectorRef) {\n    _classCallCheck(this, NgbRating);\n    this._changeDetectorRef = _changeDetectorRef;\n    this.contexts = [];\n    this.disabled = false;\n    /**\n     * An event emitted when the user is hovering over a given rating.\n     *\n     * Event payload equals to the rating being hovered over.\n     */\n    this.hover = new EventEmitter();\n    /**\n     * An event emitted when the user stops hovering over a given rating.\n     *\n     * Event payload equals to the rating of the last item being hovered over.\n     */\n    this.leave = new EventEmitter();\n    /**\n     * An event emitted when the user selects a new rating.\n     *\n     * Event payload equals to the newly selected rating.\n     */\n    this.rateChange = new EventEmitter(true);\n    this.onChange = function (_) {};\n    this.onTouched = function () {};\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n  _createClass(NgbRating, [{\n    key: \"ariaValueText\",\n    value: function ariaValueText() {\n      return \"\".concat(this.nextRate, \" out of \").concat(this.max);\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(value) {\n      if (!this.readonly && !this.disabled) {\n        this._updateState(value);\n      }\n      this.hover.emit(value);\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this.onTouched();\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(value) {\n      if (!this.readonly && !this.disabled) {\n        this.update(this.resettable && this.rate === value ? 0 : value);\n      }\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      // tslint:disable-next-line:deprecation\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n        case Key.Home:\n          this.update(0);\n          break;\n        case Key.End:\n          this.update(this.max);\n          break;\n        default:\n          return;\n      }\n      // note 'return' in default case\n      event.preventDefault();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['rate']) {\n        this.update(this.rate);\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.contexts = Array.from({\n        length: this.max\n      }, function (v, k) {\n        return {\n          fill: 0,\n          index: k\n        };\n      });\n      this._updateState(this.rate);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.leave.emit(this.nextRate);\n      this._updateState(this.rate);\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"update\",\n    value: function update(value) {\n      var internalChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var newRate = getValueInRange(value, this.max, 0);\n      if (!this.readonly && !this.disabled && this.rate !== newRate) {\n        this.rate = newRate;\n        this.rateChange.emit(this.rate);\n      }\n      if (internalChange) {\n        this.onChange(this.rate);\n        this.onTouched();\n      }\n      this._updateState(this.rate);\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.update(value, false);\n      this._changeDetectorRef.markForCheck();\n    }\n  }, {\n    key: \"_getFillValue\",\n    value: function _getFillValue(index) {\n      var diff = this.nextRate - index;\n      if (diff >= 1) {\n        return 100;\n      }\n      if (diff < 1 && diff > 0) {\n        return parseInt((diff * 100).toFixed(2), 10);\n      }\n      return 0;\n    }\n  }, {\n    key: \"_updateState\",\n    value: function _updateState(nextValue) {\n      var _this34 = this;\n      this.nextRate = nextValue;\n      this.contexts.forEach(function (context, index) {\n        return context.fill = _this34._getFillValue(index);\n      });\n    }\n  }]);\n  return NgbRating;\n}();\nNgbRating.ɵfac = function NgbRating_Factory(t) {\n  return new (t || NgbRating)(ɵngcc0.ɵɵdirectiveInject(NgbRatingConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nNgbRating.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbRating,\n  selectors: [[\"ngb-rating\"]],\n  contentQueries: function NgbRating_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, true);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.starTemplateFromContent = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", \"aria-valuemin\", \"0\", 1, \"d-inline-flex\"],\n  hostVars: 5,\n  hostBindings: function NgbRating_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function NgbRating_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbRating_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      })(\"mouseleave\", function NgbRating_mouseleave_HostBindingHandler() {\n        return ctx.reset();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabindex\", ctx.disabled ? -1 : 0);\n      ɵngcc0.ɵɵattribute(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.nextRate)(\"aria-valuetext\", ctx.ariaValueText())(\"aria-disabled\", ctx.readonly ? true : null);\n    }\n  },\n  inputs: {\n    max: \"max\",\n    readonly: \"readonly\",\n    rate: \"rate\",\n    resettable: \"resettable\",\n    starTemplate: \"starTemplate\"\n  },\n  outputs: {\n    hover: \"hover\",\n    leave: \"leave\",\n    rateChange: \"rateChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_RATING_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"sr-only\"], [3, \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbRating_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbRating_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbRating_ng_template_2_Template, 4, 5, \"ng-template\", 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.contexts);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbRating.ctorParameters = function () {\n  return [{\n    type: NgbRatingConfig\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n__decorate([Input()], NgbRating.prototype, \"max\", void 0);\n__decorate([Input()], NgbRating.prototype, \"rate\", void 0);\n__decorate([Input()], NgbRating.prototype, \"readonly\", void 0);\n__decorate([Input()], NgbRating.prototype, \"resettable\", void 0);\n__decorate([Input()], NgbRating.prototype, \"starTemplate\", void 0);\n__decorate([ContentChild(TemplateRef, {\n  static: false\n})], NgbRating.prototype, \"starTemplateFromContent\", void 0);\n__decorate([Output()], NgbRating.prototype, \"hover\", void 0);\n__decorate([Output()], NgbRating.prototype, \"leave\", void 0);\n__decorate([Output()], NgbRating.prototype, \"rateChange\", void 0);\nvar NgbRatingModule = /*#__PURE__*/_createClass(function NgbRatingModule() {\n  _classCallCheck(this, NgbRatingModule);\n});\nNgbRatingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbRatingModule\n});\nNgbRatingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbRatingModule_Factory(t) {\n    return new (t || NgbRatingModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nvar NgbTabsetConfig = /*#__PURE__*/_createClass(function NgbTabsetConfig() {\n  _classCallCheck(this, NgbTabsetConfig);\n  this.justify = 'start';\n  this.orientation = 'horizontal';\n  this.type = 'tabs';\n});\nNgbTabsetConfig.ɵfac = function NgbTabsetConfig_Factory(t) {\n  return new (t || NgbTabsetConfig)();\n};\nNgbTabsetConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTabsetConfig_Factory() {\n    return new NgbTabsetConfig();\n  },\n  token: NgbTabsetConfig,\n  providedIn: \"root\"\n});\nvar nextId$4 = 0;\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nvar NgbTabTitle = /*#__PURE__*/_createClass(function NgbTabTitle(templateRef) {\n  _classCallCheck(this, NgbTabTitle);\n  this.templateRef = templateRef;\n});\nNgbTabTitle.ɵfac = function NgbTabTitle_Factory(t) {\n  return new (t || NgbTabTitle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbTabTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTabTitle,\n  selectors: [[\"ng-template\", \"ngbTabTitle\", \"\"]]\n});\nNgbTabTitle.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to wrap content to be displayed in a tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nvar NgbTabContent = /*#__PURE__*/_createClass(function NgbTabContent(templateRef) {\n  _classCallCheck(this, NgbTabContent);\n  this.templateRef = templateRef;\n});\nNgbTabContent.ɵfac = function NgbTabContent_Factory(t) {\n  return new (t || NgbTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\nNgbTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTabContent,\n  selectors: [[\"ng-template\", \"ngbTabContent\", \"\"]]\n});\nNgbTabContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive representing an individual tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nvar NgbTab = /*#__PURE__*/function () {\n  function NgbTab() {\n    _classCallCheck(this, NgbTab);\n    /**\n     * The tab identifier.\n     *\n     * Must be unique for the entire document for proper accessibility support.\n     */\n    this.id = \"ngb-tab-\".concat(nextId$4++);\n    /**\n     * If `true`, the current tab is disabled and can't be toggled.\n     */\n    this.disabled = false;\n  }\n  _createClass(NgbTab, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n      // only @ContentChildren allows us to specify the {descendants: false} option.\n      // Without {descendants: false} we are hitting bugs described in:\n      // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n      this.titleTpl = this.titleTpls.first;\n      this.contentTpl = this.contentTpls.first;\n    }\n  }]);\n  return NgbTab;\n}();\nNgbTab.ɵfac = function NgbTab_Factory(t) {\n  return new (t || NgbTab)();\n};\nNgbTab.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTab,\n  selectors: [[\"ngb-tab\"]],\n  contentQueries: function NgbTab_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbTabTitle, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbTabContent, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    title: \"title\"\n  }\n});\n__decorate([Input()], NgbTab.prototype, \"id\", void 0);\n__decorate([Input()], NgbTab.prototype, \"title\", void 0);\n__decorate([Input()], NgbTab.prototype, \"disabled\", void 0);\n__decorate([ContentChildren(NgbTabTitle, {\n  descendants: false\n})], NgbTab.prototype, \"titleTpls\", void 0);\n__decorate([ContentChildren(NgbTabContent, {\n  descendants: false\n})], NgbTab.prototype, \"contentTpls\", void 0);\n/**\n * A component that makes it easy to create tabbed interface.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nvar NgbTabset = /*#__PURE__*/function () {\n  function NgbTabset(config) {\n    _classCallCheck(this, NgbTabset);\n    /**\n     * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n     */\n    this.destroyOnHide = true;\n    /**\n     * A tab change event emitted right before the tab change happens.\n     *\n     * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n     */\n    this.tabChange = new EventEmitter();\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  _createClass(NgbTabset, [{\n    key: \"justify\",\n    set: function set(className) {\n      if (className === 'fill' || className === 'justified') {\n        this.justifyClass = \"nav-\".concat(className);\n      } else {\n        this.justifyClass = \"justify-content-\".concat(className);\n      }\n    }\n    /**\n     * Selects the tab with the given id and shows its associated content panel.\n     *\n     * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n     * hidden depending on the `destroyOnHide` value.\n     */\n  }, {\n    key: \"select\",\n    value: function select(tabId) {\n      var selectedTab = this._getTabById(tabId);\n      if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n        var defaultPrevented = false;\n        this.tabChange.emit({\n          activeId: this.activeId,\n          nextId: selectedTab.id,\n          preventDefault: function preventDefault() {\n            defaultPrevented = true;\n          }\n        });\n        if (!defaultPrevented) {\n          this.activeId = selectedTab.id;\n        }\n      }\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // auto-correct activeId that might have been set incorrectly as input\n      var activeTab = this._getTabById(this.activeId);\n      this.activeId = activeTab ? activeTab.id : this.tabs.length ? this.tabs.first.id : null;\n    }\n  }, {\n    key: \"_getTabById\",\n    value: function _getTabById(id) {\n      var tabsWithId = this.tabs.filter(function (tab) {\n        return tab.id === id;\n      });\n      return tabsWithId.length ? tabsWithId[0] : null;\n    }\n  }]);\n  return NgbTabset;\n}();\nNgbTabset.ɵfac = function NgbTabset_Factory(t) {\n  return new (t || NgbTabset)(ɵngcc0.ɵɵdirectiveInject(NgbTabsetConfig));\n};\nNgbTabset.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTabset,\n  selectors: [[\"ngb-tabset\"]],\n  contentQueries: function NgbTabset_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbTab, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabs = _t);\n    }\n  },\n  inputs: {\n    destroyOnHide: \"destroyOnHide\",\n    type: \"type\",\n    justify: \"justify\",\n    orientation: \"orientation\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    tabChange: \"tabChange\"\n  },\n  exportAs: [\"ngbTabset\"],\n  decls: 4,\n  vars: 4,\n  consts: [[\"role\", \"tablist\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-content\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"nav-item\"], [\"href\", \"\", \"role\", \"tab\", 1, \"nav-link\", 3, \"id\", \"click\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tabpanel\", 3, \"class\", \"id\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 3, \"id\"]],\n  template: function NgbTabset_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbTabset_li_1_Template, 4, 11, \"li\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, NgbTabset_ng_template_3_Template, 1, 1, \"ng-template\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"nav nav-\" + ctx.type + (ctx.orientation == \"horizontal\" ? \" \" + ctx.justifyClass : \" flex-column\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf],\n  encapsulation: 2\n});\nNgbTabset.ctorParameters = function () {\n  return [{\n    type: NgbTabsetConfig\n  }];\n};\n__decorate([ContentChildren(NgbTab)], NgbTabset.prototype, \"tabs\", void 0);\n__decorate([Input()], NgbTabset.prototype, \"activeId\", void 0);\n__decorate([Input()], NgbTabset.prototype, \"destroyOnHide\", void 0);\n__decorate([Input()], NgbTabset.prototype, \"justify\", null);\n__decorate([Input()], NgbTabset.prototype, \"orientation\", void 0);\n__decorate([Input()], NgbTabset.prototype, \"type\", void 0);\n__decorate([Output()], NgbTabset.prototype, \"tabChange\", void 0);\nvar NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n/**\n * @deprecated 6.0.0 Please use NgbNavModule instead\n */\nvar NgbTabsetModule = /*#__PURE__*/_createClass(function NgbTabsetModule() {\n  _classCallCheck(this, NgbTabsetModule);\n});\nNgbTabsetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTabsetModule\n});\nNgbTabsetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTabsetModule_Factory(t) {\n    return new (t || NgbTabsetModule)();\n  },\n  imports: [[CommonModule]]\n});\nvar NgbTime = /*#__PURE__*/function () {\n  function NgbTime(hour, minute, second) {\n    _classCallCheck(this, NgbTime);\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n  _createClass(NgbTime, [{\n    key: \"changeHour\",\n    value: function changeHour() {\n      var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n    }\n  }, {\n    key: \"updateHour\",\n    value: function updateHour(hour) {\n      if (isNumber(hour)) {\n        this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n      } else {\n        this.hour = NaN;\n      }\n    }\n  }, {\n    key: \"changeMinute\",\n    value: function changeMinute() {\n      var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n    }\n  }, {\n    key: \"updateMinute\",\n    value: function updateMinute(minute) {\n      if (isNumber(minute)) {\n        this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n        this.changeHour(Math.floor(minute / 60));\n      } else {\n        this.minute = NaN;\n      }\n    }\n  }, {\n    key: \"changeSecond\",\n    value: function changeSecond() {\n      var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n    }\n  }, {\n    key: \"updateSecond\",\n    value: function updateSecond(second) {\n      if (isNumber(second)) {\n        this.second = second < 0 ? 60 + second % 60 : second % 60;\n        this.changeMinute(Math.floor(second / 60));\n      } else {\n        this.second = NaN;\n      }\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      var checkSecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.hour || 0, \":\").concat(this.minute || 0, \":\").concat(this.second || 0);\n    }\n  }]);\n  return NgbTime;\n}();\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nvar NgbTimepickerConfig = /*#__PURE__*/_createClass(function NgbTimepickerConfig() {\n  _classCallCheck(this, NgbTimepickerConfig);\n  this.meridian = false;\n  this.spinners = true;\n  this.seconds = false;\n  this.hourStep = 1;\n  this.minuteStep = 1;\n  this.secondStep = 1;\n  this.disabled = false;\n  this.readonlyInputs = false;\n  this.size = 'medium';\n});\nNgbTimepickerConfig.ɵfac = function NgbTimepickerConfig_Factory(t) {\n  return new (t || NgbTimepickerConfig)();\n};\nNgbTimepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTimepickerConfig_Factory() {\n    return new NgbTimepickerConfig();\n  },\n  token: NgbTimepickerConfig,\n  providedIn: \"root\"\n});\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\nvar NgbTimeAdapter = /*#__PURE__*/_createClass(function NgbTimeAdapter() {\n  _classCallCheck(this, NgbTimeAdapter);\n});\nNgbTimeAdapter.ɵfac = function NgbTimeAdapter_Factory(t) {\n  return new (t || NgbTimeAdapter)();\n};\nNgbTimeAdapter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY,\n  token: NgbTimeAdapter,\n  providedIn: \"root\"\n});\nvar NgbTimeStructAdapter = /*#__PURE__*/function (_NgbTimeAdapter) {\n  _inherits(NgbTimeStructAdapter, _NgbTimeAdapter);\n  var _super15 = _createSuper(NgbTimeStructAdapter);\n  function NgbTimeStructAdapter() {\n    _classCallCheck(this, NgbTimeStructAdapter);\n    return _super15.apply(this, arguments);\n  }\n  _createClass(NgbTimeStructAdapter, [{\n    key: \"fromModel\",\n    value:\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    function fromModel(time) {\n      return time && isInteger(time.hour) && isInteger(time.minute) ? {\n        hour: time.hour,\n        minute: time.minute,\n        second: isInteger(time.second) ? time.second : null\n      } : null;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n  }, {\n    key: \"toModel\",\n    value: function toModel(time) {\n      return time && isInteger(time.hour) && isInteger(time.minute) ? {\n        hour: time.hour,\n        minute: time.minute,\n        second: isInteger(time.second) ? time.second : null\n      } : null;\n    }\n  }]);\n  return NgbTimeStructAdapter;\n}(NgbTimeAdapter);\nNgbTimeStructAdapter.ɵfac = function NgbTimeStructAdapter_Factory(t) {\n  return ɵNgbTimeStructAdapter_BaseFactory(t || NgbTimeStructAdapter);\n};\nNgbTimeStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbTimeStructAdapter,\n  factory: function factory(t) {\n    return NgbTimeStructAdapter.ɵfac(t);\n  }\n});\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\nvar NgbTimepickerI18n = /*#__PURE__*/_createClass(function NgbTimepickerI18n() {\n  _classCallCheck(this, NgbTimepickerI18n);\n});\nNgbTimepickerI18n.ɵfac = function NgbTimepickerI18n_Factory(t) {\n  return new (t || NgbTimepickerI18n)();\n};\nNgbTimepickerI18n.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTimepickerI18n_Factory() {\n    return NGB_TIMEPICKER_I18N_FACTORY(ɵɵinject(LOCALE_ID));\n  },\n  token: NgbTimepickerI18n,\n  providedIn: \"root\"\n});\nvar NgbTimepickerI18nDefault = /*#__PURE__*/function (_NgbTimepickerI18n) {\n  _inherits(NgbTimepickerI18nDefault, _NgbTimepickerI18n);\n  var _super16 = _createSuper(NgbTimepickerI18nDefault);\n  function NgbTimepickerI18nDefault(locale) {\n    var _this35;\n    _classCallCheck(this, NgbTimepickerI18nDefault);\n    _this35 = _super16.call(this);\n    _this35._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n    return _this35;\n  }\n  _createClass(NgbTimepickerI18nDefault, [{\n    key: \"getMorningPeriod\",\n    value: function getMorningPeriod() {\n      return this._periods[0];\n    }\n  }, {\n    key: \"getAfternoonPeriod\",\n    value: function getAfternoonPeriod() {\n      return this._periods[1];\n    }\n  }]);\n  return NgbTimepickerI18nDefault;\n}(NgbTimepickerI18n);\nNgbTimepickerI18nDefault.ɵfac = function NgbTimepickerI18nDefault_Factory(t) {\n  return new (t || NgbTimepickerI18nDefault)(ɵngcc0.ɵɵinject(LOCALE_ID));\n};\nNgbTimepickerI18nDefault.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbTimepickerI18nDefault,\n  factory: function factory(t) {\n    return NgbTimepickerI18nDefault.ɵfac(t);\n  }\n});\nNgbTimepickerI18nDefault.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\nNgbTimepickerI18nDefault = __decorate([__param(0, Inject(LOCALE_ID))], NgbTimepickerI18nDefault);\nvar FILTER_REGEX = /[^0-9]/g;\nvar NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbTimepicker;\n  }),\n  multi: true\n};\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nvar NgbTimepicker = /*#__PURE__*/function () {\n  function NgbTimepicker(_config, _ngbTimeAdapter, _cd, i18n) {\n    _classCallCheck(this, NgbTimepicker);\n    this._config = _config;\n    this._ngbTimeAdapter = _ngbTimeAdapter;\n    this._cd = _cd;\n    this.i18n = i18n;\n    this.onChange = function (_) {};\n    this.onTouched = function () {};\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  _createClass(NgbTimepicker, [{\n    key: \"hourStep\",\n    get: function get() {\n      return this._hourStep;\n    }\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     */,\n    set: function set(step) {\n      this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    }\n  }, {\n    key: \"minuteStep\",\n    get: function get() {\n      return this._minuteStep;\n    }\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     */,\n    set: function set(step) {\n      this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    }\n  }, {\n    key: \"secondStep\",\n    get: function get() {\n      return this._secondStep;\n    },\n    set: function set(step) {\n      this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      var structValue = this._ngbTimeAdapter.fromModel(value);\n      this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n      if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n        this.model.second = 0;\n      }\n      this._cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"changeHour\",\n    value: function changeHour(step) {\n      this.model.changeHour(step);\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"changeMinute\",\n    value: function changeMinute(step) {\n      this.model.changeMinute(step);\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"changeSecond\",\n    value: function changeSecond(step) {\n      this.model.changeSecond(step);\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"updateHour\",\n    value: function updateHour(newVal) {\n      var isPM = this.model.hour >= 12;\n      var enteredHour = toInteger(newVal);\n      if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n        this.model.updateHour(enteredHour + 12);\n      } else {\n        this.model.updateHour(enteredHour);\n      }\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"updateMinute\",\n    value: function updateMinute(newVal) {\n      this.model.updateMinute(toInteger(newVal));\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"updateSecond\",\n    value: function updateSecond(newVal) {\n      this.model.updateSecond(toInteger(newVal));\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"toggleMeridian\",\n    value: function toggleMeridian() {\n      if (this.meridian) {\n        this.changeHour(12);\n      }\n    }\n  }, {\n    key: \"formatInput\",\n    value: function formatInput(input) {\n      input.value = input.value.replace(FILTER_REGEX, '');\n    }\n  }, {\n    key: \"formatHour\",\n    value: function formatHour(value) {\n      if (isNumber(value)) {\n        if (this.meridian) {\n          return padNumber(value % 12 === 0 ? 12 : value % 12);\n        } else {\n          return padNumber(value % 24);\n        }\n      } else {\n        return padNumber(NaN);\n      }\n    }\n  }, {\n    key: \"formatMinSec\",\n    value: function formatMinSec(value) {\n      return padNumber(value);\n    }\n  }, {\n    key: \"isSmallSize\",\n    get: function get() {\n      return this.size === 'small';\n    }\n  }, {\n    key: \"isLargeSize\",\n    get: function get() {\n      return this.size === 'large';\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n        this.model.second = 0;\n        this.propagateModelChange(false);\n      }\n    }\n  }, {\n    key: \"propagateModelChange\",\n    value: function propagateModelChange() {\n      var touched = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (touched) {\n        this.onTouched();\n      }\n      if (this.model.isValid(this.seconds)) {\n        this.onChange(this._ngbTimeAdapter.toModel({\n          hour: this.model.hour,\n          minute: this.model.minute,\n          second: this.model.second\n        }));\n      } else {\n        this.onChange(this._ngbTimeAdapter.toModel(null));\n      }\n    }\n  }]);\n  return NgbTimepicker;\n}();\nNgbTimepicker.ɵfac = function NgbTimepicker_Factory(t) {\n  return new (t || NgbTimepicker)(ɵngcc0.ɵɵdirectiveInject(NgbTimepickerConfig), ɵngcc0.ɵɵdirectiveInject(NgbTimeAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbTimepickerI18n));\n};\nNgbTimepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTimepicker,\n  selectors: [[\"ngb-timepicker\"]],\n  inputs: {\n    meridian: \"meridian\",\n    spinners: \"spinners\",\n    seconds: \"seconds\",\n    hourStep: \"hourStep\",\n    minuteStep: \"minuteStep\",\n    secondStep: \"secondStep\",\n    readonlyInputs: \"readonlyInputs\",\n    size: \"size\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_TIMEPICKER_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 16,\n  vars: 25,\n  consts: function consts() {\n    var i18n_56;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_57 = goog.getMsg(\"HH\");\n      i18n_56 = MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_57;\n    } else {\n      i18n_56 = $localize(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral([\":@@ngb.timepicker.HH\\u241Fce676ab1d6d98f85c836381cf100a4a91ef95a1f\\u241F4043638465245303811:HH\"])));\n    }\n    var i18n_58;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_59 = goog.getMsg(\"Hours\");\n      i18n_58 = MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_59;\n    } else {\n      i18n_58 = $localize(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral([\":@@ngb.timepicker.hours\\u241F3bbce5fef7e1151da052a4e529453edb340e3912\\u241F8070396816726827304:Hours\"])));\n    }\n    var i18n_60;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_61 = goog.getMsg(\"MM\");\n      i18n_60 = MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_61;\n    } else {\n      i18n_60 = $localize(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral([\":@@ngb.timepicker.MM\\u241F72c8edf6a50068a05bde70991e36b1e881f4ca54\\u241F1647282246509919852:MM\"])));\n    }\n    var i18n_62;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_63 = goog.getMsg(\"Minutes\");\n      i18n_62 = MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_63;\n    } else {\n      i18n_62 = $localize(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral([\":@@ngb.timepicker.minutes\\u241F41e62daa962947c0d23ded0981975d1bddf0bf38\\u241F5531237363767747080:Minutes\"])));\n    }\n    var i18n_64;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__65 = goog.getMsg(\"Increment hours\");\n      i18n_64 = MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__65;\n    } else {\n      i18n_64 = $localize(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral([\":@@ngb.timepicker.increment-hours\\u241Fcb74bc1d625a6c1742f0d7d47306cf495780c218\\u241F5939278348542933629:Increment hours\"])));\n    }\n    var i18n_66;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__67 = goog.getMsg(\"Decrement hours\");\n      i18n_66 = MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__67;\n    } else {\n      i18n_66 = $localize(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral([\":@@ngb.timepicker.decrement-hours\\u241F147c7a19429da7d999e247d22e33fee370b1691b\\u241F3651829882940481818:Decrement hours\"])));\n    }\n    var i18n_68;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__69 = goog.getMsg(\"Increment minutes\");\n      i18n_68 = MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__69;\n    } else {\n      i18n_68 = $localize(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral([\":@@ngb.timepicker.increment-minutes\\u241Ff5a4a3bc05e053f6732475d0e74875ec01c3a348\\u241F180147720391025024:Increment minutes\"])));\n    }\n    var i18n_70;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__71 = goog.getMsg(\"Decrement minutes\");\n      i18n_70 = MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__71;\n    } else {\n      i18n_70 = $localize(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral([\":@@ngb.timepicker.decrement-minutes\\u241Fc1a6899e529c096da5b660385d4e77fe1f7ad271\\u241F7447789825403243588:Decrement minutes\"])));\n    }\n    var i18n_72;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__73 = goog.getMsg(\"SS\");\n      i18n_72 = MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__73;\n    } else {\n      i18n_72 = $localize(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral([\":@@ngb.timepicker.SS\\u241Febe38d36a40a2383c5fefa9b4608ffbda08bd4a3\\u241F3628127143071124194:SS\"])));\n    }\n    var i18n_74;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__75 = goog.getMsg(\"Seconds\");\n      i18n_74 = MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__75;\n    } else {\n      i18n_74 = $localize(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral([\":@@ngb.timepicker.seconds\\u241F4f2ed9e71a7c981db3e50ae2fedb28aff2ec4e6c\\u241F8874012390997067175:Seconds\"])));\n    }\n    var i18n_76;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___77 = goog.getMsg(\"Increment seconds\");\n      i18n_76 = MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___77;\n    } else {\n      i18n_76 = $localize(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral([\":@@ngb.timepicker.increment-seconds\\u241F912322ecee7d659d04dcf494a70e22e49d334b26\\u241F5364772110539092174:Increment seconds\"])));\n    }\n    var i18n_78;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___79 = goog.getMsg(\"Decrement seconds\");\n      i18n_78 = MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___79;\n    } else {\n      i18n_78 = $localize(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral([\":@@ngb.timepicker.decrement-seconds\\u241F5db47ac104294243a70eb9124fbea9d0004ddf69\\u241F753633511487974857:Decrement seconds\"])));\n    }\n    var i18n_80;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___81 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_80 = MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___81;\n    } else {\n      i18n_80 = $localize(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral([\":@@ngb.timepicker.PM\\u241F8d6e691e10306c1b34c6b26805151aaea320ef7f\\u241F3564199131264287502:\", \":INTERPOLATION:\"])), \"\\uFFFD0\\uFFFD\");\n    }\n    var i18n_82;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___83 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_82 = MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___83;\n    } else {\n      i18n_82 = $localize(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral([\":@@ngb.timepicker.AM\\u241F69a1f176a93998876952adac57c3bc3863b6105e\\u241F4592818992509942761:\", \":INTERPOLATION:\"])), \"\\uFFFD0\\uFFFD\");\n    }\n    return [[3, \"disabled\"], [1, \"ngb-tp\"], [1, \"ngb-tp-input-container\", \"ngb-tp-hour\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"class\", \"btn btn-link\", 3, \"btn-sm\", \"btn-lg\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_56, \"aria-label\", i18n_58, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [1, \"ngb-tp-spacer\"], [1, \"ngb-tp-input-container\", \"ngb-tp-minute\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_60, \"aria-label\", i18n_62, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [\"class\", \"ngb-tp-spacer\", 4, \"ngIf\"], [\"class\", \"ngb-tp-input-container ngb-tp-second\", 4, \"ngIf\"], [\"class\", \"ngb-tp-meridian\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"disabled\", \"click\"], [1, \"chevron\", \"ngb-tp-chevron\"], [1, \"sr-only\"], i18n_64, [1, \"chevron\", \"ngb-tp-chevron\", \"bottom\"], i18n_66, i18n_68, i18n_70, [1, \"ngb-tp-input-container\", \"ngb-tp-second\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_72, \"aria-label\", i18n_74, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], i18n_76, i18n_78, [1, \"ngb-tp-meridian\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"am\", \"\"], i18n_80, i18n_82];\n  },\n  template: function NgbTimepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"fieldset\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, NgbTimepicker_button_3_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementStart(4, \"input\", 4);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_4_listener($event) {\n        return ctx.updateHour($event.target.value);\n      })(\"input\", function NgbTimepicker_Template_input_input_4_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_4_listener($event) {\n        ctx.changeHour(ctx.hourStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_4_listener($event) {\n        ctx.changeHour(-ctx.hourStep);\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(5, NgbTimepicker_button_5_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n      ɵngcc0.ɵɵtext(7, \":\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"div\", 6);\n      ɵngcc0.ɵɵtemplate(9, NgbTimepicker_button_9_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementStart(10, \"input\", 7);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_10_listener($event) {\n        return ctx.updateMinute($event.target.value);\n      })(\"input\", function NgbTimepicker_Template_input_input_10_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_10_listener($event) {\n        ctx.changeMinute(ctx.minuteStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_10_listener($event) {\n        ctx.changeMinute(-ctx.minuteStep);\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, NgbTimepicker_button_11_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(12, NgbTimepicker_div_12_Template, 2, 0, \"div\", 8);\n      ɵngcc0.ɵɵtemplate(13, NgbTimepicker_div_13_Template, 4, 9, \"div\", 9);\n      ɵngcc0.ɵɵtemplate(14, NgbTimepicker_div_14_Template, 1, 0, \"div\", 8);\n      ɵngcc0.ɵɵtemplate(15, NgbTimepicker_div_15_Template, 5, 9, \"div\", 10);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.formatHour(ctx.model == null ? null : ctx.model.hour))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.formatMinSec(ctx.model == null ? null : ctx.model.minute))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\"],\n  encapsulation: 2\n});\nNgbTimepicker.ctorParameters = function () {\n  return [{\n    type: NgbTimepickerConfig\n  }, {\n    type: NgbTimeAdapter\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgbTimepickerI18n\n  }];\n};\n__decorate([Input()], NgbTimepicker.prototype, \"meridian\", void 0);\n__decorate([Input()], NgbTimepicker.prototype, \"spinners\", void 0);\n__decorate([Input()], NgbTimepicker.prototype, \"seconds\", void 0);\n__decorate([Input()], NgbTimepicker.prototype, \"hourStep\", null);\n__decorate([Input()], NgbTimepicker.prototype, \"minuteStep\", null);\n__decorate([Input()], NgbTimepicker.prototype, \"secondStep\", null);\n__decorate([Input()], NgbTimepicker.prototype, \"readonlyInputs\", void 0);\n__decorate([Input()], NgbTimepicker.prototype, \"size\", void 0);\nvar NgbTimepickerModule = /*#__PURE__*/_createClass(function NgbTimepickerModule() {\n  _classCallCheck(this, NgbTimepickerModule);\n});\nNgbTimepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTimepickerModule\n});\nNgbTimepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTimepickerModule_Factory(t) {\n    return new (t || NgbTimepickerModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\nvar NgbToastConfig = /*#__PURE__*/_createClass(function NgbToastConfig() {\n  _classCallCheck(this, NgbToastConfig);\n  this.autohide = true;\n  this.delay = 500;\n  this.ariaLive = 'polite';\n});\nNgbToastConfig.ɵfac = function NgbToastConfig_Factory(t) {\n  return new (t || NgbToastConfig)();\n};\nNgbToastConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbToastConfig_Factory() {\n    return new NgbToastConfig();\n  },\n  token: NgbToastConfig,\n  providedIn: \"root\"\n});\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\nvar NgbToastHeader = /*#__PURE__*/_createClass(function NgbToastHeader() {\n  _classCallCheck(this, NgbToastHeader);\n});\nNgbToastHeader.ɵfac = function NgbToastHeader_Factory(t) {\n  return new (t || NgbToastHeader)();\n};\nNgbToastHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbToastHeader,\n  selectors: [[\"\", \"ngbToastHeader\", \"\"]]\n});\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\nvar NgbToast = /*#__PURE__*/function () {\n  function NgbToast(ariaLive, config) {\n    _classCallCheck(this, NgbToast);\n    this.ariaLive = ariaLive;\n    /**\n     * A template like `<ng-template ngbToastHeader></ng-template>` can be\n     * used in the projected content to allow markup usage.\n     */\n    this.contentHeaderTpl = null;\n    /**\n     * An event fired immediately when toast's `hide()` method has been called.\n     * It can only occur in 2 different scenarios:\n     * - `autohide` timeout fires\n     * - user clicks on a closing cross (&times)\n     *\n     * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n     * that.\n     */\n    this.hideOutput = new EventEmitter();\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n  }\n  _createClass(NgbToast, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._init();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if ('autohide' in changes) {\n        this._clearTimeout();\n        this._init();\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._clearTimeout();\n      this.hideOutput.emit();\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this36 = this;\n      if (this.autohide && !this._timeoutID) {\n        this._timeoutID = setTimeout(function () {\n          return _this36.hide();\n        }, this.delay);\n      }\n    }\n  }, {\n    key: \"_clearTimeout\",\n    value: function _clearTimeout() {\n      if (this._timeoutID) {\n        clearTimeout(this._timeoutID);\n        this._timeoutID = null;\n      }\n    }\n  }]);\n  return NgbToast;\n}();\nNgbToast.ɵfac = function NgbToast_Factory(t) {\n  return new (t || NgbToast)(ɵngcc0.ɵɵinjectAttribute('aria-live'), ɵngcc0.ɵɵdirectiveInject(NgbToastConfig));\n};\nNgbToast.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbToast,\n  selectors: [[\"ngb-toast\"]],\n  contentQueries: function NgbToast_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, NgbToastHeader, true, TemplateRef);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentHeaderTpl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"alert\", \"aria-atomic\", \"true\"],\n  hostVars: 5,\n  hostBindings: function NgbToast_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-live\", ctx.ariaLive);\n      ɵngcc0.ɵɵclassProp(\"toast\", true)(\"show\", true);\n    }\n  },\n  inputs: {\n    delay: \"delay\",\n    autohide: \"autohide\",\n    header: \"header\"\n  },\n  outputs: {\n    hideOutput: \"hide\"\n  },\n  exportAs: [\"ngbToast\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c5,\n  decls: 5,\n  vars: 1,\n  consts: function consts() {\n    var i18n_84;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__85 = goog.getMsg(\"Close\");\n      i18n_84 = MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__85;\n    } else {\n      i18n_84 = $localize(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral([\":@@ngb.toast.close-aria\\u241Ff4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8\\u241F7819314041543176992:Close\"])));\n    }\n    return [[\"headerTpl\", \"\"], [3, \"ngIf\"], [1, \"toast-body\"], [1, \"mr-auto\"], [1, \"toast-header\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", \"aria-label\", i18n_84, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n  },\n  template: function NgbToast_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NgbToast_ng_template_0_Template, 2, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbToast_ng_template_2_Template, 5, 1, \"ng-template\", 1);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.contentHeaderTpl || ctx.header);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\".ngb-toasts{position:fixed;top:0;right:0;margin:.5em;z-index:1200}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\"],\n  encapsulation: 2\n});\nNgbToast.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['aria-live']\n    }]\n  }, {\n    type: NgbToastConfig\n  }];\n};\n__decorate([Input()], NgbToast.prototype, \"delay\", void 0);\n__decorate([Input()], NgbToast.prototype, \"autohide\", void 0);\n__decorate([Input()], NgbToast.prototype, \"header\", void 0);\n__decorate([ContentChild(NgbToastHeader, {\n  read: TemplateRef,\n  static: true\n})], NgbToast.prototype, \"contentHeaderTpl\", void 0);\n__decorate([Output('hide')], NgbToast.prototype, \"hideOutput\", void 0);\nNgbToast = __decorate([__param(0, Attribute('aria-live'))], NgbToast);\nvar NgbToastModule = /*#__PURE__*/_createClass(function NgbToastModule() {\n  _classCallCheck(this, NgbToastModule);\n});\nNgbToastModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbToastModule\n});\nNgbToastModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbToastModule_Factory(t) {\n    return new (t || NgbToastModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nvar NgbTooltipConfig = /*#__PURE__*/_createClass(function NgbTooltipConfig() {\n  _classCallCheck(this, NgbTooltipConfig);\n  this.autoClose = true;\n  this.placement = 'auto';\n  this.triggers = 'hover focus';\n  this.disableTooltip = false;\n  this.openDelay = 0;\n  this.closeDelay = 0;\n});\nNgbTooltipConfig.ɵfac = function NgbTooltipConfig_Factory(t) {\n  return new (t || NgbTooltipConfig)();\n};\nNgbTooltipConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTooltipConfig_Factory() {\n    return new NgbTooltipConfig();\n  },\n  token: NgbTooltipConfig,\n  providedIn: \"root\"\n});\nvar nextId$5 = 0;\nvar NgbTooltipWindow = /*#__PURE__*/_createClass(function NgbTooltipWindow() {\n  _classCallCheck(this, NgbTooltipWindow);\n});\nNgbTooltipWindow.ɵfac = function NgbTooltipWindow_Factory(t) {\n  return new (t || NgbTooltipWindow)();\n};\nNgbTooltipWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTooltipWindow,\n  selectors: [[\"ngb-tooltip-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 3,\n  hostBindings: function NgbTooltipWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"tooltip show\" + (ctx.tooltipClass ? \" \" + ctx.tooltipClass : \"\"));\n    }\n  },\n  inputs: {\n    id: \"id\",\n    tooltipClass: \"tooltipClass\"\n  },\n  ngContentSelectors: _c5,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"arrow\"], [1, \"tooltip-inner\"]],\n  template: function NgbTooltipWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n__decorate([Input()], NgbTooltipWindow.prototype, \"id\", void 0);\n__decorate([Input()], NgbTooltipWindow.prototype, \"tooltipClass\", void 0);\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\nvar NgbTooltip = /*#__PURE__*/function () {\n  function NgbTooltip(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    var _this37 = this;\n    _classCallCheck(this, NgbTooltip);\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the tooltip is shown. Contains no payload.\n     */\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the popover is hidden. Contains no payload.\n     */\n    this.hidden = new EventEmitter();\n    this._ngbTooltipWindowId = \"ngb-tooltip-\".concat(nextId$5++);\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      if (_this37._windowRef) {\n        positionElements(_this37._elementRef.nativeElement, _this37._windowRef.location.nativeElement, _this37.placement, _this37.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  _createClass(NgbTooltip, [{\n    key: \"ngbTooltip\",\n    get: function get() {\n      return this._ngbTooltip;\n    }\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     */,\n    set: function set(value) {\n      this._ngbTooltip = value;\n      if (!value && this._windowRef) {\n        this.close();\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open(context) {\n      var _this38 = this;\n      if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n        this._windowRef = this._popupService.open(this._ngbTooltip, context);\n        this._windowRef.instance.tooltipClass = this.tooltipClass;\n        this._windowRef.instance.id = this._ngbTooltipWindowId;\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n        if (this.container === 'body') {\n          this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n        }\n        // We need to detect changes, because we don't know where .open() might be called from.\n        // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n        // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n        this._windowRef.changeDetectorRef.detectChanges();\n        // We need to mark for check, because tooltip won't work inside the OnPush component.\n        // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n        // inside the template of an OnPush component and we change the tooltip from\n        // open -> closed, the expression in question won't be updated unless we explicitly\n        // mark the parent component to be checked.\n        this._windowRef.changeDetectorRef.markForCheck();\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n          return _this38.close();\n        }, this.hidden, [this._windowRef.location.nativeElement]);\n        this.shown.emit();\n      }\n    }\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._windowRef != null) {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n        this._popupService.close();\n        this._windowRef = null;\n        this.hidden.emit();\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this._windowRef) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._windowRef != null;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_ref14) {\n      var tooltipClass = _ref14.tooltipClass;\n      if (tooltipClass && this.isOpen()) {\n        this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close();\n      // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n      // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n      if (this._unregisterListenersFn) {\n        this._unregisterListenersFn();\n      }\n      this._zoneSubscription.unsubscribe();\n    }\n  }]);\n  return NgbTooltip;\n}();\nNgbTooltip.ɵfac = function NgbTooltip_Factory(t) {\n  return new (t || NgbTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbTooltipConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\nNgbTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTooltip,\n  selectors: [[\"\", \"ngbTooltip\", \"\"]],\n  inputs: {\n    autoClose: \"autoClose\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disableTooltip: \"disableTooltip\",\n    tooltipClass: \"tooltipClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\",\n    ngbTooltip: \"ngbTooltip\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbTooltip\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nNgbTooltip.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: NgbTooltipConfig\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ApplicationRef\n  }];\n};\n__decorate([Input()], NgbTooltip.prototype, \"autoClose\", void 0);\n__decorate([Input()], NgbTooltip.prototype, \"placement\", void 0);\n__decorate([Input()], NgbTooltip.prototype, \"triggers\", void 0);\n__decorate([Input()], NgbTooltip.prototype, \"container\", void 0);\n__decorate([Input()], NgbTooltip.prototype, \"disableTooltip\", void 0);\n__decorate([Input()], NgbTooltip.prototype, \"tooltipClass\", void 0);\n__decorate([Input()], NgbTooltip.prototype, \"openDelay\", void 0);\n__decorate([Input()], NgbTooltip.prototype, \"closeDelay\", void 0);\n__decorate([Output()], NgbTooltip.prototype, \"shown\", void 0);\n__decorate([Output()], NgbTooltip.prototype, \"hidden\", void 0);\n__decorate([Input()], NgbTooltip.prototype, \"ngbTooltip\", null);\nNgbTooltip = __decorate([__param(7, Inject(DOCUMENT))], NgbTooltip);\nvar NgbTooltipModule = /*#__PURE__*/_createClass(function NgbTooltipModule() {\n  _classCallCheck(this, NgbTooltipModule);\n});\nNgbTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTooltipModule\n});\nNgbTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTooltipModule_Factory(t) {\n    return new (t || NgbTooltipModule)();\n  }\n});\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\nvar NgbHighlight = /*#__PURE__*/function () {\n  function NgbHighlight() {\n    _classCallCheck(this, NgbHighlight);\n    /**\n     * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n     */\n    this.highlightClass = 'ngb-highlight';\n  }\n  _createClass(NgbHighlight, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var result = toString(this.result);\n      var terms = Array.isArray(this.term) ? this.term : [this.term];\n      var escapedTerms = terms.map(function (term) {\n        return regExpEscape(toString(term));\n      }).filter(function (term) {\n        return term;\n      });\n      this.parts = escapedTerms.length ? result.split(new RegExp(\"(\".concat(escapedTerms.join('|'), \")\"), 'gmi')) : [result];\n    }\n  }]);\n  return NgbHighlight;\n}();\nNgbHighlight.ɵfac = function NgbHighlight_Factory(t) {\n  return new (t || NgbHighlight)();\n};\nNgbHighlight.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbHighlight,\n  selectors: [[\"ngb-highlight\"]],\n  inputs: {\n    highlightClass: \"highlightClass\",\n    result: \"result\",\n    term: \"term\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"class\", 4, \"ngIf\", \"ngIfElse\"], [\"even\", \"\"]],\n  template: function NgbHighlight_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_Template, 3, 2, \"ng-template\", 0);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.parts);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf],\n  styles: [\".ngb-highlight{font-weight:700}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n__decorate([Input()], NgbHighlight.prototype, \"highlightClass\", void 0);\n__decorate([Input()], NgbHighlight.prototype, \"result\", void 0);\n__decorate([Input()], NgbHighlight.prototype, \"term\", void 0);\nvar NgbTypeaheadWindow = /*#__PURE__*/function () {\n  function NgbTypeaheadWindow() {\n    _classCallCheck(this, NgbTypeaheadWindow);\n    this.activeIdx = 0;\n    /**\n     * Flag indicating if the first row should be active initially\n     */\n    this.focusFirst = true;\n    /**\n     * A function used to format a given result before display. This function should return a formatted string without any\n     * HTML markup\n     */\n    this.formatter = toString;\n    /**\n     * Event raised when user selects a particular result row\n     */\n    this.selectEvent = new EventEmitter();\n    this.activeChangeEvent = new EventEmitter();\n  }\n  _createClass(NgbTypeaheadWindow, [{\n    key: \"hasActive\",\n    value: function hasActive() {\n      return this.activeIdx > -1 && this.activeIdx < this.results.length;\n    }\n  }, {\n    key: \"getActive\",\n    value: function getActive() {\n      return this.results[this.activeIdx];\n    }\n  }, {\n    key: \"markActive\",\n    value: function markActive(activeIdx) {\n      this.activeIdx = activeIdx;\n      this._activeChanged();\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.activeIdx === this.results.length - 1) {\n        this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n      } else {\n        this.activeIdx++;\n      }\n      this._activeChanged();\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      if (this.activeIdx < 0) {\n        this.activeIdx = this.results.length - 1;\n      } else if (this.activeIdx === 0) {\n        this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n      } else {\n        this.activeIdx--;\n      }\n      this._activeChanged();\n    }\n  }, {\n    key: \"resetActive\",\n    value: function resetActive() {\n      this.activeIdx = this.focusFirst ? 0 : -1;\n      this._activeChanged();\n    }\n  }, {\n    key: \"select\",\n    value: function select(item) {\n      this.selectEvent.emit(item);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.resetActive();\n    }\n  }, {\n    key: \"_activeChanged\",\n    value: function _activeChanged() {\n      this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n  }]);\n  return NgbTypeaheadWindow;\n}();\nNgbTypeaheadWindow.ɵfac = function NgbTypeaheadWindow_Factory(t) {\n  return new (t || NgbTypeaheadWindow)();\n};\nNgbTypeaheadWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTypeaheadWindow,\n  selectors: [[\"ngb-typeahead-window\"]],\n  hostAttrs: [\"role\", \"listbox\", 1, \"dropdown-menu\", \"show\"],\n  hostVars: 1,\n  hostBindings: function NgbTypeaheadWindow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function NgbTypeaheadWindow_mousedown_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    focusFirst: \"focusFirst\",\n    formatter: \"formatter\",\n    id: \"id\",\n    results: \"results\",\n    term: \"term\",\n    resultTemplate: \"resultTemplate\"\n  },\n  outputs: {\n    selectEvent: \"select\",\n    activeChangeEvent: \"activeChange\"\n  },\n  exportAs: [\"ngbTypeaheadWindow\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"rt\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"result\", \"term\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbTypeaheadWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbTypeaheadWindow_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbTypeaheadWindow_ng_template_2_Template, 2, 9, \"ng-template\", 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.results);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, NgbHighlight, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"id\", void 0);\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"focusFirst\", void 0);\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"results\", void 0);\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"term\", void 0);\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"formatter\", void 0);\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"resultTemplate\", void 0);\n__decorate([Output('select')], NgbTypeaheadWindow.prototype, \"selectEvent\", void 0);\n__decorate([Output('activeChange')], NgbTypeaheadWindow.prototype, \"activeChangeEvent\", void 0);\nvar ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n  providedIn: 'root',\n  factory: ARIA_LIVE_DELAY_FACTORY\n});\nfunction ARIA_LIVE_DELAY_FACTORY() {\n  return 100;\n}\nfunction getLiveElement(document) {\n  var lazyCreate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var element = document.body.querySelector('#ngb-live');\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n    element.classList.add('sr-only');\n    document.body.appendChild(element);\n  }\n  return element;\n}\nvar Live = /*#__PURE__*/function () {\n  function Live(_document, _delay) {\n    _classCallCheck(this, Live);\n    this._document = _document;\n    this._delay = _delay;\n  }\n  _createClass(Live, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var element = getLiveElement(this._document);\n      if (element) {\n        element.parentElement.removeChild(element);\n      }\n    }\n  }, {\n    key: \"say\",\n    value: function say(message) {\n      var element = getLiveElement(this._document, true);\n      var delay = this._delay;\n      element.textContent = '';\n      var setText = function setText() {\n        return element.textContent = message;\n      };\n      if (delay === null) {\n        setText();\n      } else {\n        setTimeout(setText, delay);\n      }\n    }\n  }]);\n  return Live;\n}();\nLive.ɵfac = function Live_Factory(t) {\n  return new (t || Live)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ARIA_LIVE_DELAY));\n};\nLive.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [ARIA_LIVE_DELAY]\n    }]\n  }];\n};\nLive.ɵprov = ɵɵdefineInjectable({\n  factory: function Live_Factory() {\n    return new Live(ɵɵinject(DOCUMENT), ɵɵinject(ARIA_LIVE_DELAY));\n  },\n  token: Live,\n  providedIn: \"root\"\n});\nLive = __decorate([__param(0, Inject(DOCUMENT)), __param(1, Inject(ARIA_LIVE_DELAY))], Live);\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nvar NgbTypeaheadConfig = /*#__PURE__*/_createClass(function NgbTypeaheadConfig() {\n  _classCallCheck(this, NgbTypeaheadConfig);\n  this.editable = true;\n  this.focusFirst = true;\n  this.showHint = false;\n  this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n});\nNgbTypeaheadConfig.ɵfac = function NgbTypeaheadConfig_Factory(t) {\n  return new (t || NgbTypeaheadConfig)();\n};\nNgbTypeaheadConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTypeaheadConfig_Factory() {\n    return new NgbTypeaheadConfig();\n  },\n  token: NgbTypeaheadConfig,\n  providedIn: \"root\"\n});\nvar NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbTypeahead;\n  }),\n  multi: true\n};\nvar nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\nvar NgbTypeahead = /*#__PURE__*/function () {\n  function NgbTypeahead(_elementRef, viewContainerRef, _renderer, injector, componentFactoryResolver, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n    var _this39 = this;\n    _classCallCheck(this, NgbTypeahead);\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._live = _live;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    this._closed$ = new Subject();\n    /**\n     * The value for the `autocomplete` attribute for the `<input>` element.\n     *\n     * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n     *\n     * @since 2.1.0\n     */\n    this.autocomplete = 'off';\n    /**\n     * The preferred placement of the typeahead.\n     *\n     * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n     * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n     * `\"right-bottom\"`\n     *\n     * Accepts an array of strings or a string with space separated possible values.\n     *\n     * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n     *\n     * Please see the [positioning overview](#/positioning) for more details.\n     */\n    this.placement = 'bottom-left';\n    /**\n     * An event emitted right before an item is selected from the result list.\n     *\n     * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n     */\n    this.selectItem = new EventEmitter();\n    this.popupId = \"ngb-typeahead-\".concat(nextWindowId++);\n    this._onTouched = function () {};\n    this._onChange = function (_) {};\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n    this._valueChanges = fromEvent(_elementRef.nativeElement, 'input').pipe(map(function ($event) {\n      return $event.target.value;\n    }));\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n    this._popupService = new PopupService(NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = ngZone.onStable.subscribe(function () {\n      if (_this39.isPopupOpen()) {\n        positionElements(_this39._elementRef.nativeElement, _this39._windowRef.location.nativeElement, _this39.placement, _this39.container === 'body');\n      }\n    });\n  }\n  _createClass(NgbTypeahead, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this40 = this;\n      var inputValues$ = this._valueChanges.pipe(tap(function (value) {\n        _this40._inputValueBackup = _this40.showHint ? value : null;\n        _this40._onChange(_this40.editable ? value : undefined);\n      }));\n      var results$ = inputValues$.pipe(this.ngbTypeahead);\n      var userInput$ = this._resubscribeTypeahead.pipe(switchMap(function () {\n        return results$;\n      }));\n      this._subscription = this._subscribeToUserInput(userInput$);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._closePopup();\n      this._unsubscribeFromUserInput();\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._writeInputValue(this._formatItemForInput(value));\n      if (this.showHint) {\n        this._inputValueBackup = value;\n      }\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * Dismisses typeahead popup window\n     */\n  }, {\n    key: \"dismissPopup\",\n    value: function dismissPopup() {\n      if (this.isPopupOpen()) {\n        this._resubscribeTypeahead.next(null);\n        this._closePopup();\n        if (this.showHint && this._inputValueBackup !== null) {\n          this._writeInputValue(this._inputValueBackup);\n        }\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n  }, {\n    key: \"isPopupOpen\",\n    value: function isPopupOpen() {\n      return this._windowRef != null;\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this._resubscribeTypeahead.next(null);\n      this._onTouched();\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      if (!this.isPopupOpen()) {\n        return;\n      }\n      // tslint:disable-next-line:deprecation\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          var result = this._windowRef.instance.getActive();\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this._selectResult(result);\n          }\n          this._closePopup();\n          break;\n      }\n    }\n  }, {\n    key: \"_openPopup\",\n    value: function _openPopup() {\n      var _this41 = this;\n      if (!this.isPopupOpen()) {\n        this._inputValueBackup = this._elementRef.nativeElement.value;\n        this._windowRef = this._popupService.open();\n        this._windowRef.instance.id = this.popupId;\n        this._windowRef.instance.selectEvent.subscribe(function (result) {\n          return _this41._selectResultClosePopup(result);\n        });\n        this._windowRef.instance.activeChangeEvent.subscribe(function (activeId) {\n          return _this41.activeDescendant = activeId;\n        });\n        if (this.container === 'body') {\n          window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n        }\n        this._changeDetector.markForCheck();\n        ngbAutoClose(this._ngZone, this._document, 'outside', function () {\n          return _this41.dismissPopup();\n        }, this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n      }\n    }\n  }, {\n    key: \"_closePopup\",\n    value: function _closePopup() {\n      this._closed$.next();\n      this._popupService.close();\n      this._windowRef = null;\n      this.activeDescendant = undefined;\n    }\n  }, {\n    key: \"_selectResult\",\n    value: function _selectResult(result) {\n      var defaultPrevented = false;\n      this.selectItem.emit({\n        item: result,\n        preventDefault: function preventDefault() {\n          defaultPrevented = true;\n        }\n      });\n      this._resubscribeTypeahead.next(null);\n      if (!defaultPrevented) {\n        this.writeValue(result);\n        this._onChange(result);\n      }\n    }\n  }, {\n    key: \"_selectResultClosePopup\",\n    value: function _selectResultClosePopup(result) {\n      this._selectResult(result);\n      this._closePopup();\n    }\n  }, {\n    key: \"_showHint\",\n    value: function _showHint() {\n      if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n        var userInputLowerCase = this._inputValueBackup.toLowerCase();\n        var formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n        if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n          this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n          this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n        } else {\n          this._writeInputValue(formattedVal);\n        }\n      }\n    }\n  }, {\n    key: \"_formatItemForInput\",\n    value: function _formatItemForInput(item) {\n      return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n  }, {\n    key: \"_writeInputValue\",\n    value: function _writeInputValue(value) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n    }\n  }, {\n    key: \"_subscribeToUserInput\",\n    value: function _subscribeToUserInput(userInput$) {\n      var _this42 = this;\n      return userInput$.subscribe(function (results) {\n        if (!results || results.length === 0) {\n          _this42._closePopup();\n        } else {\n          _this42._openPopup();\n          _this42._windowRef.instance.focusFirst = _this42.focusFirst;\n          _this42._windowRef.instance.results = results;\n          _this42._windowRef.instance.term = _this42._elementRef.nativeElement.value;\n          if (_this42.resultFormatter) {\n            _this42._windowRef.instance.formatter = _this42.resultFormatter;\n          }\n          if (_this42.resultTemplate) {\n            _this42._windowRef.instance.resultTemplate = _this42.resultTemplate;\n          }\n          _this42._windowRef.instance.resetActive();\n          // The observable stream we are subscribing to might have async steps\n          // and if a component containing typeahead is using the OnPush strategy\n          // the change detection turn wouldn't be invoked automatically.\n          _this42._windowRef.changeDetectorRef.detectChanges();\n          _this42._showHint();\n        }\n        // live announcer\n        var count = results ? results.length : 0;\n        _this42._live.say(count === 0 ? 'No results available' : \"\".concat(count, \" result\").concat(count === 1 ? '' : 's', \" available\"));\n      });\n    }\n  }, {\n    key: \"_unsubscribeFromUserInput\",\n    value: function _unsubscribeFromUserInput() {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n      }\n      this._subscription = null;\n    }\n  }]);\n  return NgbTypeahead;\n}();\nNgbTypeahead.ɵfac = function NgbTypeahead_Factory(t) {\n  return new (t || NgbTypeahead)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(NgbTypeaheadConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(Live), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\nNgbTypeahead.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTypeahead,\n  selectors: [[\"input\", \"ngbTypeahead\", \"\"]],\n  hostAttrs: [\"autocapitalize\", \"off\", \"autocorrect\", \"off\", \"role\", \"combobox\", \"aria-multiline\", \"false\"],\n  hostVars: 7,\n  hostBindings: function NgbTypeahead_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function NgbTypeahead_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbTypeahead_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete);\n      ɵngcc0.ɵɵattribute(\"aria-autocomplete\", ctx.showHint ? \"both\" : \"list\")(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-owns\", ctx.isPopupOpen() ? ctx.popupId : null)(\"aria-expanded\", ctx.isPopupOpen());\n      ɵngcc0.ɵɵclassProp(\"open\", ctx.isPopupOpen());\n    }\n  },\n  inputs: {\n    autocomplete: \"autocomplete\",\n    placement: \"placement\",\n    container: \"container\",\n    editable: \"editable\",\n    focusFirst: \"focusFirst\",\n    showHint: \"showHint\",\n    inputFormatter: \"inputFormatter\",\n    ngbTypeahead: \"ngbTypeahead\",\n    resultFormatter: \"resultFormatter\",\n    resultTemplate: \"resultTemplate\"\n  },\n  outputs: {\n    selectItem: \"selectItem\"\n  },\n  exportAs: [\"ngbTypeahead\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_TYPEAHEAD_VALUE_ACCESSOR])]\n});\nNgbTypeahead.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: NgbTypeaheadConfig\n  }, {\n    type: NgZone\n  }, {\n    type: Live\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ApplicationRef\n  }];\n};\n__decorate([Input()], NgbTypeahead.prototype, \"autocomplete\", void 0);\n__decorate([Input()], NgbTypeahead.prototype, \"container\", void 0);\n__decorate([Input()], NgbTypeahead.prototype, \"editable\", void 0);\n__decorate([Input()], NgbTypeahead.prototype, \"focusFirst\", void 0);\n__decorate([Input()], NgbTypeahead.prototype, \"inputFormatter\", void 0);\n__decorate([Input()], NgbTypeahead.prototype, \"ngbTypeahead\", void 0);\n__decorate([Input()], NgbTypeahead.prototype, \"resultFormatter\", void 0);\n__decorate([Input()], NgbTypeahead.prototype, \"resultTemplate\", void 0);\n__decorate([Input()], NgbTypeahead.prototype, \"showHint\", void 0);\n__decorate([Input()], NgbTypeahead.prototype, \"placement\", void 0);\n__decorate([Output()], NgbTypeahead.prototype, \"selectItem\", void 0);\nNgbTypeahead = __decorate([__param(8, Inject(DOCUMENT))], NgbTypeahead);\nvar NgbTypeaheadModule = /*#__PURE__*/_createClass(function NgbTypeaheadModule() {\n  _classCallCheck(this, NgbTypeaheadModule);\n});\nNgbTypeaheadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTypeaheadModule\n});\nNgbTypeaheadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTypeaheadModule_Factory(t) {\n    return new (t || NgbTypeaheadModule)();\n  },\n  imports: [[CommonModule]]\n});\nvar NGB_MODULES = [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule,\n// tslint:disable-next-line:deprecation\nNgbTabsetModule];\nvar NgbModule = /*#__PURE__*/_createClass(function NgbModule() {\n  _classCallCheck(this, NgbModule);\n});\nNgbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbModule\n});\nNgbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbModule_Factory(t) {\n    return new (t || NgbModule)();\n  },\n  imports: [NGB_MODULES, NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule, NgbTabsetModule]\n});\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAccordionConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanelHeader, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelHeader]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelTitle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanel, [{\n    type: Directive,\n    args: [{\n      selector: 'ngb-panel'\n    }]\n  }], function () {\n    return [];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    cardClass: [{\n      type: Input\n    }],\n    titleTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelTitle, {\n        descendants: false\n      }]\n    }],\n    headerTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelHeader, {\n        descendants: false\n      }]\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAccordion, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-accordion',\n      exportAs: 'ngbAccordion',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'accordion',\n        'role': 'tablist',\n        '[attr.aria-multiselectable]': '!closeOtherPanels'\n      },\n      template: \"\\n    <ng-template #t ngbPanelHeader let-panel>\\n      <button class=\\\"btn btn-link\\\" [ngbPanelToggle]=\\\"panel\\\">\\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\\\"panel.titleTpl?.templateRef\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n    <ng-template ngFor let-panel [ngForOf]=\\\"panels\\\">\\n      <div [class]=\\\"'card ' + (panel.cardClass || '')\\\">\\n        <div role=\\\"tab\\\" id=\\\"{{panel.id}}-header\\\" [class]=\\\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"panel.headerTpl?.templateRef || t\\\"\\n                       [ngTemplateOutletContext]=\\\"{$implicit: panel, opened: panel.isOpen}\\\"></ng-template>\\n        </div>\\n        <div id=\\\"{{panel.id}}\\\" role=\\\"tabpanel\\\" [attr.aria-labelledby]=\\\"panel.id + '-header'\\\"\\n             class=\\\"collapse\\\" [class.show]=\\\"panel.isOpen\\\" *ngIf=\\\"!destroyOnHide || panel.isOpen\\\">\\n          <div class=\\\"card-body\\\">\\n               <ng-template [ngTemplateOutlet]=\\\"panel.contentTpl?.templateRef\\\"></ng-template>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionConfig\n    }];\n  }, {\n    activeIds: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    panelChange: [{\n      type: Output\n    }],\n    type: [{\n      type: Input\n    }],\n    closeOtherPanels: [{\n      type: Input,\n      args: ['closeOthers']\n    }],\n    panels: [{\n      type: ContentChildren,\n      args: [NgbPanel]\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanelToggle, [{\n    type: Directive,\n    args: [{\n      selector: 'button[ngbPanelToggle]',\n      host: {\n        'type': 'button',\n        '[disabled]': 'panel.disabled',\n        '[class.collapsed]': '!panel.isOpen',\n        '[attr.aria-expanded]': 'panel.isOpen',\n        '[attr.aria-controls]': 'panel.id',\n        '(click)': 'accordion.toggle(panel.id)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordion\n    }, {\n      type: NgbPanel,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }];\n  }, {\n    ngbPanelToggle: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAccordionModule, {\n    declarations: function declarations() {\n      return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAccordionModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_ACCORDION_DIRECTIVES,\n      exports: NGB_ACCORDION_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAlertConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAlert, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-alert',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        'class': 'alert',\n        '[class.alert-dismissible]': 'dismissible'\n      },\n      template: \"\\n    <ng-content></ng-content>\\n    <button *ngIf=\\\"dismissible\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" i18n-aria-label=\\\"@@ngb.alert.close\\\"\\n      (click)=\\\"closeHandler()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    \",\n      styles: [\"ngb-alert{display:block}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbAlertConfig\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    close: [{\n      type: Output\n    }],\n    dismissible: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAlertModule, {\n    declarations: function declarations() {\n      return [NgbAlert];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbAlert];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAlertModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbAlert],\n      exports: [NgbAlert],\n      imports: [CommonModule],\n      entryComponents: [NgbAlert]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbButtonLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButtonLabel]',\n      host: {\n        '[class.btn]': 'true',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'focused'\n      }\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCheckBox, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=checkbox]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '(change)': 'onInputChange($event)',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      },\n      providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: NgbButtonLabel\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    valueChecked: [{\n      type: Input\n    }],\n    valueUnChecked: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRadioGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbRadioGroup]',\n      host: {\n        'role': 'radiogroup'\n      },\n      providers: [NGB_RADIO_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [];\n  }, {\n    name: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRadio, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=radio]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '[name]': 'nameAttr',\n        '(change)': 'onChange()',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbRadioGroup\n    }, {\n      type: NgbButtonLabel\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    value: [{\n      type: Input,\n      args: ['value']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    name: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbButtonsModule, {\n    declarations: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio],\n    exports: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbButtonsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_BUTTON_DIRECTIVES,\n      exports: NGB_BUTTON_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCarouselConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbSlide, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbSlide]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCarousel, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-carousel',\n      exportAs: 'ngbCarousel',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'carousel slide',\n        '[style.display]': '\"block\"',\n        'tabIndex': '0',\n        '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n        '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n      },\n      template: \"\\n    <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showNavigationIndicators\\\">\\n      <li *ngFor=\\\"let slide of slides\\\" [id]=\\\"slide.id\\\" [class.active]=\\\"slide.id === activeId\\\"\\n          (click)=\\\"select(slide.id, NgbSlideEventSource.INDICATOR)\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n      <div *ngFor=\\\"let slide of slides\\\" class=\\\"carousel-item\\\" [class.active]=\\\"slide.id === activeId\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"slide.tplRef\\\"></ng-template>\\n      </div>\\n    </div>\\n    <a class=\\\"carousel-control-prev\\\" role=\\\"button\\\" (click)=\\\"prev(NgbSlideEventSource.ARROW_LEFT)\\\" *ngIf=\\\"showNavigationArrows\\\">\\n      <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.carousel.previous\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" role=\\\"button\\\" (click)=\\\"next(NgbSlideEventSource.ARROW_RIGHT)\\\" *ngIf=\\\"showNavigationArrows\\\">\\n      <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.carousel.next\\\">Next</span>\\n    </a>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbCarouselConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    slide: [{\n      type: Output\n    }],\n    interval: [{\n      type: Input\n    }],\n    wrap: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    pauseOnHover: [{\n      type: Input\n    }],\n    showNavigationArrows: [{\n      type: Input\n    }],\n    showNavigationIndicators: [{\n      type: Input\n    }],\n    mouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    mouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }],\n    activeId: [{\n      type: Input\n    }],\n    slides: [{\n      type: ContentChildren,\n      args: [NgbSlide]\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCarouselModule, {\n    declarations: function declarations() {\n      return [NgbCarousel, NgbSlide];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbCarousel, NgbSlide];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCarouselModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_CAROUSEL_DIRECTIVES,\n      exports: NGB_CAROUSEL_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCollapse, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbCollapse]',\n      exportAs: 'ngbCollapse',\n      host: {\n        '[class.collapse]': 'true',\n        '[class.show]': '!collapsed'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    collapsed: [{\n      type: Input,\n      args: ['ngbCollapse']\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCollapseModule, {\n    declarations: [NgbCollapse],\n    exports: [NgbCollapse]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCollapseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbCollapse],\n      exports: [NgbCollapse]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_CALENDAR_FACTORY\n    }]\n  }], null, null);\n})();\nvar ɵNgbCalendarGregorian_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarGregorian);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarGregorian, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\nvar ɵNgbDateStructAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateStructAdapter);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbDatepickerContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepicker, [{\n    type: Component,\n    args: [{\n      exportAs: 'ngbDatepicker',\n      selector: 'ngb-datepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-template #defaultDayTemplate let-date=\\\"date\\\" let-currentMonth=\\\"currentMonth\\\" let-selected=\\\"selected\\\"\\n                 let-disabled=\\\"disabled\\\" let-focused=\\\"focused\\\">\\n      <div ngbDatepickerDayView\\n        [date]=\\\"date\\\"\\n        [currentMonth]=\\\"currentMonth\\\"\\n        [selected]=\\\"selected\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [focused]=\\\"focused\\\">\\n      </div>\\n    </ng-template>\\n\\n    <ng-template #defaultContentTemplate>\\n      <div *ngFor=\\\"let month of model.months; let i = index;\\\" class=\\\"ngb-dp-month\\\">\\n        <div *ngIf=\\\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\\\" class=\\\"ngb-dp-month-name\\\">\\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\\n        </div>\\n        <ngb-datepicker-month [month]=\\\"month.firstDate\\\"></ngb-datepicker-month>\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"ngb-dp-header\\\">\\n      <ngb-datepicker-navigation *ngIf=\\\"navigation !== 'none'\\\"\\n        [date]=\\\"model.firstDate\\\"\\n        [months]=\\\"model.months\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [showSelect]=\\\"model.navigation === 'select'\\\"\\n        [prevDisabled]=\\\"model.prevDisabled\\\"\\n        [nextDisabled]=\\\"model.nextDisabled\\\"\\n        [selectBoxes]=\\\"model.selectBoxes\\\"\\n        (navigate)=\\\"onNavigateEvent($event)\\\"\\n        (select)=\\\"onNavigateDateSelect($event)\\\">\\n      </ngb-datepicker-navigation>\\n    </div>\\n\\n    <div class=\\\"ngb-dp-content\\\" [class.ngb-dp-months]=\\\"!contentTemplate\\\" #content>\\n      <ng-template [ngTemplateOutlet]=\\\"contentTemplate?.templateRef || defaultContentTemplate\\\"></ng-template>\\n    </div>\\n\\n    <ng-template [ngTemplateOutlet]=\\\"footerTemplate\\\"></ng-template>\\n  \",\n      providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService],\n      styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerService\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepickerConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    navigate: [{\n      type: Output\n    }],\n    dateSelect: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    _defaultDayTemplate: [{\n      type: ViewChild,\n      args: ['defaultDayTemplate', {\n        static: true\n      }]\n    }],\n    _contentEl: [{\n      type: ViewChild,\n      args: ['content', {\n        static: true\n      }]\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: [NgbDatepickerContent, {\n        static: true\n      }]\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    showWeekdays: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerKeyboardService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerMonth, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-month',\n      host: {\n        'role': 'grid',\n        '(keydown)': 'onKeyDown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div *ngIf=\\\"datepicker.showWeekdays\\\" class=\\\"ngb-dp-week ngb-dp-weekdays\\\" role=\\\"row\\\">\\n      <div *ngIf=\\\"datepicker.showWeekNumbers\\\" class=\\\"ngb-dp-weekday ngb-dp-showweek\\\"></div>\\n      <div *ngFor=\\\"let w of viewModel.weekdays\\\" class=\\\"ngb-dp-weekday small\\\" role=\\\"columnheader\\\">\\n        {{ i18n.getWeekdayShortName(w) }}\\n      </div>\\n    </div>\\n    <ng-template ngFor let-week [ngForOf]=\\\"viewModel.weeks\\\">\\n      <div *ngIf=\\\"!week.collapsed\\\" class=\\\"ngb-dp-week\\\" role=\\\"row\\\">\\n        <div *ngIf=\\\"datepicker.showWeekNumbers\\\" class=\\\"ngb-dp-week-number small text-muted\\\">{{ i18n.getWeekNumerals(week.number) }}</div>\\n        <div *ngFor=\\\"let day of week.days\\\" (click)=\\\"doSelect(day); $event.preventDefault()\\\" class=\\\"ngb-dp-day\\\" role=\\\"gridcell\\\"\\n          [class.disabled]=\\\"day.context.disabled\\\"\\n          [tabindex]=\\\"day.tabindex\\\"\\n          [class.hidden]=\\\"day.hidden\\\"\\n          [class.ngb-dp-today]=\\\"day.context.today\\\"\\n          [attr.aria-label]=\\\"day.ariaLabel\\\">\\n          <ng-template [ngIf]=\\\"!day.hidden\\\">\\n            <ng-template [ngTemplateOutlet]=\\\"datepicker.dayTemplate\\\" [ngTemplateOutletContext]=\\\"day.context\\\"></ng-template>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \",\n      styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepicker\n    }, {\n      type: NgbDatepickerKeyboardService\n    }, {\n      type: NgbDatepickerService\n    }];\n  }, {\n    month: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigation, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div class=\\\"ngb-dp-arrow\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"onClickPrev($event)\\\" [disabled]=\\\"prevDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.previous-month\\\" aria-label=\\\"Previous month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.previous-month\\\" title=\\\"Previous month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    <ngb-datepicker-navigation-select *ngIf=\\\"showSelect\\\" class=\\\"ngb-dp-navigation-select\\\"\\n      [date]=\\\"date\\\"\\n      [disabled] = \\\"disabled\\\"\\n      [months]=\\\"selectBoxes.months\\\"\\n      [years]=\\\"selectBoxes.years\\\"\\n      (select)=\\\"select.emit($event)\\\">\\n    </ngb-datepicker-navigation-select>\\n\\n    <ng-template *ngIf=\\\"!showSelect\\\" ngFor let-month [ngForOf]=\\\"months\\\" let-i=\\\"index\\\">\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i > 0\\\"></div>\\n      <div class=\\\"ngb-dp-month-name\\\">\\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\\n      </div>\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i !== months.length - 1\\\"></div>\\n    </ng-template>\\n    <div class=\\\"ngb-dp-arrow right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"onClickNext($event)\\\" [disabled]=\\\"nextDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.next-month\\\" aria-label=\\\"Next month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.next-month\\\" title=\\\"Next month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    \",\n      styles: [\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    months: [{\n      type: Input\n    }],\n    navigate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    showSelect: [{\n      type: Input\n    }],\n    prevDisabled: [{\n      type: Input\n    }],\n    nextDisabled: [{\n      type: Input\n    }],\n    selectBoxes: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateParserFormatter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY\n    }]\n  }], null, null);\n})();\nvar ɵNgbDateISOParserFormatter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateISOParserFormatter);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateISOParserFormatter, [{\n    type: Injectable\n  }], null, null);\n})();\nvar ɵNgbInputDatepickerConfig_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbInputDatepickerConfig);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbInputDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbInputDatepicker, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbDatepicker]',\n      exportAs: 'ngbDatepicker',\n      host: {\n        '(input)': 'manualDateChange($event.target.value)',\n        '(change)': 'manualDateChange($event.target.value, true)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '[disabled]': 'disabled'\n      },\n      providers: [NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, {\n        provide: NgbDatepickerConfig,\n        useExisting: NgbInputDatepickerConfig\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbDateParserFormatter\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbInputDatepickerConfig\n    }];\n  }, {\n    dateSelect: [{\n      type: Output\n    }],\n    navigate: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input\n    }],\n    showWeekdays: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    positionTarget: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerDayView, [{\n    type: Component,\n    args: [{\n      selector: '[ngbDatepickerDayView]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'btn-light',\n        '[class.bg-primary]': 'selected',\n        '[class.text-white]': 'selected',\n        '[class.text-muted]': 'isMuted()',\n        '[class.outside]': 'isMuted()',\n        '[class.active]': 'focused'\n      },\n      template: \"{{ i18n.getDayNumerals(date) }}\",\n      styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    currentMonth: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigationSelect, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation-select',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <select #month\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      i18n-aria-label=\\\"@@ngb.datepicker.select-month\\\" aria-label=\\\"Select month\\\"\\n      i18n-title=\\\"@@ngb.datepicker.select-month\\\" title=\\\"Select month\\\"\\n      (change)=\\\"changeMonth($event.target.value)\\\">\\n        <option *ngFor=\\\"let m of months\\\" [attr.aria-label]=\\\"i18n.getMonthFullName(m, date?.year)\\\"\\n                [value]=\\\"m\\\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\\n    </select><select #year\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      i18n-aria-label=\\\"@@ngb.datepicker.select-year\\\" aria-label=\\\"Select year\\\"\\n      i18n-title=\\\"@@ngb.datepicker.select-year\\\" title=\\\"Select year\\\"\\n      (change)=\\\"changeYear($event.target.value)\\\">\\n        <option *ngFor=\\\"let y of years\\\" [value]=\\\"y\\\">{{ i18n.getYearNumerals(y) }}</option>\\n    </select>\\n  \",\n      styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    select: [{\n      type: Output\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    months: [{\n      type: Input\n    }],\n    years: [{\n      type: Input\n    }],\n    monthSelect: [{\n      type: ViewChild,\n      args: ['month', {\n        static: true,\n        read: ElementRef\n      }]\n    }],\n    yearSelect: [{\n      type: ViewChild,\n      args: ['year', {\n        static: true,\n        read: ElementRef\n      }]\n    }]\n  });\n})();\nvar ɵNgbCalendarHijri_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHijri);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarHijri, [{\n    type: Injectable\n  }], null, null);\n})();\nvar ɵNgbCalendarIslamicCivil_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicCivil);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicCivil, [{\n    type: Injectable\n  }], null, null);\n})();\nvar ɵNgbCalendarIslamicUmalqura_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicUmalqura);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicUmalqura, [{\n    type: Injectable\n  }], null, null);\n})();\nvar ɵNgbCalendarPersian_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarPersian);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarPersian, [{\n    type: Injectable\n  }], null, null);\n})();\nvar ɵNgbCalendarHebrew_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHebrew);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\nvar ɵNgbDatepickerI18nHebrew_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDatepickerI18nHebrew);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\nvar ɵNgbDateNativeAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeAdapter);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateNativeAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\nvar ɵNgbDateNativeUTCAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeUTCAdapter);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateNativeUTCAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDatepickerModule, {\n    declarations: function declarations() {\n      return [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule];\n    },\n    exports: function exports() {\n      return [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker],\n      exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n      imports: [CommonModule, FormsModule],\n      entryComponents: [NgbDatepicker]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavbar, [{\n    type: Directive,\n    args: [{\n      selector: '.navbar'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownItem]',\n      host: {\n        'class': 'dropdown-item',\n        '[class.disabled]': 'disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownMenu, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownMenu]',\n      host: {\n        '[class.dropdown-menu]': 'true',\n        '[class.show]': 'dropdown.isOpen()',\n        '[attr.x-placement]': 'placement',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n        '(keydown.Space)': 'dropdown.onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbDropdown;\n        })]\n      }]\n    }];\n  }, {\n    menuItems: [{\n      type: ContentChildren,\n      args: [NgbDropdownItem]\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownAnchor, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownAnchor]',\n      host: {\n        'class': 'dropdown-toggle',\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'dropdown.isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbDropdown;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownToggle]',\n      host: {\n        'class': 'dropdown-toggle',\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'dropdown.isOpen()',\n        '(click)': 'dropdown.toggle()',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)'\n      },\n      providers: [{\n        provide: NgbDropdownAnchor,\n        useExisting: forwardRef(function () {\n          return NgbDropdownToggle_1;\n        })\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbDropdown;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdown, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdown]',\n      exportAs: 'ngbDropdown',\n      host: {\n        '[class.show]': 'isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbDropdownConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: NgbNavbar,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    _open: [{\n      type: Input,\n      args: ['open']\n    }],\n    openChange: [{\n      type: Output\n    }],\n    placement: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    _menu: [{\n      type: ContentChild,\n      args: [NgbDropdownMenu, {\n        static: false\n      }]\n    }],\n    _menuElement: [{\n      type: ContentChild,\n      args: [NgbDropdownMenu, {\n        read: ElementRef,\n        static: false\n      }]\n    }],\n    _anchor: [{\n      type: ContentChild,\n      args: [NgbDropdownAnchor, {\n        static: false\n      }]\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDropdownModule, {\n    declarations: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar],\n    exports: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_DROPDOWN_DIRECTIVES,\n      exports: NGB_DROPDOWN_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScrollBar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalBackdrop, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-backdrop',\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      host: {\n        '[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")',\n        'style': 'z-index: 1050'\n      }\n    }]\n  }], null, {\n    backdropClass: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-window',\n      host: {\n        '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n        'role': 'dialog',\n        'tabindex': '-1',\n        '[attr.aria-modal]': 'true',\n        '[attr.aria-labelledby]': 'ariaLabelledBy'\n      },\n      template: \"\\n    <div #dialog [class]=\\\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\\n     (scrollable ? ' modal-dialog-scrollable' : '')\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\"><ng-content></ng-content></div>\\n    </div>\\n    \",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"ngb-modal-window .component-host-scrollable{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    backdrop: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }],\n    _dialogEl: [{\n      type: ViewChild,\n      args: ['dialog', {\n        static: true\n      }]\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    centered: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    windowClass: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalStack, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ScrollBar\n    }, {\n      type: ɵngcc0.RendererFactory2\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModal, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: NgbModalStack\n    }, {\n      type: NgbModalConfig\n    }];\n  }, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModalModule, {\n    declarations: [NgbModalBackdrop, NgbModalWindow]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbModalBackdrop, NgbModalWindow],\n      entryComponents: [NgbModalBackdrop, NgbModalWindow],\n      providers: [NgbModal]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbNavContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavItem]',\n      exportAs: 'ngbNavItem',\n      host: {\n        '[class.nav-item]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbNav;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    domId: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    _id: [{\n      type: Input,\n      args: ['ngbNavItem']\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbNavContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNav, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNav]',\n      exportAs: 'ngbNav',\n      host: {\n        '[class.nav]': 'true',\n        '[class.flex-column]': \"orientation === 'vertical'\",\n        '[attr.aria-orientation]': \"orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined\",\n        '[attr.role]': \"role ? role : roles ? 'tablist' : undefined\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    activeIdChange: [{\n      type: Output\n    }],\n    navChange: [{\n      type: Output\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roles: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [NgbNavItem]\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavLink, [{\n    type: Directive,\n    args: [{\n      selector: 'a[ngbNavLink]',\n      host: {\n        '[id]': 'navItem.domId',\n        '[class.nav-link]': 'true',\n        '[class.nav-item]': 'hasNavItemClass()',\n        '[attr.role]': \"role ? role : nav.roles ? 'tab' : undefined\",\n        'href': '',\n        '[class.active]': 'navItem.active',\n        '[class.disabled]': 'navItem.disabled',\n        '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n        '[attr.aria-selected]': 'navItem.active',\n        '[attr.aria-disabled]': 'navItem.disabled',\n        '(click)': 'nav.click(navItem); $event.preventDefault()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavItem\n    }, {\n      type: NgbNav\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavOutlet, [{\n    type: Component,\n    args: [{\n      selector: '[ngbNavOutlet]',\n      host: {\n        '[class.tab-content]': 'true'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n      <ng-template ngFor let-item [ngForOf]=\\\"nav.items\\\">\\n          <div class=\\\"tab-pane\\\"\\n               *ngIf=\\\"item.isPanelInDom()\\\"\\n               [id]=\\\"item.panelDomId\\\"\\n               [class.active]=\\\"item.active\\\"\\n               [attr.role]=\\\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\\\"\\n               [attr.aria-labelledby]=\\\"item.domId\\\">\\n              <ng-template [ngTemplateOutlet]=\\\"item.contentTpl?.templateRef\\\"\\n                           [ngTemplateOutletContext]=\\\"{$implicit: item.active}\\\"></ng-template>\\n          </div>\\n      </ng-template>\\n  \"\n    }]\n  }], null, {\n    paneRole: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input,\n      args: ['ngbNavOutlet']\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbNavModule, {\n    declarations: function declarations() {\n      return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_NAV_DIRECTIVES,\n      exports: NGB_NAV_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationEllipsis, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationEllipsis]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationFirst, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationFirst]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationLast, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationLast]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationNext, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNext]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationNumber, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNumber]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationPrevious]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPagination, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-pagination',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'role': 'navigation'\n      },\n      template: \"\\n    <ng-template #first><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.first\\\">&laquo;&laquo;</span></ng-template>\\n    <ng-template #previous><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.previous\\\">&laquo;</span></ng-template>\\n    <ng-template #next><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.next\\\">&raquo;</span></ng-template>\\n    <ng-template #last><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.last\\\">&raquo;&raquo;</span></ng-template>\\n    <ng-template #ellipsis>...</ng-template>\\n    <ng-template #defaultNumber let-page let-currentPage=\\\"currentPage\\\">\\n      {{ page }}\\n      <span *ngIf=\\\"page === currentPage\\\" class=\\\"sr-only\\\">(current)</span>\\n    </ng-template>\\n    <ul [class]=\\\"'pagination' + (size ? ' pagination-' + size : '')\\\">\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"previousDisabled()\\\">\\n        <a aria-label=\\\"First\\\" i18n-aria-label=\\\"@@ngb.pagination.first-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(1); $event.preventDefault()\\\" [attr.tabindex]=\\\"previousDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"previousDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplFirst?.templateRef || first\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: previousDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"previousDisabled()\\\">\\n        <a aria-label=\\\"Previous\\\" i18n-aria-label=\\\"@@ngb.pagination.previous-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(page-1); $event.preventDefault()\\\" [attr.tabindex]=\\\"previousDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"previousDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplPrevious?.templateRef || previous\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: previousDisabled()}\\\"></ng-template>\\n        </a>\\n      </li>\\n      <li *ngFor=\\\"let pageNumber of pages\\\" class=\\\"page-item\\\" [class.active]=\\\"pageNumber === page\\\"\\n        [class.disabled]=\\\"isEllipsis(pageNumber) || disabled\\\" [attr.aria-current]=\\\"(pageNumber === page ? 'page' : null)\\\">\\n        <a *ngIf=\\\"isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" tabindex=\\\"-1\\\" aria-disabled=\\\"true\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplEllipsis?.templateRef || ellipsis\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: true, currentPage: page}\\\"></ng-template>\\n        </a>\\n        <a *ngIf=\\\"!isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" href (click)=\\\"selectPage(pageNumber); $event.preventDefault()\\\"\\n          [attr.tabindex]=\\\"disabled ? '-1' : null\\\" [attr.aria-disabled]=\\\"disabled ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplNumber?.templateRef || defaultNumber\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"nextDisabled()\\\">\\n        <a aria-label=\\\"Next\\\" i18n-aria-label=\\\"@@ngb.pagination.next-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(page+1); $event.preventDefault()\\\" [attr.tabindex]=\\\"nextDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"nextDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplNext?.templateRef || next\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: nextDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"nextDisabled()\\\">\\n        <a aria-label=\\\"Last\\\" i18n-aria-label=\\\"@@ngb.pagination.last-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(pageCount); $event.preventDefault()\\\" [attr.tabindex]=\\\"nextDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"nextDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplLast?.templateRef || last\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: nextDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ul>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbPaginationConfig\n    }];\n  }, {\n    page: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    ellipses: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    tplEllipsis: [{\n      type: ContentChild,\n      args: [NgbPaginationEllipsis, {\n        static: false\n      }]\n    }],\n    tplFirst: [{\n      type: ContentChild,\n      args: [NgbPaginationFirst, {\n        static: false\n      }]\n    }],\n    tplLast: [{\n      type: ContentChild,\n      args: [NgbPaginationLast, {\n        static: false\n      }]\n    }],\n    tplNext: [{\n      type: ContentChild,\n      args: [NgbPaginationNext, {\n        static: false\n      }]\n    }],\n    tplNumber: [{\n      type: ContentChild,\n      args: [NgbPaginationNumber, {\n        static: false\n      }]\n    }],\n    tplPrevious: [{\n      type: ContentChild,\n      args: [NgbPaginationPrevious, {\n        static: false\n      }]\n    }],\n    collectionSize: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPaginationModule, {\n    declarations: function declarations() {\n      return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationModule, [{\n    type: NgModule,\n    args: [{\n      declarations: DIRECTIVES,\n      exports: DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPopoverConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPopoverWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-popover-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: \"\\n    <div class=\\\"arrow\\\"></div>\\n    <h3 class=\\\"popover-header\\\" *ngIf=\\\"title != null\\\">\\n      <ng-template #simpleTitle>{{title}}</ng-template>\\n      <ng-template [ngTemplateOutlet]=\\\"isTitleTemplate() ? title : simpleTitle\\\" [ngTemplateOutletContext]=\\\"context\\\"></ng-template>\\n    </h3>\\n    <div class=\\\"popover-body\\\"><ng-content></ng-content></div>\",\n      styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{top:auto;bottom:.7em}\"]\n    }]\n  }], null, {\n    title: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPopover, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbPopover]',\n      exportAs: 'ngbPopover'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: NgbPopoverConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disablePopover: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    ngbPopover: [{\n      type: Input\n    }],\n    popoverTitle: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPopoverModule, {\n    declarations: function declarations() {\n      return [NgbPopover, NgbPopoverWindow];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbPopover];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPopoverModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbPopover, NgbPopoverWindow],\n      exports: [NgbPopover],\n      imports: [CommonModule],\n      entryComponents: [NgbPopoverWindow]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbProgressbarConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbProgressbar, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-progressbar',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div class=\\\"progress\\\" [style.height]=\\\"height\\\">\\n      <div class=\\\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\\\"\\n      role=\\\"progressbar\\\" [style.width.%]=\\\"getPercentValue()\\\"\\n      [attr.aria-valuenow]=\\\"getValue()\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"max\\\">\\n        <span *ngIf=\\\"showValue\\\" i18n=\\\"@@ngb.progressbar.value\\\">{{getPercentValue()}}%</span><ng-content></ng-content>\\n      </div>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbProgressbarConfig\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    animated: [{\n      type: Input\n    }],\n    striped: [{\n      type: Input\n    }],\n    textType: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbProgressbarModule, {\n    declarations: function declarations() {\n      return [NgbProgressbar];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbProgressbar];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbProgressbarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbProgressbar],\n      exports: [NgbProgressbar],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRatingConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRating, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-rating',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'd-inline-flex',\n        '[tabindex]': 'disabled ? -1 : 0',\n        'role': 'slider',\n        'aria-valuemin': '0',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'nextRate',\n        '[attr.aria-valuetext]': 'ariaValueText()',\n        '[attr.aria-disabled]': 'readonly ? true : null',\n        '(blur)': 'handleBlur()',\n        '(keydown)': 'handleKeyDown($event)',\n        '(mouseleave)': 'reset()'\n      },\n      template: \"\\n    <ng-template #t let-fill=\\\"fill\\\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"contexts\\\" let-index=\\\"index\\\">\\n      <span class=\\\"sr-only\\\">({{ index < nextRate ? '*' : ' ' }})</span>\\n      <span (mouseenter)=\\\"enter(index + 1)\\\" (click)=\\\"handleClick(index + 1)\\\" [style.cursor]=\\\"readonly || disabled ? 'default' : 'pointer'\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"starTemplate || starTemplateFromContent || t\\\" [ngTemplateOutletContext]=\\\"contexts[index]\\\">\\n        </ng-template>\\n      </span>\\n    </ng-template>\\n  \",\n      providers: [NGB_RATING_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: NgbRatingConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    hover: [{\n      type: Output\n    }],\n    leave: [{\n      type: Output\n    }],\n    rateChange: [{\n      type: Output\n    }],\n    max: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    rate: [{\n      type: Input\n    }],\n    resettable: [{\n      type: Input\n    }],\n    starTemplate: [{\n      type: Input\n    }],\n    starTemplateFromContent: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbRatingModule, {\n    declarations: function declarations() {\n      return [NgbRating];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbRating];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRatingModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbRating],\n      exports: [NgbRating],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabsetConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbTabTitle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbTabContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTab, [{\n    type: Directive,\n    args: [{\n      selector: 'ngb-tab'\n    }]\n  }], function () {\n    return [];\n  }, {\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    titleTpls: [{\n      type: ContentChildren,\n      args: [NgbTabTitle, {\n        descendants: false\n      }]\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbTabContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabset, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-tabset',\n      exportAs: 'ngbTabset',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ul [class]=\\\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\\\" role=\\\"tablist\\\">\\n      <li class=\\\"nav-item\\\" *ngFor=\\\"let tab of tabs\\\">\\n        <a [id]=\\\"tab.id\\\" class=\\\"nav-link\\\" [class.active]=\\\"tab.id === activeId\\\" [class.disabled]=\\\"tab.disabled\\\"\\n          href (click)=\\\"select(tab.id); $event.preventDefault()\\\" role=\\\"tab\\\" [attr.tabindex]=\\\"(tab.disabled ? '-1': undefined)\\\"\\n          [attr.aria-controls]=\\\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\\\"\\n          [attr.aria-selected]=\\\"tab.id === activeId\\\" [attr.aria-disabled]=\\\"tab.disabled\\\">\\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\\\"tab.titleTpl?.templateRef\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n      <ng-template ngFor let-tab [ngForOf]=\\\"tabs\\\">\\n        <div\\n          class=\\\"tab-pane {{tab.id === activeId ? 'active' : null}}\\\"\\n          *ngIf=\\\"!destroyOnHide || tab.id === activeId\\\"\\n          role=\\\"tabpanel\\\"\\n          [attr.aria-labelledby]=\\\"tab.id\\\" id=\\\"{{tab.id}}-panel\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tab.contentTpl?.templateRef\\\"></ng-template>\\n        </div>\\n      </ng-template>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbTabsetConfig\n    }];\n  }, {\n    destroyOnHide: [{\n      type: Input\n    }],\n    tabChange: [{\n      type: Output\n    }],\n    type: [{\n      type: Input\n    }],\n    justify: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    tabs: [{\n      type: ContentChildren,\n      args: [NgbTab]\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTabsetModule, {\n    declarations: function declarations() {\n      return [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabsetModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_TABSET_DIRECTIVES,\n      exports: NGB_TABSET_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimeAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\nvar ɵNgbTimeStructAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbTimeStructAdapter);\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimeStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_TIMEPICKER_I18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepicker, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-timepicker',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <fieldset [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n      <div class=\\\"ngb-tp\\\">\\n        <div class=\\\"ngb-tp-input-container ngb-tp-hour\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeHour(hourStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-hours\\\">Increment hours</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\"\\n            [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"HH\\\" i18n-placeholder=\\\"@@ngb.timepicker.HH\\\"\\n            [value]=\\\"formatHour(model?.hour)\\\" (change)=\\\"updateHour($event.target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Hours\\\" i18n-aria-label=\\\"@@ngb.timepicker.hours\\\"\\n            (input)=\\\"formatInput($event.target)\\\"\\n            (keydown.ArrowUp)=\\\"changeHour(hourStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeHour(-hourStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeHour(-hourStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.decrement-hours\\\">Decrement hours</span>\\n          </button>\\n        </div>\\n        <div class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div class=\\\"ngb-tp-input-container ngb-tp-minute\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeMinute(minuteStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-minutes\\\">Increment minutes</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\" [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"MM\\\" i18n-placeholder=\\\"@@ngb.timepicker.MM\\\"\\n            [value]=\\\"formatMinSec(model?.minute)\\\" (change)=\\\"updateMinute($event.target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Minutes\\\" i18n-aria-label=\\\"@@ngb.timepicker.minutes\\\"\\n            (input)=\\\"formatInput($event.target)\\\"\\n            (keydown.ArrowUp)=\\\"changeMinute(minuteStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeMinute(-minuteStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeMinute(-minuteStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"  [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\"  i18n=\\\"@@ngb.timepicker.decrement-minutes\\\">Decrement minutes</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-input-container ngb-tp-second\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeSecond(secondStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-seconds\\\">Increment seconds</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\" [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"SS\\\" i18n-placeholder=\\\"@@ngb.timepicker.SS\\\"\\n            [value]=\\\"formatMinSec(model?.second)\\\" (change)=\\\"updateSecond($event.target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Seconds\\\" i18n-aria-label=\\\"@@ngb.timepicker.seconds\\\"\\n            (input)=\\\"formatInput($event.target)\\\"\\n            (keydown.ArrowUp)=\\\"changeSecond(secondStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeSecond(-secondStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeSecond(-secondStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"  [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.decrement-seconds\\\">Decrement seconds</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-spacer\\\"></div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-meridian\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\"\\n                  (click)=\\\"toggleMeridian()\\\">\\n            <ng-container *ngIf=\\\"model?.hour >= 12; else am\\\" i18n=\\\"@@ngb.timepicker.PM\\\">{{ i18n.getAfternoonPeriod() }}</ng-container>\\n            <ng-template #am i18n=\\\"@@ngb.timepicker.AM\\\">{{ i18n.getMorningPeriod() }}</ng-template>\\n          </button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  \",\n      providers: [NGB_TIMEPICKER_VALUE_ACCESSOR],\n      styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbTimepickerConfig\n    }, {\n      type: NgbTimeAdapter\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbTimepickerI18n\n    }];\n  }, {\n    meridian: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    seconds: [{\n      type: Input\n    }],\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondStep: [{\n      type: Input\n    }],\n    readonlyInputs: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTimepickerModule, {\n    declarations: function declarations() {\n      return [NgbTimepicker];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbTimepicker];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTimepicker],\n      exports: [NgbTimepicker],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbToastConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbToastHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbToastHeader]'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbToast, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-toast',\n      exportAs: 'ngbToast',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        '[attr.aria-live]': 'ariaLive',\n        'aria-atomic': 'true',\n        '[class.toast]': 'true',\n        '[class.show]': 'true'\n      },\n      template: \"\\n    <ng-template #headerTpl>\\n      <strong class=\\\"mr-auto\\\">{{header}}</strong>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"contentHeaderTpl || header\\\">\\n      <div class=\\\"toast-header\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"contentHeaderTpl || headerTpl\\\"></ng-template>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" i18n-aria-label=\\\"@@ngb.toast.close-aria\\\" (click)=\\\"hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </ng-template>\\n    <div class=\\\"toast-body\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n      styles: [\".ngb-toasts{position:fixed;top:0;right:0;margin:.5em;z-index:1200}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['aria-live']\n      }]\n    }, {\n      type: NgbToastConfig\n    }];\n  }, {\n    contentHeaderTpl: [{\n      type: ContentChild,\n      args: [NgbToastHeader, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    hideOutput: [{\n      type: Output,\n      args: ['hide']\n    }],\n    delay: [{\n      type: Input\n    }],\n    autohide: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbToastModule, {\n    declarations: function declarations() {\n      return [NgbToast, NgbToastHeader];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbToast, NgbToastHeader];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbToastModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbToast, NgbToastHeader],\n      imports: [CommonModule],\n      exports: [NgbToast, NgbToastHeader]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTooltipConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTooltipWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-tooltip-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: \"<div class=\\\"arrow\\\"></div><div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\",\n      styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"]\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbTooltip]',\n      exportAs: 'ngbTooltip'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: NgbTooltipConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disableTooltip: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    ngbTooltip: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTooltipModule, {\n    declarations: [NgbTooltip, NgbTooltipWindow],\n    exports: [NgbTooltip]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTooltip, NgbTooltipWindow],\n      exports: [NgbTooltip],\n      entryComponents: [NgbTooltipWindow]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbHighlight, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-highlight',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\">\" + \"<span *ngIf=\\\"isOdd; else even\\\" [class]=\\\"highlightClass\\\">{{part}}</span><ng-template #even>{{part}}</ng-template>\" + \"</ng-template>\",\n      styles: [\".ngb-highlight{font-weight:700}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    highlightClass: [{\n      type: Input\n    }],\n    result: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTypeaheadWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-typeahead-window',\n      exportAs: 'ngbTypeaheadWindow',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '(mousedown)': '$event.preventDefault()',\n        'class': 'dropdown-menu show',\n        'role': 'listbox',\n        '[id]': 'id'\n      },\n      template: \"\\n    <ng-template #rt let-result=\\\"result\\\" let-term=\\\"term\\\" let-formatter=\\\"formatter\\\">\\n      <ngb-highlight [result]=\\\"formatter(result)\\\" [term]=\\\"term\\\"></ngb-highlight>\\n    </ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"results\\\" let-result let-idx=\\\"index\\\">\\n      <button type=\\\"button\\\" class=\\\"dropdown-item\\\" role=\\\"option\\\"\\n        [id]=\\\"id + '-' + idx\\\"\\n        [class.active]=\\\"idx === activeIdx\\\"\\n        (mouseenter)=\\\"markActive(idx)\\\"\\n        (click)=\\\"select(result)\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"resultTemplate || rt\\\"\\n          [ngTemplateOutletContext]=\\\"{result: result, term: term, formatter: formatter}\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    focusFirst: [{\n      type: Input\n    }],\n    formatter: [{\n      type: Input\n    }],\n    selectEvent: [{\n      type: Output,\n      args: ['select']\n    }],\n    activeChangeEvent: [{\n      type: Output,\n      args: ['activeChange']\n    }],\n    id: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Live, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ARIA_LIVE_DELAY]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTypeaheadConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTypeahead, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbTypeahead]',\n      exportAs: 'ngbTypeahead',\n      host: {\n        '(blur)': 'handleBlur()',\n        '[class.open]': 'isPopupOpen()',\n        '(keydown)': 'handleKeyDown($event)',\n        '[autocomplete]': 'autocomplete',\n        'autocapitalize': 'off',\n        'autocorrect': 'off',\n        'role': 'combobox',\n        'aria-multiline': 'false',\n        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n        '[attr.aria-activedescendant]': 'activeDescendant',\n        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n        '[attr.aria-expanded]': 'isPopupOpen()'\n      },\n      providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: NgbTypeaheadConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: Live\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    autocomplete: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    selectItem: [{\n      type: Output\n    }],\n    container: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    showHint: [{\n      type: Input\n    }],\n    inputFormatter: [{\n      type: Input\n    }],\n    ngbTypeahead: [{\n      type: Input\n    }],\n    resultFormatter: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTypeaheadModule, {\n    declarations: function declarations() {\n      return [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbTypeahead, NgbHighlight];\n    }\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTypeaheadModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n      exports: [NgbTypeahead, NgbHighlight],\n      imports: [CommonModule],\n      entryComponents: [NgbTypeaheadWindow]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModule, {\n    imports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule, NgbTabsetModule],\n    exports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule, NgbTabsetModule]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_MODULES,\n      exports: NGB_MODULES\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbActiveModal, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbButtonLabel, NgbButtonsModule, NgbCalendar, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCheckBox, NgbCollapse, NgbCollapseModule, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavModule, NgbNavOutlet, NgbNavbar, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRadio, NgbRadioGroup, NgbRating, NgbRatingConfig, NgbRatingModule, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTab, NgbTabContent, NgbTabTitle, NgbTabset, NgbTabsetConfig, NgbTabsetModule, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, NGB_CAROUSEL_DIRECTIVES as ɵa, NGB_DATEPICKER_VALUE_ACCESSOR as ɵb, Live as ɵba, NgbCalendarHijri as ɵbb, ContentRef as ɵbc, NGB_DATEPICKER_CALENDAR_FACTORY as ɵc, NgbDatepickerDayView as ɵd, NgbDatepickerNavigation as ɵe, NgbDatepickerNavigationSelect as ɵf, NGB_DATEPICKER_18N_FACTORY as ɵg, NgbDatepickerI18nDefault as ɵh, NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵi, NgbDateStructAdapter as ɵj, NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵk, NgbDateISOParserFormatter as ɵl, NgbPopoverWindow as ɵm, NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵn, NgbTimeStructAdapter as ɵo, NGB_TIMEPICKER_I18N_FACTORY as ɵp, NgbTimepickerI18nDefault as ɵq, NgbTooltipWindow as ɵr, NgbTypeaheadWindow as ɵs, NgbDatepickerService as ɵt, NgbModalBackdrop as ɵu, NgbModalWindow as ɵv, NgbModalStack as ɵw, ScrollBar as ɵx, ARIA_LIVE_DELAY as ɵy, ARIA_LIVE_DELAY_FACTORY as ɵz };","map":{"version":3,"sources":["@ng-bootstrap/ng-bootstrap/util/util.ts","@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","@ng-bootstrap/ng-bootstrap/alert/alert.ts","@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","@ng-bootstrap/ng-bootstrap/buttons/label.ts","@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","@ng-bootstrap/ng-bootstrap/buttons/radio.ts","@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","@ng-bootstrap/ng-bootstrap/util/key.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keyboard-service.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","@ng-bootstrap/ng-bootstrap/util/autoclose.ts","@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","@ng-bootstrap/ng-bootstrap/util/positioning.ts","@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input-config.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","@ng-bootstrap/ng-bootstrap/util/popup.ts","@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","@ng-bootstrap/ng-bootstrap/modal/modal.ts","@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","@ng-bootstrap/ng-bootstrap/nav/nav-config.ts","@ng-bootstrap/ng-bootstrap/nav/nav.ts","@ng-bootstrap/ng-bootstrap/nav/nav-outlet.ts","@ng-bootstrap/ng-bootstrap/nav/nav.module.ts","@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","@ng-bootstrap/ng-bootstrap/util/triggers.ts","@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","@ng-bootstrap/ng-bootstrap/popover/popover.ts","@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","@ng-bootstrap/ng-bootstrap/rating/rating.ts","@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","@ng-bootstrap/ng-bootstrap/timepicker/timepicker-i18n.ts","@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","@ng-bootstrap/ng-bootstrap/toast/toast-config.ts","@ng-bootstrap/ng-bootstrap/toast/toast.ts","@ng-bootstrap/ng-bootstrap/toast/toast.module.ts","@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","@ng-bootstrap/ng-bootstrap/index.ts","@ng-bootstrap/ng-bootstrap/ng-bootstrap.ts"],"names":["nextId","NGB_DATEPICKER_VALUE_ACCESSOR","mod","GREGORIAN_EPOCH","isGregorianLeapYear","fromGregorian","toGregorian"],"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AAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACE,cAAc,EAAE,cAAc,EAAE,cAAc,EAA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","sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function(s: string) {\n    let el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nexport function closest(element: HTMLElement, selector): HTMLElement {\n  if (!selector) {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * An optional class applied to the accordion card element that wraps both panel title and content.\n   *\n   * @since 5.3.0\n   */\n  @Input() cardClass: string;\n\n  titleTpl: NgbPanelTitle | null;\n  headerTpl: NgbPanelHeader | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel that is being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'card ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | readonly string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(public accordion: NgbAccordion, @Optional() @Host() public panel: NgbPanel) {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (×) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {BehaviorSubject, combineLatest, NEVER, Subject, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n    '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id, NgbSlideEventSource.INDICATOR)\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev(NgbSlideEventSource.ARROW_LEFT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next(NgbSlideEventSource.ARROW_RIGHT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  public NgbSlideEventSource = NgbSlideEventSource;\n\n  private _destroy$ = new Subject<void>();\n  private _interval$ = new BehaviorSubject(0);\n  private _mouseHover$ = new BehaviorSubject(false);\n  private _pauseOnHover$ = new BehaviorSubject(false);\n  private _pause$ = new BehaviorSubject(false);\n  private _wrap$ = new BehaviorSubject(false);\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input()\n  set interval(value: number) {\n    this._interval$.next(value);\n  }\n\n  get interval() { return this._interval$.value; }\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input()\n  set wrap(value: boolean) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() { return this._wrap$.value; }\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input()\n  set pauseOnHover(value: boolean) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() { return this._pauseOnHover$.value; }\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  @HostListener('mouseenter')\n  mouseEnter() {\n    this._mouseHover$.next(true);\n  }\n\n  @HostListener('mouseleave')\n  mouseLeave() {\n    this._mouseHover$.next(false);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest([\n                                this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\n                                this._wrap$, this.slides.changes.pipe(startWith(<{}>null))\n                              ])\n                                  .pipe(\n                                      map(([currentSlideId, wrap]) => {\n                                        const slideArr = this.slides.toArray();\n                                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                                      }),\n                                      distinctUntilChanged());\n        combineLatest([this._pause$, this._pauseOnHover$, this._mouseHover$, this._interval$, hasNextSlide$])\n            .pipe(\n                map(([pause, pauseOnHover, mouseHover, interval, hasNextSlide]) =>\n                        ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval)),\n\n                distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER),\n                takeUntil(this._destroy$))\n            .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string, source?: NgbSlideEventSource) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n  }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n  }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._pause$.next(true); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._pause$.next(false); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit(\n          {prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source});\n      this.activeId = selectedSlide.id;\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n\n  /**\n   * Whether the pause() method was called (and no cycle() call was done afterwards).\n   *\n   * @since 5.1.0\n   */\n  paused: boolean;\n\n  /**\n   * Source triggering the slide change event.\n   *\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n   *\n   * @since 5.1.0\n   */\n  source?: NgbSlideEventSource;\n}\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport enum NgbSlideEventSource {\n  TIMER = 'timer',\n  ARROW_LEFT = 'arrowLeft',\n  ARROW_RIGHT = 'arrowRight',\n  INDICATOR = 'indicator'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventDirection, NgbSlideEventSource} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other: NgbDateStruct): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev: NgbDate, next: NgbDate) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n\n  const length = end - start + 1;\n  const numbers = Array(length);\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {day: 1});\n  return maxDate && nextDate.after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {day: 1});\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {day: 1});\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isChangedMonth,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport interface DatepickerServiceInputs extends\n    Partial<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' |\n                     'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>> {}\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _VALIDATORS:\n      {[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel>} = {\n        dayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\n          if (this._state.dayTemplateData !== dayTemplateData) {\n            return {dayTemplateData};\n          }\n        },\n        displayMonths: (displayMonths: number) => {\n          displayMonths = toInteger(displayMonths);\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            return {displayMonths};\n          }\n        },\n        disabled: (disabled: boolean) => {\n          if (this._state.disabled !== disabled) {\n            return {disabled};\n          }\n        },\n        firstDayOfWeek: (firstDayOfWeek: number) => {\n          firstDayOfWeek = toInteger(firstDayOfWeek);\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            return {firstDayOfWeek};\n          }\n        },\n        focusVisible: (focusVisible: boolean) => {\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            return {focusVisible};\n          }\n        },\n        markDisabled: (markDisabled: NgbMarkDisabled) => {\n          if (this._state.markDisabled !== markDisabled) {\n            return {markDisabled};\n          }\n        },\n        maxDate: (date: NgbDate) => {\n          const maxDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.maxDate, maxDate)) {\n            return {maxDate};\n          }\n        },\n        minDate: (date: NgbDate) => {\n          const minDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.minDate, minDate)) {\n            return {minDate};\n          }\n        },\n        navigation: (navigation: 'select' | 'arrows' | 'none') => {\n          if (this._state.navigation !== navigation) {\n            return {navigation};\n          }\n        },\n        outsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\n          if (this._state.outsideDays !== outsideDays) {\n            return {outsideDays};\n          }\n        }\n      };\n\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _dateSelect$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get dateSelect$(): Observable<NgbDate> { return this._dateSelect$.pipe(filter(date => date !== null)); }\n\n  set(options: DatepickerServiceInputs) {\n    let patch = Object.keys(options)\n                    .map(key => this._VALIDATORS[key](options[key]))\n                    .reduce((obj, part) => ({...obj, ...part}), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct: NgbDateStruct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {DatepickerServiceInputs, NgbDatepickerService} from './datepicker-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nexport const NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number};\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * An interface that represents the readonly public state of the datepicker.\n *\n * Accessible via the `datepicker.state` getter\n *\n * @since 5.2.0\n */\nexport interface NgbDatepickerState {\n  /**\n   * The earliest date that can be displayed or selected\n   */\n  readonly minDate: NgbDate;\n\n  /**\n   * The latest date that can be displayed or selected\n   */\n  readonly maxDate: NgbDate;\n\n  /**\n   * The first visible date of currently displayed months\n   */\n  readonly firstDate: NgbDate;\n\n  /**\n   * The last visible date of currently displayed months\n   */\n  readonly lastDate: NgbDate;\n\n  /**\n   * The date currently focused by the datepicker\n   */\n  readonly focusedDate: NgbDate;\n\n  /**\n   * First dates of months currently displayed by the datepicker\n   *\n   * @since 5.3.0\n   */\n  readonly months: NgbDate[];\n}\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n@Directive({selector: 'ng-template[ngbDatepickerContent]'})\nexport class NgbDatepickerContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\n                 let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  @ViewChild('defaultDayTemplate', {static: true}) private _defaultDayTemplate: TemplateRef<DayTemplateContext>;\n  @ViewChild('content', {static: true}) private _contentEl: ElementRef<HTMLElement>;\n  @ContentChild(NgbDatepickerContent, {static: true}) contentTemplate: NgbDatepickerContent;\n\n  private _controlValue: NgbDate;\n  private _destroyed$ = new Subject<void>();\n  private _publicState: NgbDatepickerState = <any>{};\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 5.2.0\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @deprecated 6.0.0 Please use 'dateSelect' output instead due to collision with native\n   * 'select' event.\n   */\n  @Output() select = this.dateSelect;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _service: NgbDatepickerService, private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig, cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      // update public state\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n  get state(): NgbDatepickerState { return this._publicState; }\n\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n  get calendar(): NgbCalendar { return this._calendar; }\n\n  /**\n   *  Focuses on given date.\n   */\n  focusDate(date: NgbDateStruct): void { this._service.focus(NgbDate.from(date)); }\n\n  /**\n   *  Selects focused date.\n   */\n  focusSelect(): void { this._service.focusSelect(); }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusout');\n      const {nativeElement} = this._elementRef;\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                        nativeElement.contains(target as Node) && nativeElement.contains(relatedTarget as Node))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.set({focusVisible: type === 'focusin'})));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs: DatepickerServiceInputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(name => inputs[name] = this[name]);\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const inputs: DatepickerServiceInputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(name => name in changes)\n        .forEach(name => inputs[name] = this[name]);\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {currentValue, previousValue} = changes.startDate;\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(disabled: boolean) { this._service.set({disabled}); }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {Key} from '../util/key';\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event: KeyboardEvent, datepicker: NgbDatepicker) {\n    const {state, calendar} = datepicker;\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n@Component({\n  selector: 'ngb-datepicker-month',\n  host: {'role': 'grid', '(keydown)': 'onKeyDown($event)'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month.scss'],\n  template: `\n    <div *ngIf=\"datepicker.showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonth {\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n  @Input()\n  set month(month: NgbDateStruct) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  viewModel: MonthViewModel;\n\n  constructor(\n      public i18n: NgbDatepickerI18n, public datepicker: NgbDatepicker,\n      private _keyboardService: NgbDatepickerKeyboardService, private _service: NgbDatepickerService) {}\n\n  onKeyDown(event: KeyboardEvent) { this._keyboardService.processKey(event, this.datepicker); }\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  onClickPrev(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\nimport {closest} from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n    !selector || closest(element, selector) != null;\n\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n      (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: () => void, closed$: Observable<any>,\n    insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent) => {\n        const element = event.target as HTMLElement;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      const mouseDowns$ =\n          fromEvent<MouseEvent>(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0),\n                                       takeUntil(closed$)) as Observable<MouseEvent>;\n\n\n      race<Event>([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n    }));\n  }\n}\n","import {NgZone} from '@angular/core';\n\nimport {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from './key';\n\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap =\n    (zone: NgZone, element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n      zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ =\n            fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n        // 'tab' / 'shift+tab' stream\n        fromEvent<KeyboardEvent>(element, 'keydown')\n            .pipe(\n                takeUntil(stopFocusTrap$),\n                // tslint:disable:deprecation\n                filter(e => e.which === Key.Tab),\n                // tslint:enable:deprecation\n                withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n              const[first, last] = getFocusableBoundaryElements(element);\n\n              if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n              }\n\n              if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n              }\n            });\n\n        // inside click\n        if (refocusOnClick) {\n          fromEvent(element, 'click')\n              .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n              .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n      });\n    };\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nexport const positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n\n  let testPlacement: Placement;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  container: null | 'body';\n  positionTarget: string | HTMLElement;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  restoreFocus: true | HTMLElement | string = true;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbInputDatepickerConfig} from './datepicker-input-config';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {isString} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(focus)': 'onFocus()',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [\n    NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR,\n    {provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig}\n  ],\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _elWithFocus = null;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\n   *\n   * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\n   * we'll fallback to focus document body.\n   *\n   * @since 5.2.0\n   */\n  @Input() restoreFocus: true | string | HTMLElement;\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\n   *\n   * By default the input is used as a target.\n   *\n   * @since 4.2.0\n   */\n  @Input() positionTarget: string | HTMLElement;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired after closing datepicker window.\n   *\n   * @since 4.2.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>,\n      @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      config: NgbInputDatepickerConfig) {\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const {value} = c;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {minDate: {minDate: this.minDate, actual: value}}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {maxDate: {maxDate: this.maxDate, actual: value}}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this.closed.emit();\n      this._changeDetector.markForCheck();\n\n      // restore focus\n      let elementToFocus = this._elWithFocus;\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      }\n\n      // in IE document.activeElement can contain an object without 'focus()' sometimes\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this._dateAdapter.toModel(changes.minDate.currentValue);\n        }\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this._dateAdapter.toModel(changes.maxDate.currentValue);\n        }\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  private _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement: HTMLElement;\n    if (isString(this.positionTarget)) {\n      hostElement = this._document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  AfterViewChecked,\n  ViewChild,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  @ViewChild('month', {static: true, read: ElementRef}) monthSelect: ElementRef;\n  @ViewChild('year', {static: true, read: ElementRef}) yearSelect: ElementRef;\n\n  private _month = -1;\n  private _year = -1;\n\n  constructor(public i18n: NgbDatepickerI18n, private _renderer: Renderer2) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP =\n    ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker, NgbDatepickerContent} from './datepicker';\nimport {NgbDatepickerMonth} from './datepicker-month';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerContent, NgbDatepickerNavigateEvent, NgbDatepickerState} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonth} from './datepicker-month';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbInputDatepickerConfig} from './datepicker-input-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n    NgbDatepickerDayView, NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\n\n@Directive({selector: '.navbar'})\nexport class NgbNavbar {\n}\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown) {}\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  getNativeElement() { return this._elementRef.nativeElement; }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements AfterContentInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement;\n\n  @ContentChild(NgbDropdownMenu, {static: false}) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownMenu, {read: ElementRef, static: false}) private _menuElement: ElementRef;\n  @ContentChild(NgbDropdownAnchor, {static: false}) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n  * A selector specifying the element the dropdown should be appended to.\n  * Currently only supports \"body\".\n  *\n  * @since 4.1.0\n  */\n  @Input() container: null | 'body';\n\n  /**\n   * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\n   * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\n   * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\n   * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\n   *\n   * @since 4.2.0\n   */\n  @Input() display: 'dynamic' | 'static';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\n      @Optional() ngbNavbar: NgbNavbar) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    const anchor = this._anchor;\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$,\n        this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [],\n        '.dropdown-item,.dropdown-divider');\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let isEventFromItems = false;\n    let itemElement: HTMLElement = null;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target as HTMLElement)) {\n          isEventFromItems = true;\n          itemElement = item;\n        }\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    // closing on Enter / Space\n    if (key === Key.Space || key === Key.Enter) {\n      if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n      return;\n    }\n\n    // opening / navigating\n    if (isEventFromToggle || isEventFromItems) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.getNativeElement().contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    const menu = this._menu;\n    if (menu == null) {\n      return [];\n    }\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    const menu = this._menu;\n    if (this.isOpen() && menu) {\n      this._applyPlacementClasses(\n          this.display === 'dynamic' ?\n              positionElements(\n                  this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement,\n                  this.container === 'body') :\n              this._getFirstPlacement(this.placement));\n    }\n  }\n\n  private _getFirstPlacement(placement: PlacementArray): Placement {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    const menuElement = this._menuElement;\n    if (menuElement) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = menuElement.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement) {\n    const menu = this._menu;\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      menu.placement = this.display === 'static' ? null : placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\n\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES =\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string | HTMLElement;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Scrollable modal content (false by default).\n   *\n   * @since 5.0.0\n   */\n  scrollable?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg' | 'xl' | string;\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements Required<NgbModalOptions> {\n  ariaLabelledBy: string;\n  backdrop: boolean | 'static' = true;\n  beforeDismiss: () => boolean | Promise<boolean>;\n  centered: boolean;\n  container: string;\n  injector: Injector;\n  keyboard = true;\n  scrollable: boolean;\n  size: 'sm' | 'lg' | 'xl' | string;\n  windowClass: string;\n  backdropClass: string;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ApplicationRef\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver,\n      private _applicationRef: ApplicationRef) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), this._viewContainerRef.length,\n          this._injector, this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n        this._contentRef.viewRef.destroy();\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter {\n    const width = this._getWidth();\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\n  }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(scrollbarWidth: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPaddingStyle = body.style.paddingRight;\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n    return () => body.style['padding-right'] = userSetPaddingStyle;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(scrollbarWidth: number): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n    const uncertainty = 0.1 * scrollbarWidth;\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  encapsulation: ViewEncapsulation.None,\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {filter, switchMap, take, takeUntil, tap} from 'rxjs/operators';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.scss']\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @ViewChild('dialog', {static: true}) private _dialogEl: ElementRef<HTMLElement>;\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() scrollable: string;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(\n      @Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>, private _zone: NgZone) {}\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    const {nativeElement} = this._elRef;\n    this._zone.runOutsideAngular(() => {\n\n      fromEvent<KeyboardEvent>(nativeElement, 'keydown')\n          .pipe(\n              takeUntil(this._closed$),\n              // tslint:disable-next-line:deprecation\n              filter(e => e.which === Key.Escape && this.keyboard))\n          .subscribe(event => requestAnimationFrame(() => {\n                       if (!event.defaultPrevented) {\n                         this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                       }\n                     }));\n\n      // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n      let preventClose = false;\n      fromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\n          .pipe(\n              takeUntil(this._closed$), tap(() => preventClose = false),\n              switchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\n              filter(({target}) => nativeElement === target))\n          .subscribe(() => { preventClose = true; });\n\n      // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n      fromEvent<MouseEvent>(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({target}) => {\n        if (this.backdrop === true && nativeElement === target && !preventClose) {\n          this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n        }\n        preventClose = false;\n      });\n    });\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n\n    this._closed$.next();\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  RendererFactory2,\n  TemplateRef\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalOptions} from './modal-config';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string> = new Map();\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes =\n      ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2, private _ngZone: NgZone) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n                                                                   this._document.querySelector(options.container) :\n                                                                   this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef =\n        this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, activeModal: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, context: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n    if (options.scrollable) {\n      (componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\n    }\n    this._applicationRef.attachView(componentRef.hostView);\n    // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbNavConfig {\n  destroyOnHide = true;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  roles: 'tablist' | false = 'tablist';\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isDefined} from '../util/util';\nimport {NgbNavConfig} from './nav-config';\n\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n\n/**\n * Context passed to the nav content template.\n *\n * See [this demo](#/components/nav/examples#keep-content) as the example.\n *\n * @since 5.2.0\n */\nexport interface NgbNavContentContext {\n  /**\n   * If `true`, current nav content is visible and active\n   */\n  $implicit: boolean;\n}\n\n\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n@Directive({selector: 'ng-template[ngbNavContent]'})\nexport class NgbNavContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n@Directive({selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: {'[class.nav-item]': 'true'}})\nexport class NgbNavItem implements AfterContentChecked, OnInit {\n  private _nav: NgbNav;\n\n  /**\n   * If `true`, non-active current nav item content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * If `true`, the current nav item is disabled and can't be toggled by user.\n   *\n   * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n   */\n  @Input() disabled = false;\n\n  /**\n   * The id used for the DOM elements.\n   * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\n   *\n   * Autogenerated as `ngb-nav-XXX` if not provided.\n   */\n  @Input() domId: string;\n\n  /**\n   * The id used as a model for active nav.\n   * It can be anything, but must be unique inside one `ngbNav`.\n   *\n   * The only limitation is that it is not possible to have the `''` (empty string) as id,\n   * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\n   */\n  @Input('ngbNavItem') _id: any;\n\n  contentTpl: NgbNavContent | null;\n\n  @ContentChildren(NgbNavContent, {descendants: false}) contentTpls: QueryList<NgbNavContent>;\n\n  constructor(@Inject(forwardRef(() => NgbNav)) nav, public elementRef: ElementRef<any>) {\n    // TODO: cf https://github.com/angular/angular/issues/30106\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() { return this._nav.activeId === this.id; }\n\n  get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n\n  get panelDomId() { return `${this.domId}-panel`; }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n}\n\n\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: '[ngbNav]',\n  exportAs: 'ngbNav',\n  host: {\n    '[class.nav]': 'true',\n    '[class.flex-column]': `orientation === 'vertical'`,\n    '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n    '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n  }\n})\nexport class NgbNav implements AfterContentInit {\n  /**\n   * The id of the nav that should be active\n   *\n   * You could also use the `.select()` method and the `(navChange)` event\n   */\n  @Input() activeId: any;\n\n  /**\n   * The event emitted after the active nav changes\n   * The payload of the event is the newly active nav id\n   *\n   * If you want to prevent nav change, you should use `(navChange)` event\n   */\n  @Output() activeIdChange = new EventEmitter<any>();\n\n  /**\n   * If `true`, non-active nav content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * The orientation of navs.\n   *\n   * Using `vertical` will also add the `aria-orientation` attribute\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Role attribute generating strategy:\n   * - `false` - no role attributes will be generated\n   * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n   */\n  @Input() roles: 'tablist' | false;\n\n  @ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\n\n  constructor(@Attribute('role') public role: string, config: NgbNavConfig, private _cd: ChangeDetectorRef) {\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n  }\n\n  /**\n   * The nav change event emitted right before the nav change happens on user click.\n   *\n   * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n   *\n   * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n   */\n  @Output() navChange = new EventEmitter<NgbNavChangeEvent>();\n\n  click(item: NgbNavItem) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(id: any) { this._updateActiveId(id, false); }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n        this._cd.detectChanges();\n      }\n    }\n  }\n\n  private _updateActiveId(nextId: any, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; }});\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n      }\n    }\n  }\n}\n\n\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: 'a[ngbNavLink]',\n  host: {\n    '[id]': 'navItem.domId',\n    '[class.nav-link]': 'true',\n    '[class.nav-item]': 'hasNavItemClass()',\n    '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n    'href': '',\n    '[class.active]': 'navItem.active',\n    '[class.disabled]': 'navItem.disabled',\n    '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n    '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n    '[attr.aria-selected]': 'navItem.active',\n    '[attr.aria-disabled]': 'navItem.disabled',\n    '(click)': 'nav.click(navItem); $event.preventDefault()'\n  }\n})\nexport class NgbNavLink {\n  constructor(@Attribute('role') public role: string, public navItem: NgbNavItem, public nav: NgbNav) {}\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n}\n\n\n/**\n * The payload of the change event emitted right before the nav change happens on user click.\n *\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n *\n * @since 5.2.0\n */\nexport interface NgbNavChangeEvent {\n  /**\n   * Id of the currently active nav.\n   */\n  activeId: any;\n\n  /**\n   * Id of the newly selected nav.\n   */\n  nextId: any;\n\n  /**\n   * Function that will prevent nav change if called.\n   */\n  preventDefault: () => void;\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbNav} from './nav';\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n@Component({\n  selector: '[ngbNavOutlet]',\n  host: {'[class.tab-content]': 'true'},\n  encapsulation: ViewEncapsulation.None,\n  template: `\n      <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n          <div class=\"tab-pane\"\n               *ngIf=\"item.isPanelInDom()\"\n               [id]=\"item.panelDomId\"\n               [class.active]=\"item.active\"\n               [attr.role]=\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\"\n               [attr.aria-labelledby]=\"item.domId\">\n              <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef\"\n                           [ngTemplateOutletContext]=\"{$implicit: item.active}\"></ng-template>\n          </div>\n      </ng-template>\n  `\n})\nexport class NgbNavOutlet {\n  /**\n   * A role to set on the nav pane\n   */\n  @Input() paneRole;\n\n  /**\n   * Reference to the `NgbNav`\n   */\n  @Input('ngbNavOutlet') nav: NgbNav;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbNav, NgbNavContent, NgbNavItem, NgbNavLink} from './nav';\nimport {NgbNavOutlet} from './nav-outlet';\n\nexport {NgbNav, NgbNavContent, NgbNavContentContext, NgbNavItem, NgbNavLink, NgbNavChangeEvent} from './nav';\nexport {NgbNavOutlet} from './nav-outlet';\nexport {NgbNavConfig} from './nav-config';\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n\n@NgModule({declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule]})\nexport class NgbNavModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n          [attr.tabindex]=\"disabled ? '-1' : null\" [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis, {static: false}) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst, {static: false}) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast, {static: false}) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext, {static: false}) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber, {static: false}) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious, {static: false}) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < (this.pageCount - 2)) {\n          this.pages.push(-1);\n        } else if (end === (this.pageCount - 2)) {\n          this.pages.push(this.pageCount - 1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(renderer: any, nativeElement: any, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: any, nativeElement: any, triggers: string, isOpenedFn: () => boolean, openFn, closeFn, openDelay = 0,\n    closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({ngbPopover, popoverTitle, disablePopover, popoverClass}: SimpleChanges) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    }\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  textType: string;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\"\n      role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n      [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  private _max: number;\n\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  @Input()\n  set max(max: number) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max(): number { return this._max; }\n\n  /**\n   * If `true`, the stripes on the progress bar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Optional text variant type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   *\n   * @since 5.2.0\n   */\n  @Input() textType: string;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * The height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'd-inline-flex',\n    '[tabindex]': 'disabled ? -1 : 0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef, {static: false}) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) {\n    if (!this.readonly && !this.disabled) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n}\n","// tslint:disable:deprecation\nimport {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","// tslint:disable:deprecation\nimport {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive to wrap content to be displayed in a tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab implements AfterContentChecked {\n  /**\n   * The tab identifier.\n   *\n   * Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n\n  /**\n   * The tab title.\n   *\n   * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n   */\n  @Input() title: string;\n\n  /**\n   * If `true`, the current tab is disabled and can't be toggled.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * The id of the currently active tab.\n   */\n  activeId: string;\n\n  /**\n   * The id of the newly selected tab.\n   */\n  nextId: string;\n\n  /**\n   * Calling this function will prevent tab switching.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-selected]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * The identifier of the tab that should be opened **initially**.\n   *\n   * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n   */\n  @Input() activeId: string;\n\n  /**\n   * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the tabset.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs.\n   *\n   * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n   *\n   * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event emitted right before the tab change happens.\n   *\n   * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated content panel.\n   *\n   * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n   * hidden depending on the `destroyOnHide` value.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","// tslint:disable:deprecation\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n/**\n * @deprecated 6.0.0 Please use NgbNavModule instead\n */\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayPeriods, TranslationWidth} from '@angular/common';\n\nexport function NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbTimepickerI18n {\n  /**\n   * Returns the name for the period before midday.\n   */\n  abstract getMorningPeriod(): string;\n\n  /**\n   * Returns the name for the period after midday.\n   */\n  abstract getAfternoonPeriod(): string;\n}\n\n@Injectable()\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  private _periods: [string, string];\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod(): string { return this._periods[0]; }\n\n  getAfternoonPeriod(): string { return this._periods[1]; }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\nimport {NgbTimepickerI18n} from './timepicker-i18n';\n\nconst FILTER_REGEX = /[^0-9]/g;\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef, public i18n: NgbTimepickerI18n) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input: HTMLInputElement) { input.value = input.value.replace(FILTER_REGEX, ''); }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\nexport {NgbTimepickerI18n} from './timepicker-i18n';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Interface used to type all toast config options. See `NgbToastConfig`.\n *\n * @since 5.0.0\n */\nexport interface NgbToastOptions {\n  /**\n   * Specify if the toast component should emit the `hide()` output\n   * after a certain `delay` in ms.\n   */\n  autohide?: boolean;\n\n  /**\n   * Delay in ms after which the `hide()` output should be emitted.\n   */\n  delay?: number;\n\n  /**\n   * Type of aria-live attribute to be used.\n   *\n   * Could be one of these 2 values (as string):\n   * - `polite` (default)\n   * - `alert`\n   */\n  ariaLive?: 'polite' | 'alert';\n}\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbToastConfig implements NgbToastOptions {\n  autohide = true;\n  delay = 500;\n  ariaLive: 'polite' | 'alert' = 'polite';\n}\n","import {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {NgbToastConfig} from './toast-config';\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n@Directive({selector: '[ngbToastHeader]'})\nexport class NgbToastHeader {\n}\n\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n@Component({\n  selector: 'ngb-toast',\n  exportAs: 'ngbToast',\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'alert',\n    '[attr.aria-live]': 'ariaLive',\n    'aria-atomic': 'true',\n    '[class.toast]': 'true',\n    '[class.show]': 'true',\n  },\n  template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./toast.scss']\n})\nexport class NgbToast implements AfterContentInit,\n    OnChanges {\n  private _timeoutID;\n\n  /**\n   * Delay after which the toast will hide (ms).\n   * default: `500` (ms) (inherited from NgbToastConfig)\n   */\n  @Input() delay: number;\n\n  /**\n   * Auto hide the toast after a delay in ms.\n   * default: `true` (inherited from NgbToastConfig)\n   */\n  @Input() autohide: boolean;\n\n  /**\n   * Text to be used as toast's header.\n   * Ignored if a ContentChild template is specified at the same time.\n   */\n  @Input() header: string;\n\n  /**\n   * A template like `<ng-template ngbToastHeader></ng-template>` can be\n   * used in the projected content to allow markup usage.\n   */\n  @ContentChild(NgbToastHeader, {read: TemplateRef, static: true}) contentHeaderTpl: TemplateRef<any>| null = null;\n\n  /**\n   * An event fired immediately when toast's `hide()` method has been called.\n   * It can only occur in 2 different scenarios:\n   * - `autohide` timeout fires\n   * - user clicks on a closing cross (&times)\n   *\n   * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n   * that.\n   */\n  @Output('hide') hideOutput = new EventEmitter<void>();\n\n  constructor(@Attribute('aria-live') public ariaLive: string, config: NgbToastConfig) {\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n  }\n\n  ngAfterContentInit() { this._init(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n      this._init();\n    }\n  }\n\n  hide() {\n    this._clearTimeout();\n    this.hideOutput.emit();\n  }\n\n  private _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  private _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgbToast, NgbToastHeader} from './toast';\n\nexport {NgbToast, NgbToastHeader} from './toast';\nexport {NgbToastConfig, NgbToastOptions} from './toast-config';\n\n@NgModule({declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader]})\nexport class NgbToastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({tooltipClass}: SimpleChanges) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\n   */\n  @Input() result: string;\n\n  /**\n   * The term or array of terms to be highlighted.\n   * Since version `v4.2.0` term could be a `string[]`\n   */\n  @Input() term: string | readonly string[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const result = toString(this.result);\n\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n    const escapedTerms = terms.map(term => regExpEscape(toString(term))).filter(term => term);\n\n    this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  encapsulation: ViewEncapsulation.None,\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ApplicationRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: any;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<readonly any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, applicationRef: ApplicationRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      this._onChange(this.editable ? value : undefined);\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._closed$.next();\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<readonly any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbNavModule} from './nav/nav.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbToastModule} from './toast/toast.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\n\n\nexport {\n  NgbAccordion,\n  NgbAccordionConfig,\n  NgbAccordionModule,\n  NgbPanel,\n  NgbPanelChangeEvent,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelTitle,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlert, NgbAlertConfig, NgbAlertModule} from './alert/alert.module';\nexport {NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {\n  NgbCarousel,\n  NgbCarouselConfig,\n  NgbCarouselModule,\n  NgbSlide,\n  NgbSlideEvent,\n  NgbSlideEventDirection,\n  NgbSlideEventSource\n} from './carousel/carousel.module';\nexport {NgbCollapse, NgbCollapseModule} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarGregorian,\n  NgbCalendarHebrew,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarPersian,\n  NgbDate,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDateParserFormatter,\n  NgbDatepicker,\n  NgbDatepickerConfig,\n  NgbInputDatepickerConfig,\n  NgbDatepickerContent,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerKeyboardService,\n  NgbDatepickerModule,\n  NgbDatepickerMonth,\n  NgbDatepickerNavigateEvent,\n  NgbDatepickerState,\n  NgbDateStruct,\n  NgbInputDatepicker,\n  NgbPeriod\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownModule,\n  NgbDropdownToggle,\n  NgbNavbar\n} from './dropdown/dropdown.module';\nexport {\n  ModalDismissReasons,\n  NgbActiveModal,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalModule,\n  NgbModalOptions,\n  NgbModalRef\n} from './modal/modal.module';\nexport {\n  NgbNavChangeEvent,\n  NgbNavConfig,\n  NgbNav,\n  NgbNavContent,\n  NgbNavContentContext,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavModule,\n  NgbNavOutlet\n} from './nav/nav.module';\nexport {\n  NgbPagination,\n  NgbPaginationConfig,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationModule,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopover, NgbPopoverConfig, NgbPopoverModule} from './popover/popover.module';\nexport {NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule} from './progressbar/progressbar.module';\nexport {NgbRating, NgbRatingConfig, NgbRatingModule} from './rating/rating.module';\nexport {\n  NgbTab,\n  NgbTabChangeEvent,\n  NgbTabContent,\n  NgbTabset,\n  NgbTabsetConfig,\n  NgbTabsetModule,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimeAdapter,\n  NgbTimepickerI18n,\n  NgbTimepicker,\n  NgbTimepickerConfig,\n  NgbTimepickerModule,\n  NgbTimeStruct\n} from './timepicker/timepicker.module';\nexport {NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule} from './toast/toast.module';\nexport {NgbTooltip, NgbTooltipConfig, NgbTooltipModule} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeahead,\n  NgbTypeaheadConfig,\n  NgbTypeaheadModule,\n  NgbTypeaheadSelectItemEvent\n} from './typeahead/typeahead.module';\nexport {Placement} from './util/positioning';\n\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\n  NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule,\n  // tslint:disable-next-line:deprecation\n  NgbTabsetModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NGB_CAROUSEL_DIRECTIVES as ɵa} from './carousel/carousel';\nexport {NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵi,NgbDateStructAdapter as ɵj} from './datepicker/adapters/ngb-date-adapter';\nexport {NGB_DATEPICKER_VALUE_ACCESSOR as ɵb} from './datepicker/datepicker';\nexport {NgbDatepickerDayView as ɵd} from './datepicker/datepicker-day-view';\nexport {NGB_DATEPICKER_18N_FACTORY as ɵg,NgbDatepickerI18nDefault as ɵh} from './datepicker/datepicker-i18n';\nexport {NgbDatepickerNavigation as ɵe} from './datepicker/datepicker-navigation';\nexport {NgbDatepickerNavigationSelect as ɵf} from './datepicker/datepicker-navigation-select';\nexport {NgbDatepickerService as ɵt} from './datepicker/datepicker-service';\nexport {NgbCalendarHijri as ɵbb} from './datepicker/hijri/ngb-calendar-hijri';\nexport {NGB_DATEPICKER_CALENDAR_FACTORY as ɵc} from './datepicker/ngb-calendar';\nexport {NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵk,NgbDateISOParserFormatter as ɵl} from './datepicker/ngb-date-parser-formatter';\nexport {NgbModalBackdrop as ɵu} from './modal/modal-backdrop';\nexport {NgbModalStack as ɵw} from './modal/modal-stack';\nexport {NgbModalWindow as ɵv} from './modal/modal-window';\nexport {NgbPopoverWindow as ɵm} from './popover/popover';\nexport {NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵn,NgbTimeStructAdapter as ɵo} from './timepicker/ngb-time-adapter';\nexport {NGB_TIMEPICKER_I18N_FACTORY as ɵp,NgbTimepickerI18nDefault as ɵq} from './timepicker/timepicker-i18n';\nexport {NgbTooltipWindow as ɵr} from './tooltip/tooltip';\nexport {NgbTypeaheadWindow as ɵs} from './typeahead/typeahead-window';\nexport {ARIA_LIVE_DELAY as ɵy,ARIA_LIVE_DELAY_FACTORY as ɵz,Live as ɵba} from './util/accessibility/live';\nexport {ContentRef as ɵbc} from './util/popup';\nexport {ScrollBar as ɵx} from './util/scrollbar';"]},"metadata":{},"sourceType":"module"}