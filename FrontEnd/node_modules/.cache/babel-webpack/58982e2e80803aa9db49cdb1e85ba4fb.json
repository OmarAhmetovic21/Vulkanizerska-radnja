{"ast":null,"code":"import _inherits from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/FrontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/FrontEnd/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/FrontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/FrontEnd/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/FrontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Users/User/Documents/GitHub/Vulkanizerska-radnja/FrontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { __decorate, __metadata, __param, __awaiter } from 'tslib';\nimport { Injectable, NgZone, Input, Directive, EventEmitter, Output, Self, ElementRef, Component, Inject, PLATFORM_ID, QueryList, ContentChildren, forwardRef, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, LOCALE_ID, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, Subject, fromEventPattern, merge, ReplaySubject, bindCallback, of, throwError } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, distinctUntilChanged, takeUntil, startWith, skip, multicast } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"*\"];\nvar MapsAPILoader = /*#__PURE__*/_createClass(function MapsAPILoader() {\n  _classCallCheck(this, MapsAPILoader);\n});\nMapsAPILoader.ɵfac = function MapsAPILoader_Factory(t) {\n  return new (t || MapsAPILoader)();\n};\nMapsAPILoader.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MapsAPILoader,\n  factory: function factory(t) {\n    return MapsAPILoader.ɵfac(t);\n  }\n});\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nvar GoogleMapsAPIWrapper = /*#__PURE__*/function () {\n  function GoogleMapsAPIWrapper(_loader, _zone) {\n    var _this = this;\n    _classCallCheck(this, GoogleMapsAPIWrapper);\n    this._loader = _loader;\n    this._zone = _zone;\n    this._map = new Promise(function (resolve) {\n      _this._mapResolver = resolve;\n    });\n  }\n  _createClass(GoogleMapsAPIWrapper, [{\n    key: \"createMap\",\n    value: function createMap(el, mapOptions) {\n      var _this2 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this2._loader.load().then(function () {\n          var map = new google.maps.Map(el, mapOptions);\n          _this2._mapResolver(map);\n          return;\n        });\n      });\n    }\n  }, {\n    key: \"setMapOptions\",\n    value: function setMapOptions(options) {\n      var _this3 = this;\n      return this._zone.runOutsideAngular(function () {\n        _this3._map.then(function (m) {\n          m.setOptions(options);\n        });\n      });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n  }, {\n    key: \"createMarker\",\n    value: function createMarker() {\n      var _this4 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var addToMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return this._zone.runOutsideAngular(function () {\n        return _this4._map.then(function (map) {\n          if (addToMap) {\n            options.map = map;\n          }\n          return new google.maps.Marker(options);\n        });\n      });\n    }\n  }, {\n    key: \"createInfoWindow\",\n    value: function createInfoWindow(options) {\n      var _this5 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this5._map.then(function () {\n          return new google.maps.InfoWindow(options);\n        });\n      });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n  }, {\n    key: \"createCircle\",\n    value: function createCircle(options) {\n      var _this6 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this6._map.then(function (map) {\n          if (typeof options.strokePosition === 'string') {\n            options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n          }\n          options.map = map;\n          return new google.maps.Circle(options);\n        });\n      });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n  }, {\n    key: \"createRectangle\",\n    value: function createRectangle(options) {\n      var _this7 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this7._map.then(function (map) {\n          options.map = map;\n          return new google.maps.Rectangle(options);\n        });\n      });\n    }\n  }, {\n    key: \"createPolyline\",\n    value: function createPolyline(options) {\n      var _this8 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this8.getNativeMap().then(function (map) {\n          var line = new google.maps.Polyline(options);\n          line.setMap(map);\n          return line;\n        });\n      });\n    }\n  }, {\n    key: \"createPolygon\",\n    value: function createPolygon(options) {\n      var _this9 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this9.getNativeMap().then(function (map) {\n          var polygon = new google.maps.Polygon(options);\n          polygon.setMap(map);\n          return polygon;\n        });\n      });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n  }, {\n    key: \"createDataLayer\",\n    value: function createDataLayer(options) {\n      var _this10 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this10._map.then(function (m) {\n          var data = new google.maps.Data(options);\n          data.setMap(m);\n          return data;\n        });\n      });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @param {TransitLayerOptions} options - used for setting layer options\n     * @returns {Promise<TransitLayer>} a new transit layer object\n     */\n  }, {\n    key: \"createTransitLayer\",\n    value: function createTransitLayer(options) {\n      var _this11 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this11._map.then(function (map) {\n          var newLayer = new google.maps.TransitLayer();\n          newLayer.setMap(options.visible ? map : null);\n          return newLayer;\n        });\n      });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @param {BicyclingLayerOptions} options - used for setting layer options\n     * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n     */\n  }, {\n    key: \"createBicyclingLayer\",\n    value: function createBicyclingLayer(options) {\n      var _this12 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this12._map.then(function (map) {\n          var newLayer = new google.maps.BicyclingLayer();\n          newLayer.setMap(options.visible ? map : null);\n          return newLayer;\n        });\n      });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n  }, {\n    key: \"containsLocation\",\n    value: function containsLocation(latLng, polygon) {\n      return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    }\n  }, {\n    key: \"subscribeToMapEvent\",\n    value: function subscribeToMapEvent(eventName) {\n      var _this13 = this;\n      return new Observable(function (observer) {\n        _this13._map.then(function (m) {\n          m.addListener(eventName, function (arg) {\n            _this13._zone.run(function () {\n              return observer.next(arg);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"clearInstanceListeners\",\n    value: function clearInstanceListeners() {\n      var _this14 = this;\n      return this._zone.runOutsideAngular(function () {\n        _this14._map.then(function (map) {\n          google.maps.event.clearInstanceListeners(map);\n        });\n      });\n    }\n  }, {\n    key: \"setCenter\",\n    value: function setCenter(latLng) {\n      var _this15 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this15._map.then(function (map) {\n          return map.setCenter(latLng);\n        });\n      });\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      var _this16 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this16._map.then(function (map) {\n          return map.getZoom();\n        });\n      });\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      var _this17 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this17._map.then(function (map) {\n          return map.getBounds();\n        });\n      });\n    }\n  }, {\n    key: \"getMapTypeId\",\n    value: function getMapTypeId() {\n      var _this18 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this18._map.then(function (map) {\n          return map.getMapTypeId();\n        });\n      });\n    }\n  }, {\n    key: \"setZoom\",\n    value: function setZoom(zoom) {\n      var _this19 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this19._map.then(function (map) {\n          return map.setZoom(zoom);\n        });\n      });\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      var _this20 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this20._map.then(function (map) {\n          return map.getCenter();\n        });\n      });\n    }\n  }, {\n    key: \"panTo\",\n    value: function panTo(latLng) {\n      var _this21 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this21._map.then(function (map) {\n          return map.panTo(latLng);\n        });\n      });\n    }\n  }, {\n    key: \"panBy\",\n    value: function panBy(x, y) {\n      var _this22 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this22._map.then(function (map) {\n          return map.panBy(x, y);\n        });\n      });\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(latLng, padding) {\n      var _this23 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this23._map.then(function (map) {\n          return map.fitBounds(latLng, padding);\n        });\n      });\n    }\n  }, {\n    key: \"panToBounds\",\n    value: function panToBounds(latLng, padding) {\n      var _this24 = this;\n      return this._zone.runOutsideAngular(function () {\n        return _this24._map.then(function (map) {\n          return map.panToBounds(latLng, padding);\n        });\n      });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n  }, {\n    key: \"getNativeMap\",\n    value: function getNativeMap() {\n      return this._map;\n    }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n  }, {\n    key: \"triggerMapEvent\",\n    value: function triggerMapEvent(eventName) {\n      return this._map.then(function (m) {\n        return google.maps.event.trigger(m, eventName);\n      });\n    }\n  }]);\n  return GoogleMapsAPIWrapper;\n}();\nGoogleMapsAPIWrapper.ɵfac = function GoogleMapsAPIWrapper_Factory(t) {\n  return new (t || GoogleMapsAPIWrapper)(ɵngcc0.ɵɵinject(MapsAPILoader), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nGoogleMapsAPIWrapper.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: GoogleMapsAPIWrapper,\n  factory: function factory(t) {\n    return GoogleMapsAPIWrapper.ɵfac(t);\n  }\n});\nGoogleMapsAPIWrapper.ctorParameters = function () {\n  return [{\n    type: MapsAPILoader\n  }, {\n    type: NgZone\n  }];\n};\nGoogleMapsAPIWrapper = __decorate([__metadata(\"design:paramtypes\", [MapsAPILoader, NgZone])], GoogleMapsAPIWrapper);\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nvar LayerManager = /*#__PURE__*/function () {\n  function LayerManager(_wrapper) {\n    _classCallCheck(this, LayerManager);\n    this._wrapper = _wrapper;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a transit layer to a map instance.\n   * @param {AgmTransitLayer} layer - a TransitLayer object\n   * @param {TransitLayerOptions} options - TransitLayerOptions options\n   * @returns void\n   */\n  _createClass(LayerManager, [{\n    key: \"addTransitLayer\",\n    value: function addTransitLayer(layer, options) {\n      var newLayer = this._wrapper.createTransitLayer(options);\n      this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n  }, {\n    key: \"addBicyclingLayer\",\n    value: function addBicyclingLayer(layer, options) {\n      var newLayer = this._wrapper.createBicyclingLayer(options);\n      this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n  }, {\n    key: \"deleteLayer\",\n    value: function deleteLayer(layer) {\n      var _this25 = this;\n      return this._layers.get(layer).then(function (currentLayer) {\n        currentLayer.setMap(null);\n        _this25._layers.delete(layer);\n      });\n    }\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n  }, {\n    key: \"toggleLayerVisibility\",\n    value: function toggleLayerVisibility(layer, options) {\n      var _this26 = this;\n      return this._layers.get(layer).then(function (currentLayer) {\n        if (!options.visible) {\n          currentLayer.setMap(null);\n          return;\n        } else {\n          return _this26._wrapper.getNativeMap().then(function (map) {\n            currentLayer.setMap(map);\n          });\n        }\n      });\n    }\n  }]);\n  return LayerManager;\n}();\nLayerManager.ɵfac = function LayerManager_Factory(t) {\n  return new (t || LayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper));\n};\nLayerManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: LayerManager,\n  factory: function factory(t) {\n    return LayerManager.ɵfac(t);\n  }\n});\nLayerManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }];\n};\nLayerManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper])], LayerManager);\nvar layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nvar AgmBicyclingLayer = /*#__PURE__*/function () {\n  function AgmBicyclingLayer(_manager) {\n    _classCallCheck(this, AgmBicyclingLayer);\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId++).toString();\n    /**\n     * Hide/show bicycling layer\n     */\n    this.visible = true;\n  }\n  _createClass(AgmBicyclingLayer, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n      this._manager.addBicyclingLayer(this, {\n        visible: this.visible\n      });\n      this._addedToManager = true;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._addedToManager) {\n        return;\n      }\n      if (changes['visible'] != null) {\n        this._manager.toggleLayerVisibility(this, {\n          visible: changes['visible'].currentValue\n        });\n      }\n    }\n    /** @internal */\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AgmBicyclingLayer-\".concat(this._id.toString());\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._manager.deleteLayer(this);\n    }\n  }]);\n  return AgmBicyclingLayer;\n}();\nAgmBicyclingLayer.ɵfac = function AgmBicyclingLayer_Factory(t) {\n  return new (t || AgmBicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager));\n};\nAgmBicyclingLayer.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmBicyclingLayer,\n  selectors: [[\"agm-bicycling-layer\"]],\n  inputs: {\n    visible: \"visible\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmBicyclingLayer.ctorParameters = function () {\n  return [{\n    type: LayerManager\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmBicyclingLayer.prototype, \"visible\", void 0);\nAgmBicyclingLayer = __decorate([__metadata(\"design:paramtypes\", [LayerManager])], AgmBicyclingLayer);\nvar CircleManager = /*#__PURE__*/function () {\n  function CircleManager(_apiWrapper, _zone) {\n    _classCallCheck(this, CircleManager);\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._circles = new Map();\n  }\n  _createClass(CircleManager, [{\n    key: \"addCircle\",\n    value: function addCircle(circle) {\n      this._circles.set(circle, this._apiWrapper.createCircle({\n        center: {\n          lat: circle.latitude,\n          lng: circle.longitude\n        },\n        clickable: circle.clickable,\n        draggable: circle.draggable,\n        editable: circle.editable,\n        fillColor: circle.fillColor,\n        fillOpacity: circle.fillOpacity,\n        radius: circle.radius,\n        strokeColor: circle.strokeColor,\n        strokeOpacity: circle.strokeOpacity,\n        strokePosition: circle.strokePosition,\n        strokeWeight: circle.strokeWeight,\n        visible: circle.visible,\n        zIndex: circle.zIndex\n      }));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n  }, {\n    key: \"removeCircle\",\n    value: function removeCircle(circle) {\n      var _this27 = this;\n      return this._circles.get(circle).then(function (c) {\n        c.setMap(null);\n        _this27._circles.delete(circle);\n      });\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(circle, options) {\n      return this._circles.get(circle).then(function (c) {\n        if (typeof options.strokePosition === 'string') {\n          options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n        }\n        c.setOptions(options);\n      });\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.getBounds();\n      });\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.getCenter();\n      });\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.getRadius();\n      });\n    }\n  }, {\n    key: \"setCenter\",\n    value: function setCenter(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setCenter({\n          lat: circle.latitude,\n          lng: circle.longitude\n        });\n      });\n    }\n  }, {\n    key: \"setEditable\",\n    value: function setEditable(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setEditable(circle.editable);\n      });\n    }\n  }, {\n    key: \"setDraggable\",\n    value: function setDraggable(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setDraggable(circle.draggable);\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setVisible(circle.visible);\n      });\n    }\n  }, {\n    key: \"setRadius\",\n    value: function setRadius(circle) {\n      return this._circles.get(circle).then(function (c) {\n        return c.setRadius(circle.radius);\n      });\n    }\n  }, {\n    key: \"getNativeCircle\",\n    value: function getNativeCircle(circle) {\n      return this._circles.get(circle);\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, circle) {\n      var _this28 = this;\n      return new Observable(function (observer) {\n        var listener = null;\n        _this28._circles.get(circle).then(function (c) {\n          listener = c.addListener(eventName, function (e) {\n            return _this28._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n        return function () {\n          if (listener !== null) {\n            listener.remove();\n          }\n        };\n      });\n    }\n  }]);\n  return CircleManager;\n}();\nCircleManager.ɵfac = function CircleManager_Factory(t) {\n  return new (t || CircleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nCircleManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: CircleManager,\n  factory: function factory(t) {\n    return CircleManager.ɵfac(t);\n  }\n});\nCircleManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\nCircleManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], CircleManager);\nvar AgmCircle_1;\nvar AgmCircle = AgmCircle_1 = /*#__PURE__*/function () {\n  function AgmCircle(_manager) {\n    _classCallCheck(this, AgmCircle);\n    this._manager = _manager;\n    /**\n     * Indicates whether this Circle handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this circle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this circle by dragging the control points shown at\n     * the center and around the circumference of the circle. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * The radius in meters on the Earth's surface.\n     */\n    this.radius = 0;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n    this.strokeWeight = 0;\n    /**\n     * Whether this circle is visible on the map. Defaults to true.\n     */\n    this.visible = true;\n    /**\n     * This event is fired when the circle's center is changed.\n     */\n    this.centerChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n    this.circleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n    this.circleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the circle.\n     */\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the circle.\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the circle.\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the circle.\n     */\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the circle.\n     */\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on circle mouseout.\n     */\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on circle mouseover.\n     */\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the circle.\n     */\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the circle's radius is changed.\n     */\n    this.radiusChange = new EventEmitter();\n    /**\n     * This event is fired when the circle is right-clicked on.\n     */\n    this.rightClick = new EventEmitter();\n    this._circleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n  _createClass(AgmCircle, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._manager.addCircle(this);\n      this._circleAddedToManager = true;\n      this._registerEventListeners();\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._circleAddedToManager) {\n        return;\n      }\n      if (changes['latitude'] || changes['longitude']) {\n        this._manager.setCenter(this);\n      }\n      if (changes['editable']) {\n        this._manager.setEditable(this);\n      }\n      if (changes['draggable']) {\n        this._manager.setDraggable(this);\n      }\n      if (changes['visible']) {\n        this._manager.setVisible(this);\n      }\n      if (changes['radius']) {\n        this._manager.setRadius(this);\n      }\n      this._updateCircleOptionsChanges(changes);\n    }\n  }, {\n    key: \"_updateCircleOptionsChanges\",\n    value: function _updateCircleOptionsChanges(changes) {\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmCircle_1._mapOptions.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        options[k] = changes[k].currentValue;\n      });\n      if (optionKeys.length > 0) {\n        this._manager.setOptions(this, options);\n      }\n    }\n  }, {\n    key: \"_registerEventListeners\",\n    value: function _registerEventListeners() {\n      var _this29 = this;\n      var events = new Map();\n      events.set('center_changed', this.centerChange);\n      events.set('click', this.circleClick);\n      events.set('dblclick', this.circleDblClick);\n      events.set('drag', this.drag);\n      events.set('dragend', this.dragEnd);\n      events.set('dragstart', this.dragStart);\n      events.set('mousedown', this.mouseDown);\n      events.set('mousemove', this.mouseMove);\n      events.set('mouseout', this.mouseOut);\n      events.set('mouseover', this.mouseOver);\n      events.set('mouseup', this.mouseUp);\n      events.set('radius_changed', this.radiusChange);\n      events.set('rightclick', this.rightClick);\n      events.forEach(function (eventEmitter, eventName) {\n        _this29._eventSubscriptions.push(_this29._manager.createEventObservable(eventName, _this29).subscribe(function (value) {\n          switch (eventName) {\n            case 'radius_changed':\n              _this29._manager.getRadius(_this29).then(function (radius) {\n                return eventEmitter.emit(radius);\n              });\n              break;\n            case 'center_changed':\n              _this29._manager.getCenter(_this29).then(function (center) {\n                return eventEmitter.emit({\n                  lat: center.lat(),\n                  lng: center.lng()\n                });\n              });\n              break;\n            default:\n              eventEmitter.emit({\n                coords: {\n                  lat: value.latLng.lat(),\n                  lng: value.latLng.lng()\n                }\n              });\n          }\n        }));\n      });\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventSubscriptions.forEach(function (s) {\n        s.unsubscribe();\n      });\n      this._eventSubscriptions = null;\n      this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this._manager.getBounds(this);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this._manager.getCenter(this);\n    }\n  }]);\n  return AgmCircle;\n}();\nAgmCircle.ɵfac = function AgmCircle_Factory(t) {\n  return new (t || AgmCircle)(ɵngcc0.ɵɵdirectiveInject(CircleManager));\n};\nAgmCircle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmCircle,\n  selectors: [[\"agm-circle\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"circleDraggable\", \"draggable\"],\n    editable: \"editable\",\n    radius: \"radius\",\n    strokePosition: \"strokePosition\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    latitude: \"latitude\",\n    longitude: \"longitude\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    centerChange: \"centerChange\",\n    circleClick: \"circleClick\",\n    circleDblClick: \"circleDblClick\",\n    drag: \"drag\",\n    dragEnd: \"dragEnd\",\n    dragStart: \"dragStart\",\n    mouseDown: \"mouseDown\",\n    mouseMove: \"mouseMove\",\n    mouseOut: \"mouseOut\",\n    mouseOver: \"mouseOver\",\n    mouseUp: \"mouseUp\",\n    radiusChange: \"radiusChange\",\n    rightClick: \"rightClick\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmCircle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\nAgmCircle.ctorParameters = function () {\n  return [{\n    type: CircleManager\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"longitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"clickable\", void 0);\n__decorate([Input('circleDraggable'), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"editable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"fillColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"fillOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"radius\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"strokePosition\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"strokeWeight\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"centerChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"circleClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"circleDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"drag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"dragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"dragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseDown\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseMove\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseOut\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseUp\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"radiusChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"rightClick\", void 0);\nAgmCircle = AgmCircle_1 = __decorate([__metadata(\"design:paramtypes\", [CircleManager])], AgmCircle);\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nvar DataLayerManager = /*#__PURE__*/function () {\n  function DataLayerManager(_wrapper, _zone) {\n    _classCallCheck(this, DataLayerManager);\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new Data Layer to the map.\n   */\n  _createClass(DataLayerManager, [{\n    key: \"addDataLayer\",\n    value: function addDataLayer(layer) {\n      var _this30 = this;\n      var newLayer = this._wrapper.createDataLayer({\n        style: layer.style\n      }).then(function (d) {\n        if (layer.geoJson) {\n          _this30.getDataFeatures(d, layer.geoJson).then(function (features) {\n            return d.features = features;\n          });\n        }\n        return d;\n      });\n      this._layers.set(layer, newLayer);\n    }\n  }, {\n    key: \"deleteDataLayer\",\n    value: function deleteDataLayer(layer) {\n      var _this31 = this;\n      this._layers.get(layer).then(function (l) {\n        l.setMap(null);\n        _this31._layers.delete(layer);\n      });\n    }\n  }, {\n    key: \"updateGeoJson\",\n    value: function updateGeoJson(layer, geoJson) {\n      var _this32 = this;\n      this._layers.get(layer).then(function (l) {\n        l.forEach(function (feature) {\n          l.remove(feature);\n          var index = l.features.indexOf(feature, 0);\n          if (index > -1) {\n            l.features.splice(index, 1);\n          }\n        });\n        _this32.getDataFeatures(l, geoJson).then(function (features) {\n          return l.features = features;\n        });\n      });\n    }\n  }, {\n    key: \"setDataOptions\",\n    value: function setDataOptions(layer, options) {\n      this._layers.get(layer).then(function (l) {\n        l.setControlPosition(options.controlPosition);\n        l.setControls(options.controls);\n        l.setDrawingMode(options.drawingMode);\n        l.setStyle(options.style);\n      });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, layer) {\n      var _this33 = this;\n      return new Observable(function (observer) {\n        _this33._layers.get(layer).then(function (d) {\n          d.addListener(eventName, function (e) {\n            return _this33._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n  }, {\n    key: \"getDataFeatures\",\n    value: function getDataFeatures(d, geoJson) {\n      return new Promise(function (resolve, reject) {\n        if (typeof geoJson === 'object') {\n          try {\n            var features = d.addGeoJson(geoJson);\n            resolve(features);\n          } catch (e) {\n            reject(e);\n          }\n        } else if (typeof geoJson === 'string') {\n          d.loadGeoJson(geoJson, null, resolve);\n        } else {\n          reject(\"Impossible to extract features from geoJson: wrong argument type\");\n        }\n      });\n    }\n  }]);\n  return DataLayerManager;\n}();\nDataLayerManager.ɵfac = function DataLayerManager_Factory(t) {\n  return new (t || DataLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nDataLayerManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DataLayerManager,\n  factory: function factory(t) {\n    return DataLayerManager.ɵfac(t);\n  }\n});\nDataLayerManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\nDataLayerManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], DataLayerManager);\nvar AgmDataLayer_1;\nvar layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nvar AgmDataLayer = AgmDataLayer_1 = /*#__PURE__*/function () {\n  function AgmDataLayer(_manager) {\n    _classCallCheck(this, AgmDataLayer);\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$1++).toString();\n    this._subscriptions = [];\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n    this.layerClick = new EventEmitter();\n    /**\n     * The geoJson to be displayed\n     */\n    this.geoJson = null;\n  }\n  _createClass(AgmDataLayer, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n      this._manager.addDataLayer(this);\n      this._addedToManager = true;\n      this._addEventListeners();\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this34 = this;\n      var listeners = [{\n        name: 'click',\n        handler: function handler(ev) {\n          return _this34.layerClick.emit(ev);\n        }\n      }];\n      listeners.forEach(function (obj) {\n        var os = _this34._manager.createEventObservable(obj.name, _this34).subscribe(obj.handler);\n        _this34._subscriptions.push(os);\n      });\n    }\n    /** @internal */\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AgmDataLayer-\".concat(this._id.toString());\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._manager.deleteDataLayer(this);\n      // unsubscribe all registered observable subscriptions\n      this._subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this35 = this;\n      if (!this._addedToManager) {\n        return;\n      }\n      var geoJsonChange = changes['geoJson'];\n      if (geoJsonChange) {\n        this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n      }\n      var dataOptions = {};\n      AgmDataLayer_1._dataOptionsAttributes.forEach(function (k) {\n        return dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : _this35[k];\n      });\n      this._manager.setDataOptions(this, dataOptions);\n    }\n  }]);\n  return AgmDataLayer;\n}();\nAgmDataLayer.ɵfac = function AgmDataLayer_Factory(t) {\n  return new (t || AgmDataLayer)(ɵngcc0.ɵɵdirectiveInject(DataLayerManager));\n};\nAgmDataLayer.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmDataLayer,\n  selectors: [[\"agm-data-layer\"]],\n  inputs: {\n    geoJson: \"geoJson\",\n    style: \"style\"\n  },\n  outputs: {\n    layerClick: \"layerClick\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = function () {\n  return [{\n    type: DataLayerManager\n  }];\n};\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmDataLayer.prototype, \"layerClick\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmDataLayer.prototype, \"geoJson\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Function)], AgmDataLayer.prototype, \"style\", void 0);\nAgmDataLayer = AgmDataLayer_1 = __decorate([__metadata(\"design:paramtypes\", [DataLayerManager])], AgmDataLayer);\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nvar FitBoundsAccessor = /*#__PURE__*/_createClass(function FitBoundsAccessor() {\n  _classCallCheck(this, FitBoundsAccessor);\n});\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nvar FitBoundsService = /*#__PURE__*/function () {\n  function FitBoundsService(loader) {\n    var _this36 = this;\n    _classCallCheck(this, FitBoundsService);\n    this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n    this._includeInBounds$ = new BehaviorSubject(new Map());\n    this.bounds$ = from(loader.load()).pipe(flatMap(function () {\n      return _this36._includeInBounds$;\n    }), sample(this._boundsChangeSampleTime$.pipe(switchMap(function (time) {\n      return timer(0, time);\n    }))), map(function (includeInBounds) {\n      return _this36._generateBounds(includeInBounds);\n    }), shareReplay(1));\n  }\n  _createClass(FitBoundsService, [{\n    key: \"_generateBounds\",\n    value: function _generateBounds(includeInBounds) {\n      var bounds = new google.maps.LatLngBounds();\n      includeInBounds.forEach(function (b) {\n        return bounds.extend(b);\n      });\n      return bounds;\n    }\n  }, {\n    key: \"addToBounds\",\n    value: function addToBounds(latLng) {\n      var id = this._createIdentifier(latLng);\n      if (this._includeInBounds$.value.has(id)) {\n        return;\n      }\n      var map = this._includeInBounds$.value;\n      map.set(id, latLng);\n      this._includeInBounds$.next(map);\n    }\n  }, {\n    key: \"removeFromBounds\",\n    value: function removeFromBounds(latLng) {\n      var map = this._includeInBounds$.value;\n      map.delete(this._createIdentifier(latLng));\n      this._includeInBounds$.next(map);\n    }\n  }, {\n    key: \"changeFitBoundsChangeSampleTime\",\n    value: function changeFitBoundsChangeSampleTime(timeMs) {\n      this._boundsChangeSampleTime$.next(timeMs);\n    }\n  }, {\n    key: \"getBounds$\",\n    value: function getBounds$() {\n      return this.bounds$;\n    }\n  }, {\n    key: \"_createIdentifier\",\n    value: function _createIdentifier(latLng) {\n      return \"\".concat(latLng.lat, \"+\").concat(latLng.lng);\n    }\n  }]);\n  return FitBoundsService;\n}();\nFitBoundsService.ɵfac = function FitBoundsService_Factory(t) {\n  return new (t || FitBoundsService)(ɵngcc0.ɵɵinject(MapsAPILoader));\n};\nFitBoundsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: FitBoundsService,\n  factory: function factory(t) {\n    return FitBoundsService.ɵfac(t);\n  }\n});\nFitBoundsService.ctorParameters = function () {\n  return [{\n    type: MapsAPILoader\n  }];\n};\nFitBoundsService = __decorate([__metadata(\"design:paramtypes\", [MapsAPILoader])], FitBoundsService);\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nvar AgmFitBounds = /*#__PURE__*/function () {\n  function AgmFitBounds(_fitBoundsAccessor, _fitBoundsService) {\n    _classCallCheck(this, AgmFitBounds);\n    this._fitBoundsAccessor = _fitBoundsAccessor;\n    this._fitBoundsService = _fitBoundsService;\n    /**\n     * If the value is true, the element gets added to the bounds of the map.\n     * Default: true.\n     */\n    this.agmFitBounds = true;\n    this._destroyed$ = new Subject();\n    this._latestFitBoundsDetails = null;\n  }\n  /**\n   * @internal\n   */\n  _createClass(AgmFitBounds, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this37 = this;\n      this._fitBoundsAccessor.getFitBoundsDetails$().pipe(distinctUntilChanged(function (x, y) {\n        return x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng;\n      }), takeUntil(this._destroyed$)).subscribe(function (details) {\n        return _this37._updateBounds(details);\n      });\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n  }, {\n    key: \"_updateBounds\",\n    value: function _updateBounds(newFitBoundsDetails) {\n      // either visibility will change, or location, so remove the old one anyway\n      if (this._latestFitBoundsDetails) {\n        this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n        // true -> false -> true, in which case we still need old value cached here\n      }\n\n      if (newFitBoundsDetails) {\n        this._latestFitBoundsDetails = newFitBoundsDetails;\n      }\n      if (!this._latestFitBoundsDetails) {\n        return;\n      }\n      if (this.agmFitBounds === true) {\n        this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n      }\n    }\n    /**\n     * @internal\n     */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed$.next();\n      this._destroyed$.complete();\n      if (this._latestFitBoundsDetails !== null) {\n        this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n      }\n    }\n  }]);\n  return AgmFitBounds;\n}();\nAgmFitBounds.ɵfac = function AgmFitBounds_Factory(t) {\n  return new (t || AgmFitBounds)(ɵngcc0.ɵɵdirectiveInject(FitBoundsAccessor, 2), ɵngcc0.ɵɵdirectiveInject(FitBoundsService));\n};\nAgmFitBounds.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmFitBounds,\n  selectors: [[\"\", \"agmFitBounds\", \"\"]],\n  inputs: {\n    agmFitBounds: \"agmFitBounds\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmFitBounds.ctorParameters = function () {\n  return [{\n    type: FitBoundsAccessor,\n    decorators: [{\n      type: Self\n    }]\n  }, {\n    type: FitBoundsService\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\nAgmFitBounds = __decorate([__param(0, Self()), __metadata(\"design:paramtypes\", [FitBoundsAccessor, FitBoundsService])], AgmFitBounds);\nvar MarkerManager = /*#__PURE__*/function () {\n  function MarkerManager(_mapsWrapper, _zone) {\n    _classCallCheck(this, MarkerManager);\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markers = new Map();\n  }\n  _createClass(MarkerManager, [{\n    key: \"convertAnimation\",\n    value: function convertAnimation(uiAnim) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(uiAnim === null)) {\n                  _context.next = 4;\n                  break;\n                }\n                return _context.abrupt(\"return\", null);\n              case 4:\n                return _context.abrupt(\"return\", this._mapsWrapper.getNativeMap().then(function () {\n                  return google.maps.Animation[uiAnim];\n                }));\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"deleteMarker\",\n    value: function deleteMarker(marker) {\n      var _this38 = this;\n      var m = this._markers.get(marker);\n      if (m == null) {\n        // marker already deleted\n        return Promise.resolve();\n      }\n      return m.then(function (m) {\n        return _this38._zone.run(function () {\n          m.setMap(null);\n          _this38._markers.delete(marker);\n        });\n      });\n    }\n  }, {\n    key: \"updateMarkerPosition\",\n    value: function updateMarkerPosition(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setPosition({\n          lat: marker.latitude,\n          lng: marker.longitude\n        });\n      });\n    }\n  }, {\n    key: \"updateTitle\",\n    value: function updateTitle(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setTitle(marker.title);\n      });\n    }\n  }, {\n    key: \"updateLabel\",\n    value: function updateLabel(marker) {\n      return this._markers.get(marker).then(function (m) {\n        m.setLabel(marker.label);\n      });\n    }\n  }, {\n    key: \"updateDraggable\",\n    value: function updateDraggable(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setDraggable(marker.draggable);\n      });\n    }\n  }, {\n    key: \"updateIcon\",\n    value: function updateIcon(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setIcon(marker.iconUrl);\n      });\n    }\n  }, {\n    key: \"updateOpacity\",\n    value: function updateOpacity(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setOpacity(marker.opacity);\n      });\n    }\n  }, {\n    key: \"updateVisible\",\n    value: function updateVisible(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setVisible(marker.visible);\n      });\n    }\n  }, {\n    key: \"updateZIndex\",\n    value: function updateZIndex(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setZIndex(marker.zIndex);\n      });\n    }\n  }, {\n    key: \"updateClickable\",\n    value: function updateClickable(marker) {\n      return this._markers.get(marker).then(function (m) {\n        return m.setClickable(marker.clickable);\n      });\n    }\n  }, {\n    key: \"updateAnimation\",\n    value: function updateAnimation(marker) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var m;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._markers.get(marker);\n              case 2:\n                m = _context2.sent;\n                _context2.t0 = m;\n                _context2.next = 6;\n                return this.convertAnimation(marker.animation);\n              case 6:\n                _context2.t1 = _context2.sent;\n                _context2.t0.setAnimation.call(_context2.t0, _context2.t1);\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(marker) {\n      var _this39 = this;\n      var markerPromise = new Promise(function (resolve) {\n        return __awaiter(_this39, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.t0 = this._mapsWrapper;\n                  _context3.t1 = {\n                    lat: marker.latitude,\n                    lng: marker.longitude\n                  };\n                  _context3.t2 = marker.label;\n                  _context3.t3 = marker.draggable;\n                  _context3.t4 = marker.iconUrl;\n                  _context3.t5 = marker.opacity;\n                  _context3.t6 = marker.visible;\n                  _context3.t7 = marker.zIndex;\n                  _context3.t8 = marker.title;\n                  _context3.t9 = marker.clickable;\n                  _context3.next = 12;\n                  return this.convertAnimation(marker.animation);\n                case 12:\n                  _context3.t10 = _context3.sent;\n                  _context3.t11 = {\n                    position: _context3.t1,\n                    label: _context3.t2,\n                    draggable: _context3.t3,\n                    icon: _context3.t4,\n                    opacity: _context3.t5,\n                    visible: _context3.t6,\n                    zIndex: _context3.t7,\n                    title: _context3.t8,\n                    clickable: _context3.t9,\n                    animation: _context3.t10\n                  };\n                  return _context3.abrupt(\"return\", _context3.t0.createMarker.call(_context3.t0, _context3.t11).then(resolve));\n                case 15:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n      });\n      this._markers.set(marker, markerPromise);\n    }\n  }, {\n    key: \"getNativeMarker\",\n    value: function getNativeMarker(marker) {\n      return this._markers.get(marker);\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, marker) {\n      var _this40 = this;\n      return new Observable(function (observer) {\n        _this40._markers.get(marker).then(function (m) {\n          m.addListener(eventName, function (e) {\n            return _this40._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }]);\n  return MarkerManager;\n}();\nMarkerManager.ɵfac = function MarkerManager_Factory(t) {\n  return new (t || MarkerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nMarkerManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MarkerManager,\n  factory: function factory(t) {\n    return MarkerManager.ɵfac(t);\n  }\n});\nMarkerManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\nMarkerManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], MarkerManager);\nvar InfoWindowManager = /*#__PURE__*/function () {\n  function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {\n    _classCallCheck(this, InfoWindowManager);\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markerManager = _markerManager;\n    this._infoWindows = new Map();\n  }\n  _createClass(InfoWindowManager, [{\n    key: \"deleteInfoWindow\",\n    value: function deleteInfoWindow(infoWindow) {\n      var _this41 = this;\n      var iWindow = this._infoWindows.get(infoWindow);\n      if (iWindow == null) {\n        // info window already deleted\n        return Promise.resolve();\n      }\n      return iWindow.then(function (i) {\n        return _this41._zone.run(function () {\n          i.close();\n          _this41._infoWindows.delete(infoWindow);\n        });\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(function (i) {\n        return i.setPosition({\n          lat: infoWindow.latitude,\n          lng: infoWindow.longitude\n        });\n      });\n    }\n  }, {\n    key: \"setZIndex\",\n    value: function setZIndex(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(function (i) {\n        return i.setZIndex(infoWindow.zIndex);\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open(infoWindow) {\n      var _this42 = this;\n      return this._infoWindows.get(infoWindow).then(function (w) {\n        if (infoWindow.hostMarker != null) {\n          return _this42._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {\n            return _this42._mapsWrapper.getNativeMap().then(function (map) {\n              return w.open(map, marker);\n            });\n          });\n        }\n        return _this42._mapsWrapper.getNativeMap().then(function (map) {\n          return w.open(map);\n        });\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(infoWindow) {\n      return this._infoWindows.get(infoWindow).then(function (w) {\n        return w.close();\n      });\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(infoWindow, options) {\n      return this._infoWindows.get(infoWindow).then(function (i) {\n        return i.setOptions(options);\n      });\n    }\n  }, {\n    key: \"addInfoWindow\",\n    value: function addInfoWindow(infoWindow) {\n      var options = {\n        content: infoWindow.content,\n        maxWidth: infoWindow.maxWidth,\n        zIndex: infoWindow.zIndex,\n        disableAutoPan: infoWindow.disableAutoPan\n      };\n      if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n        options.position = {\n          lat: infoWindow.latitude,\n          lng: infoWindow.longitude\n        };\n      }\n      var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n      this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, infoWindow) {\n      var _this43 = this;\n      return new Observable(function (observer) {\n        _this43._infoWindows.get(infoWindow).then(function (i) {\n          i.addListener(eventName, function (e) {\n            return _this43._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }]);\n  return InfoWindowManager;\n}();\nInfoWindowManager.ɵfac = function InfoWindowManager_Factory(t) {\n  return new (t || InfoWindowManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(MarkerManager));\n};\nInfoWindowManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: InfoWindowManager,\n  factory: function factory(t) {\n    return InfoWindowManager.ɵfac(t);\n  }\n});\nInfoWindowManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }, {\n    type: MarkerManager\n  }];\n};\nInfoWindowManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone, MarkerManager])], InfoWindowManager);\nvar AgmInfoWindow_1;\nvar infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmInfoWindow = AgmInfoWindow_1 = /*#__PURE__*/function () {\n  function AgmInfoWindow(_infoWindowManager, _el) {\n    _classCallCheck(this, AgmInfoWindow);\n    this._infoWindowManager = _infoWindowManager;\n    this._el = _el;\n    /**\n     * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n     */\n    this.isOpen = false;\n    /**\n     * Emits an event when the info window is closed.\n     */\n    this.infoWindowClose = new EventEmitter();\n    this._infoWindowAddedToManager = false;\n    this._id = (infoWindowId++).toString();\n  }\n  _createClass(AgmInfoWindow, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n      this._infoWindowManager.addInfoWindow(this);\n      this._infoWindowAddedToManager = true;\n      this._updateOpenState();\n      this._registerEventListeners();\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._infoWindowAddedToManager) {\n        return;\n      }\n      if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' && typeof this.longitude === 'number') {\n        this._infoWindowManager.setPosition(this);\n      }\n      if (changes['zIndex']) {\n        this._infoWindowManager.setZIndex(this);\n      }\n      if (changes['isOpen']) {\n        this._updateOpenState();\n      }\n      this._setInfoWindowOptions(changes);\n    }\n  }, {\n    key: \"_registerEventListeners\",\n    value: function _registerEventListeners() {\n      var _this44 = this;\n      this._infoWindowManager.createEventObservable('closeclick', this).subscribe(function () {\n        _this44.isOpen = false;\n        _this44.infoWindowClose.emit();\n      });\n    }\n  }, {\n    key: \"_updateOpenState\",\n    value: function _updateOpenState() {\n      this.isOpen ? this.open() : this.close();\n    }\n  }, {\n    key: \"_setInfoWindowOptions\",\n    value: function _setInfoWindowOptions(changes) {\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        options[k] = changes[k].currentValue;\n      });\n      this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n  }, {\n    key: \"open\",\n    value: function open() {\n      return this._infoWindowManager.open(this);\n    }\n    /**\n     * Closes the info window.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this45 = this;\n      return this._infoWindowManager.close(this).then(function () {\n        _this45.infoWindowClose.emit();\n      });\n    }\n    /** @internal */\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'AgmInfoWindow-' + this._id.toString();\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._infoWindowManager.deleteInfoWindow(this);\n    }\n  }]);\n  return AgmInfoWindow;\n}();\nAgmInfoWindow.ɵfac = function AgmInfoWindow_Factory(t) {\n  return new (t || AgmInfoWindow)(ɵngcc0.ɵɵdirectiveInject(InfoWindowManager), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nAgmInfoWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AgmInfoWindow,\n  selectors: [[\"agm-info-window\"]],\n  inputs: {\n    isOpen: \"isOpen\",\n    latitude: \"latitude\",\n    longitude: \"longitude\",\n    disableAutoPan: \"disableAutoPan\",\n    zIndex: \"zIndex\",\n    maxWidth: \"maxWidth\"\n  },\n  outputs: {\n    infoWindowClose: \"infoWindowClose\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"agm-info-window-content\"]],\n  template: function AgmInfoWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = function () {\n  return [{\n    type: InfoWindowManager\n  }, {\n    type: ElementRef\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"longitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"zIndex\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmInfoWindow.prototype, \"isOpen\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\nAgmInfoWindow = AgmInfoWindow_1 = __decorate([__metadata(\"design:paramtypes\", [InfoWindowManager, ElementRef])], AgmInfoWindow);\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nvar KmlLayerManager = /*#__PURE__*/function () {\n  function KmlLayerManager(_wrapper, _zone) {\n    _classCallCheck(this, KmlLayerManager);\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new KML Layer to the map.\n   */\n  _createClass(KmlLayerManager, [{\n    key: \"addKmlLayer\",\n    value: function addKmlLayer(layer) {\n      var newLayer = this._wrapper.getNativeMap().then(function (m) {\n        return new google.maps.KmlLayer({\n          clickable: layer.clickable,\n          map: m,\n          preserveViewport: layer.preserveViewport,\n          screenOverlays: layer.screenOverlays,\n          suppressInfoWindows: layer.suppressInfoWindows,\n          url: layer.url,\n          zIndex: layer.zIndex\n        });\n      });\n      this._layers.set(layer, newLayer);\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(layer, options) {\n      this._layers.get(layer).then(function (l) {\n        return l.setOptions(options);\n      });\n    }\n  }, {\n    key: \"deleteKmlLayer\",\n    value: function deleteKmlLayer(layer) {\n      var _this46 = this;\n      this._layers.get(layer).then(function (l) {\n        l.setMap(null);\n        _this46._layers.delete(layer);\n      });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, layer) {\n      var _this47 = this;\n      return new Observable(function (observer) {\n        _this47._layers.get(layer).then(function (m) {\n          m.addListener(eventName, function (e) {\n            return _this47._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }]);\n  return KmlLayerManager;\n}();\nKmlLayerManager.ɵfac = function KmlLayerManager_Factory(t) {\n  return new (t || KmlLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nKmlLayerManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: KmlLayerManager,\n  factory: function factory(t) {\n    return KmlLayerManager.ɵfac(t);\n  }\n});\nKmlLayerManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\nKmlLayerManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], KmlLayerManager);\nvar AgmKmlLayer_1;\nvar layerId$2 = 0;\nvar AgmKmlLayer = AgmKmlLayer_1 = /*#__PURE__*/function () {\n  function AgmKmlLayer(_manager) {\n    _classCallCheck(this, AgmKmlLayer);\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$2++).toString();\n    this._subscriptions = [];\n    /**\n     * If true, the layer receives mouse events. Default value is true.\n     */\n    this.clickable = true;\n    /**\n     * By default, the input map is centered and zoomed to the bounding box of the contents of the\n     * layer.\n     * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n     * were never set.\n     */\n    this.preserveViewport = false;\n    /**\n     * Whether to render the screen overlays. Default true.\n     */\n    this.screenOverlays = true;\n    /**\n     * Suppress the rendering of info windows when layer features are clicked.\n     */\n    this.suppressInfoWindows = false;\n    /**\n     * The URL of the KML document to display.\n     */\n    this.url = null;\n    /**\n     * The z-index of the layer.\n     */\n    this.zIndex = null;\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n    this.layerClick = new EventEmitter();\n    /**\n     * This event is fired when the KML layers default viewport has changed.\n     */\n    this.defaultViewportChange = new EventEmitter();\n    /**\n     * This event is fired when the KML layer has finished loading.\n     * At this point it is safe to read the status property to determine if the layer loaded\n     * successfully.\n     */\n    this.statusChange = new EventEmitter();\n  }\n  _createClass(AgmKmlLayer, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n      this._manager.addKmlLayer(this);\n      this._addedToManager = true;\n      this._addEventListeners();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._addedToManager) {\n        return;\n      }\n      this._updatePolygonOptions(changes);\n    }\n  }, {\n    key: \"_updatePolygonOptions\",\n    value: function _updatePolygonOptions(changes) {\n      var options = Object.keys(changes).filter(function (k) {\n        return AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1;\n      }).reduce(function (obj, k) {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n      if (Object.keys(options).length > 0) {\n        this._manager.setOptions(this, options);\n      }\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this48 = this;\n      var listeners = [{\n        name: 'click',\n        handler: function handler(ev) {\n          return _this48.layerClick.emit(ev);\n        }\n      }, {\n        name: 'defaultviewport_changed',\n        handler: function handler() {\n          return _this48.defaultViewportChange.emit();\n        }\n      }, {\n        name: 'status_changed',\n        handler: function handler() {\n          return _this48.statusChange.emit();\n        }\n      }];\n      listeners.forEach(function (obj) {\n        var os = _this48._manager.createEventObservable(obj.name, _this48).subscribe(obj.handler);\n        _this48._subscriptions.push(os);\n      });\n    }\n    /** @internal */\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AgmKmlLayer-\".concat(this._id.toString());\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._manager.deleteKmlLayer(this);\n      // unsubscribe all registered observable subscriptions\n      this._subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }]);\n  return AgmKmlLayer;\n}();\nAgmKmlLayer.ɵfac = function AgmKmlLayer_Factory(t) {\n  return new (t || AgmKmlLayer)(ɵngcc0.ɵɵdirectiveInject(KmlLayerManager));\n};\nAgmKmlLayer.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmKmlLayer,\n  selectors: [[\"agm-kml-layer\"]],\n  inputs: {\n    clickable: \"clickable\",\n    preserveViewport: \"preserveViewport\",\n    screenOverlays: \"screenOverlays\",\n    suppressInfoWindows: \"suppressInfoWindows\",\n    url: \"url\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    layerClick: \"layerClick\",\n    defaultViewportChange: \"defaultViewportChange\",\n    statusChange: \"statusChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = function () {\n  return [{\n    type: KmlLayerManager\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"clickable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmKmlLayer.prototype, \"url\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmKmlLayer.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"layerClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"statusChange\", void 0);\nAgmKmlLayer = AgmKmlLayer_1 = __decorate([__metadata(\"design:paramtypes\", [KmlLayerManager])], AgmKmlLayer);\nfunction createMVCEventObservable(array) {\n  var eventNames = ['insert_at', 'remove_at', 'set_at'];\n  return fromEventPattern(function (handler) {\n    return eventNames.map(function (evName) {\n      return array.addListener(evName, function (index, previous) {\n        return handler.apply(array, [{\n          'newArr': array.getArray(),\n          evName: evName,\n          index: index,\n          previous: previous\n        }]);\n      });\n    });\n  }, function (_handler, evListeners) {\n    return evListeners.forEach(function (evListener) {\n      return evListener.remove();\n    });\n  });\n}\nvar MvcArrayMock = /*#__PURE__*/function () {\n  function MvcArrayMock() {\n    _classCallCheck(this, MvcArrayMock);\n    this.vals = [];\n    this.listeners = {\n      'remove_at': [],\n      'insert_at': [],\n      'set_at': []\n    };\n  }\n  _createClass(MvcArrayMock, [{\n    key: \"clear\",\n    value: function clear() {\n      for (var i = this.vals.length - 1; i >= 0; i--) {\n        this.removeAt(i);\n      }\n    }\n  }, {\n    key: \"getArray\",\n    value: function getArray() {\n      return _toConsumableArray(this.vals);\n    }\n  }, {\n    key: \"getAt\",\n    value: function getAt(i) {\n      return this.vals[i];\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.vals.length;\n    }\n  }, {\n    key: \"insertAt\",\n    value: function insertAt(i, elem) {\n      this.vals.splice(i, 0, elem);\n      this.listeners.insert_at.map(function (listener) {\n        return listener(i);\n      });\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      var _this49 = this;\n      var deleted = this.vals.pop();\n      this.listeners.remove_at.map(function (listener) {\n        return listener(_this49.vals.length, deleted);\n      });\n      return deleted;\n    }\n  }, {\n    key: \"push\",\n    value: function push(elem) {\n      var _this50 = this;\n      this.vals.push(elem);\n      this.listeners.insert_at.map(function (listener) {\n        return listener(_this50.vals.length - 1);\n      });\n      return this.vals.length;\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(i) {\n      var deleted = this.vals.splice(i, 1)[0];\n      this.listeners.remove_at.map(function (listener) {\n        return listener(i, deleted);\n      });\n      return deleted;\n    }\n  }, {\n    key: \"setAt\",\n    value: function setAt(i, elem) {\n      var deleted = this.vals[i];\n      this.vals[i] = elem;\n      this.listeners.set_at.map(function (listener) {\n        return listener(i, deleted);\n      });\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      this.vals.forEach(callback);\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(eventName, handler) {\n      var listenerArr = this.listeners[eventName];\n      listenerArr.push(handler);\n      return {\n        remove: function remove() {\n          listenerArr.splice(listenerArr.indexOf(handler), 1);\n        }\n      };\n    }\n  }]);\n  return MvcArrayMock;\n}();\nvar PolygonManager = /*#__PURE__*/function () {\n  function PolygonManager(_mapsWrapper, _zone) {\n    _classCallCheck(this, PolygonManager);\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polygons = new Map();\n  }\n  _createClass(PolygonManager, [{\n    key: \"addPolygon\",\n    value: function addPolygon(path) {\n      var polygonPromise = this._mapsWrapper.createPolygon({\n        clickable: path.clickable,\n        draggable: path.draggable,\n        editable: path.editable,\n        fillColor: path.fillColor,\n        fillOpacity: path.fillOpacity,\n        geodesic: path.geodesic,\n        paths: path.paths,\n        strokeColor: path.strokeColor,\n        strokeOpacity: path.strokeOpacity,\n        strokeWeight: path.strokeWeight,\n        visible: path.visible,\n        zIndex: path.zIndex\n      });\n      this._polygons.set(path, polygonPromise);\n    }\n  }, {\n    key: \"updatePolygon\",\n    value: function updatePolygon(polygon) {\n      var _this51 = this;\n      var m = this._polygons.get(polygon);\n      if (m == null) {\n        return Promise.resolve();\n      }\n      return m.then(function (l) {\n        return _this51._zone.run(function () {\n          l.setPaths(polygon.paths);\n        });\n      });\n    }\n  }, {\n    key: \"setPolygonOptions\",\n    value: function setPolygonOptions(path, options) {\n      return this._polygons.get(path).then(function (l) {\n        l.setOptions(options);\n      });\n    }\n  }, {\n    key: \"deletePolygon\",\n    value: function deletePolygon(paths) {\n      var _this52 = this;\n      var m = this._polygons.get(paths);\n      if (m == null) {\n        return Promise.resolve();\n      }\n      return m.then(function (l) {\n        return _this52._zone.run(function () {\n          l.setMap(null);\n          _this52._polygons.delete(paths);\n        });\n      });\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath(polygon) {\n      return this._polygons.get(polygon).then(function (polygon) {\n        return polygon.getPath().getArray();\n      });\n    }\n  }, {\n    key: \"getPaths\",\n    value: function getPaths(polygon) {\n      return this._polygons.get(polygon).then(function (polygon) {\n        return polygon.getPaths().getArray().map(function (p) {\n          return p.getArray();\n        });\n      });\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, path) {\n      var _this53 = this;\n      return new Observable(function (observer) {\n        _this53._polygons.get(path).then(function (l) {\n          l.addListener(eventName, function (e) {\n            return _this53._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"createPathEventObservable\",\n    value: function createPathEventObservable(agmPolygon) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var polygon, paths, pathsChanges$;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._polygons.get(agmPolygon);\n              case 2:\n                polygon = _context4.sent;\n                paths = polygon.getPaths();\n                pathsChanges$ = createMVCEventObservable(paths);\n                return _context4.abrupt(\"return\", pathsChanges$.pipe(startWith({\n                  newArr: paths.getArray()\n                }),\n                // in order to subscribe to them all\n                switchMap(function (parentMVEvent) {\n                  return merge.apply(void 0, _toConsumableArray(\n                  // rest parameter\n                  parentMVEvent.newArr.map(function (chMVC, index) {\n                    return createMVCEventObservable(chMVC).pipe(map(function (chMVCEvent) {\n                      return {\n                        parentMVEvent: parentMVEvent,\n                        chMVCEvent: chMVCEvent,\n                        pathIndex: index\n                      };\n                    }));\n                  }))).pipe(startWith({\n                    parentMVEvent: parentMVEvent,\n                    chMVCEvent: null,\n                    pathIndex: null\n                  }));\n                }),\n                // start the merged ob with an event signinifing change to parent\n                skip(1),\n                // skip the manually added event\n                map(function (_ref) {\n                  var parentMVEvent = _ref.parentMVEvent,\n                    chMVCEvent = _ref.chMVCEvent,\n                    pathIndex = _ref.pathIndex;\n                  var retVal;\n                  if (!chMVCEvent) {\n                    retVal = {\n                      newArr: parentMVEvent.newArr.map(function (subArr) {\n                        return subArr.getArray().map(function (latLng) {\n                          return latLng.toJSON();\n                        });\n                      }),\n                      eventName: parentMVEvent.evName,\n                      index: parentMVEvent.index\n                    };\n                    if (parentMVEvent.previous) {\n                      retVal.previous = parentMVEvent.previous.getArray();\n                    }\n                  } else {\n                    retVal = {\n                      newArr: parentMVEvent.newArr.map(function (subArr) {\n                        return subArr.getArray().map(function (latLng) {\n                          return latLng.toJSON();\n                        });\n                      }),\n                      pathIndex: pathIndex,\n                      eventName: chMVCEvent.evName,\n                      index: chMVCEvent.index\n                    };\n                    if (chMVCEvent.previous) {\n                      retVal.previous = chMVCEvent.previous;\n                    }\n                  }\n                  return retVal;\n                })));\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n  }]);\n  return PolygonManager;\n}();\nPolygonManager.ɵfac = function PolygonManager_Factory(t) {\n  return new (t || PolygonManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nPolygonManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: PolygonManager,\n  factory: function factory(t) {\n    return PolygonManager.ɵfac(t);\n  }\n});\nPolygonManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\nPolygonManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], PolygonManager);\nvar PolylineManager_1;\nvar PolylineManager = PolylineManager_1 = /*#__PURE__*/function () {\n  function PolylineManager(_mapsWrapper, _zone) {\n    _classCallCheck(this, PolylineManager);\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polylines = new Map();\n  }\n  _createClass(PolylineManager, [{\n    key: \"addPolyline\",\n    value: function addPolyline(line) {\n      var _this54 = this;\n      var polylinePromise = this._mapsWrapper.getNativeMap().then(function () {\n        return [PolylineManager_1._convertPoints(line), PolylineManager_1._convertIcons(line)];\n      }).then(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n          path = _ref3[0],\n          icons = _ref3[1];\n        return _this54._mapsWrapper.createPolyline({\n          clickable: line.clickable,\n          draggable: line.draggable,\n          editable: line.editable,\n          geodesic: line.geodesic,\n          strokeColor: line.strokeColor,\n          strokeOpacity: line.strokeOpacity,\n          strokeWeight: line.strokeWeight,\n          visible: line.visible,\n          zIndex: line.zIndex,\n          path: path,\n          icons: icons\n        });\n      });\n      this._polylines.set(line, polylinePromise);\n    }\n  }, {\n    key: \"updatePolylinePoints\",\n    value: function updatePolylinePoints(line) {\n      var _this55 = this;\n      var path = PolylineManager_1._convertPoints(line);\n      var m = this._polylines.get(line);\n      if (m == null) {\n        return Promise.resolve();\n      }\n      return m.then(function (l) {\n        return _this55._zone.run(function () {\n          l.setPath(path);\n        });\n      });\n    }\n  }, {\n    key: \"updateIconSequences\",\n    value: function updateIconSequences(line) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this56 = this;\n        var icons, m;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._mapsWrapper.getNativeMap();\n              case 2:\n                icons = PolylineManager_1._convertIcons(line);\n                m = this._polylines.get(line);\n                if (!(m == null)) {\n                  _context5.next = 6;\n                  break;\n                }\n                return _context5.abrupt(\"return\");\n              case 6:\n                return _context5.abrupt(\"return\", m.then(function (l) {\n                  return _this56._zone.run(function () {\n                    return l.setOptions({\n                      icons: icons\n                    });\n                  });\n                }));\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"setPolylineOptions\",\n    value: function setPolylineOptions(line, options) {\n      return this._polylines.get(line).then(function (l) {\n        l.setOptions(options);\n      });\n    }\n  }, {\n    key: \"deletePolyline\",\n    value: function deletePolyline(line) {\n      var _this57 = this;\n      var m = this._polylines.get(line);\n      if (m == null) {\n        return Promise.resolve();\n      }\n      return m.then(function (l) {\n        return _this57._zone.run(function () {\n          l.setMap(null);\n          _this57._polylines.delete(line);\n        });\n      });\n    }\n  }, {\n    key: \"getMVCPath\",\n    value: function getMVCPath(agmPolyline) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var polyline;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this._polylines.get(agmPolyline);\n              case 2:\n                polyline = _context6.sent;\n                return _context6.abrupt(\"return\", polyline.getPath());\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath(agmPolyline) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getMVCPath(agmPolyline);\n              case 2:\n                return _context7.abrupt(\"return\", _context7.sent.getArray());\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, line) {\n      var _this58 = this;\n      return new Observable(function (observer) {\n        _this58._polylines.get(line).then(function (l) {\n          l.addListener(eventName, function (e) {\n            return _this58._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"createPathEventObservable\",\n    value: function createPathEventObservable(line) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var mvcPath;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.getMVCPath(line);\n              case 2:\n                mvcPath = _context8.sent;\n                return _context8.abrupt(\"return\", createMVCEventObservable(mvcPath));\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n  }], [{\n    key: \"_convertPoints\",\n    value: function _convertPoints(line) {\n      var path = line._getPoints().map(function (point) {\n        return {\n          lat: point.latitude,\n          lng: point.longitude\n        };\n      });\n      return path;\n    }\n  }, {\n    key: \"_convertPath\",\n    value: function _convertPath(path) {\n      var symbolPath = google.maps.SymbolPath[path];\n      if (typeof symbolPath === 'number') {\n        return symbolPath;\n      } else {\n        return path;\n      }\n    }\n  }, {\n    key: \"_convertIcons\",\n    value: function _convertIcons(line) {\n      var icons = line._getIcons().map(function (agmIcon) {\n        return {\n          fixedRotation: agmIcon.fixedRotation,\n          offset: agmIcon.offset,\n          repeat: agmIcon.repeat,\n          icon: {\n            anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n            fillColor: agmIcon.fillColor,\n            fillOpacity: agmIcon.fillOpacity,\n            path: PolylineManager_1._convertPath(agmIcon.path),\n            rotation: agmIcon.rotation,\n            scale: agmIcon.scale,\n            strokeColor: agmIcon.strokeColor,\n            strokeOpacity: agmIcon.strokeOpacity,\n            strokeWeight: agmIcon.strokeWeight\n          }\n        };\n      });\n      // prune undefineds;\n      icons.forEach(function (icon) {\n        Object.entries(icon).forEach(function (_ref4) {\n          var _ref5 = _slicedToArray(_ref4, 2),\n            key = _ref5[0],\n            val = _ref5[1];\n          if (typeof val === 'undefined') {\n            delete icon[key];\n          }\n        });\n        if (typeof icon.icon.anchor.x === 'undefined' || typeof icon.icon.anchor.y === 'undefined') {\n          delete icon.icon.anchor;\n        }\n      });\n      return icons;\n    }\n  }]);\n  return PolylineManager;\n}();\nPolylineManager.ɵfac = function PolylineManager_Factory(t) {\n  return new (t || PolylineManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nPolylineManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: PolylineManager,\n  factory: function factory(t) {\n    return PolylineManager.ɵfac(t);\n  }\n});\nPolylineManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\nPolylineManager = PolylineManager_1 = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], PolylineManager);\nvar RectangleManager = /*#__PURE__*/function () {\n  function RectangleManager(_apiWrapper, _zone) {\n    _classCallCheck(this, RectangleManager);\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._rectangles = new Map();\n  }\n  _createClass(RectangleManager, [{\n    key: \"addRectangle\",\n    value: function addRectangle(rectangle) {\n      this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n        bounds: {\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west\n        },\n        clickable: rectangle.clickable,\n        draggable: rectangle.draggable,\n        editable: rectangle.editable,\n        fillColor: rectangle.fillColor,\n        fillOpacity: rectangle.fillOpacity,\n        strokeColor: rectangle.strokeColor,\n        strokeOpacity: rectangle.strokeOpacity,\n        strokePosition: rectangle.strokePosition,\n        strokeWeight: rectangle.strokeWeight,\n        visible: rectangle.visible,\n        zIndex: rectangle.zIndex\n      }));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n  }, {\n    key: \"removeRectangle\",\n    value: function removeRectangle(rectangle) {\n      var _this59 = this;\n      return this._rectangles.get(rectangle).then(function (r) {\n        r.setMap(null);\n        _this59._rectangles.delete(rectangle);\n      });\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(rectangle, options) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setOptions(options);\n      });\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.getBounds();\n      });\n    }\n  }, {\n    key: \"setBounds\",\n    value: function setBounds(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setBounds({\n          north: rectangle.north,\n          east: rectangle.east,\n          south: rectangle.south,\n          west: rectangle.west\n        });\n      });\n    }\n  }, {\n    key: \"setEditable\",\n    value: function setEditable(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setEditable(rectangle.editable);\n      });\n    }\n  }, {\n    key: \"setDraggable\",\n    value: function setDraggable(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setDraggable(rectangle.draggable);\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(rectangle) {\n      return this._rectangles.get(rectangle).then(function (r) {\n        return r.setVisible(rectangle.visible);\n      });\n    }\n  }, {\n    key: \"createEventObservable\",\n    value: function createEventObservable(eventName, rectangle) {\n      var _this60 = this;\n      return Observable.create(function (observer) {\n        var listener = null;\n        _this60._rectangles.get(rectangle).then(function (r) {\n          listener = r.addListener(eventName, function (e) {\n            return _this60._zone.run(function () {\n              return observer.next(e);\n            });\n          });\n        });\n        return function () {\n          if (listener !== null) {\n            listener.remove();\n          }\n        };\n      });\n    }\n  }]);\n  return RectangleManager;\n}();\nRectangleManager.ɵfac = function RectangleManager_Factory(t) {\n  return new (t || RectangleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\nRectangleManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: RectangleManager,\n  factory: function factory(t) {\n    return RectangleManager.ɵfac(t);\n  }\n});\nRectangleManager.ctorParameters = function () {\n  return [{\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: NgZone\n  }];\n};\nRectangleManager = __decorate([__metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], RectangleManager);\nvar AgmMap_1;\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMap = AgmMap_1 = /*#__PURE__*/function () {\n  function AgmMap(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n    _classCallCheck(this, AgmMap);\n    this._elem = _elem;\n    this._mapsWrapper = _mapsWrapper;\n    this._platformId = _platformId;\n    this._fitBoundsService = _fitBoundsService;\n    this._zone = _zone;\n    /**\n     * The longitude that defines the center of the map.\n     */\n    this.longitude = 0;\n    /**\n     * The latitude that defines the center of the map.\n     */\n    this.latitude = 0;\n    /**\n     * The zoom level of the map. The default zoom level is 8.\n     */\n    this.zoom = 8;\n    /**\n     * Enables/disables if map is draggable.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = true;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n    this.disableDoubleClickZoom = false;\n    /**\n     * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n     * value cannot get updated.\n     */\n    this.disableDefaultUI = false;\n    /**\n     * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n     */\n    this.scrollwheel = true;\n    /**\n     * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n     * enabled by default.\n     */\n    this.keyboardShortcuts = true;\n    /**\n     * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n     * modes, these styles will only apply to labels and geometry.\n     */\n    this.styles = [];\n    /**\n     * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n     * used to\n     * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n     */\n    this.usePanning = false;\n    /**\n     * Sets the viewport to contain the given bounds.\n     * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n     */\n    this.fitBounds = false;\n    /**\n     * The initial enabled/disabled state of the Scale control. This is disabled by default.\n     */\n    this.scaleControl = false;\n    /**\n     * The initial enabled/disabled state of the Map type control.\n     */\n    this.mapTypeControl = false;\n    /**\n     * The initial enabled/disabled state of the Pan control.\n     */\n    this.panControl = false;\n    /**\n     * The initial enabled/disabled state of the Rotate control.\n     */\n    this.rotateControl = false;\n    /**\n     * The initial enabled/disabled state of the Fullscreen control.\n     */\n    this.fullscreenControl = false;\n    /**\n     * The map mapTypeId. Defaults to 'roadmap'.\n     */\n    this.mapTypeId = 'roadmap';\n    /**\n     * When false, map icons are not clickable. A map icon represents a point of interest,\n     * also known as a POI. By default map icons are clickable.\n     */\n    this.clickableIcons = true;\n    /**\n     * A map icon represents a point of interest, also known as a POI.\n     * When map icons are clickable by default, an info window is displayed.\n     * When this property is set to false, the info window will not be shown but the click event\n     * will still fire\n     */\n    this.showDefaultInfoWindow = true;\n    /**\n     * This setting controls how gestures on the map are handled.\n     * Allowed values:\n     * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n     * - 'greedy'      (All touch gestures pan or zoom the map.)\n     * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n     * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n     */\n    this.gestureHandling = 'auto';\n    /**\n     * Controls the automatic switching behavior for the angle of incidence of\n     * the map. The only allowed values are 0 and 45. The value 0 causes the map\n     * to always use a 0° overhead view regardless of the zoom level and\n     * viewport. The value 45 causes the tilt angle to automatically switch to\n     * 45 whenever 45° imagery is available for the current zoom level and\n     * viewport, and switch back to 0 whenever 45° imagery is not available\n     * (this is the default behavior). 45° imagery is only available for\n     * satellite and hybrid map types, within some locations, and at some zoom\n     * levels. Note: getTilt returns the current tilt angle, not the value\n     * specified by this option. Because getTilt and this option refer to\n     * different things, do not bind() the tilt property; doing so may yield\n     * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n     */\n    this.tilt = 0;\n    this._observableSubscriptions = [];\n    /**\n     * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n     * marker or infoWindow).\n     */\n    this.mapClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n    this.mapRightClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n    this.mapDblClick = new EventEmitter();\n    /**\n     * This event emitter is fired when the map center changes.\n     */\n    this.centerChange = new EventEmitter();\n    /**\n     * This event is fired when the viewport bounds have changed.\n     */\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event is fired when the mapTypeId property changes.\n     */\n    this.mapTypeIdChange = new EventEmitter();\n    /**\n     * This event is fired when the map becomes idle after panning or zooming.\n     */\n    this.idle = new EventEmitter();\n    /**\n     * This event is fired when the zoom level has changed.\n     */\n    this.zoomChange = new EventEmitter();\n    /**\n     * This event is fired when the google map is fully initialized.\n     * You get the google.maps.Map instance as a result of this EventEmitter.\n     */\n    this.mapReady = new EventEmitter();\n    /**\n     * This event is fired when the visible tiles have finished loading.\n     */\n    this.tilesLoaded = new EventEmitter();\n  }\n  /** @internal */\n  _createClass(AgmMap, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isPlatformServer(this._platformId)) {\n        // The code is running on the server, do nothing\n        return;\n      }\n      // todo: this should be solved with a new component and a viewChild decorator\n      var container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n      this._initMapInstance(container);\n    }\n  }, {\n    key: \"_initMapInstance\",\n    value: function _initMapInstance(el) {\n      var _this61 = this;\n      this._mapsWrapper.createMap(el, {\n        center: {\n          lat: this.latitude || 0,\n          lng: this.longitude || 0\n        },\n        zoom: this.zoom,\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        controlSize: this.controlSize,\n        disableDefaultUI: this.disableDefaultUI,\n        disableDoubleClickZoom: this.disableDoubleClickZoom,\n        scrollwheel: this.scrollwheel,\n        backgroundColor: this.backgroundColor,\n        draggable: this.draggable,\n        draggableCursor: this.draggableCursor,\n        draggingCursor: this.draggingCursor,\n        keyboardShortcuts: this.keyboardShortcuts,\n        styles: this.styles,\n        zoomControl: this.zoomControl,\n        zoomControlOptions: this.zoomControlOptions,\n        streetViewControl: this.streetViewControl,\n        streetViewControlOptions: this.streetViewControlOptions,\n        scaleControl: this.scaleControl,\n        scaleControlOptions: this.scaleControlOptions,\n        mapTypeControl: this.mapTypeControl,\n        mapTypeControlOptions: this.mapTypeControlOptions,\n        panControl: this.panControl,\n        panControlOptions: this.panControlOptions,\n        rotateControl: this.rotateControl,\n        rotateControlOptions: this.rotateControlOptions,\n        fullscreenControl: this.fullscreenControl,\n        fullscreenControlOptions: this.fullscreenControlOptions,\n        mapTypeId: this.mapTypeId,\n        clickableIcons: this.clickableIcons,\n        gestureHandling: this.gestureHandling,\n        tilt: this.tilt,\n        restriction: this.restriction\n      }).then(function () {\n        return _this61._mapsWrapper.getNativeMap();\n      }).then(function (map) {\n        return _this61.mapReady.emit(map);\n      });\n      // register event listeners\n      this._handleMapCenterChange();\n      this._handleMapZoomChange();\n      this._handleMapMouseEvents();\n      this._handleBoundsChange();\n      this._handleMapTypeIdChange();\n      this._handleTilesLoadedEvent();\n      this._handleIdleEvent();\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      // unsubscribe all registered observable subscriptions\n      this._observableSubscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n      // remove all listeners from the map instance\n      this._mapsWrapper.clearInstanceListeners();\n      if (this._fitBoundsSubscription) {\n        this._fitBoundsSubscription.unsubscribe();\n      }\n    }\n    /* @internal */\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this._updateMapOptionsChanges(changes);\n      this._updatePosition(changes);\n    }\n  }, {\n    key: \"_updateMapOptionsChanges\",\n    value: function _updateMapOptionsChanges(changes) {\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        options[k] = changes[k].currentValue;\n      });\n      this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n  }, {\n    key: \"triggerResize\",\n    value: function triggerResize() {\n      var _this62 = this;\n      var recenter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      // Note: When we would trigger the resize event and show the map in the same turn (which is a\n      // common case for triggering a resize event), then the resize event would not\n      // work (to show the map), so we trigger the event in a timeout.\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          return _this62._mapsWrapper.triggerMapEvent('resize').then(function () {\n            if (recenter) {\n              _this62.fitBounds != null ? _this62._fitBounds() : _this62._setCenter();\n            }\n            resolve();\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_updatePosition\",\n    value: function _updatePosition(changes) {\n      if (changes['latitude'] == null && changes['longitude'] == null && !changes['fitBounds']) {\n        // no position update needed\n        return;\n      }\n      // we prefer fitBounds in changes\n      if ('fitBounds' in changes) {\n        this._fitBounds();\n        return;\n      }\n      if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n        return;\n      }\n      this._setCenter();\n    }\n  }, {\n    key: \"_setCenter\",\n    value: function _setCenter() {\n      var newCenter = {\n        lat: this.latitude,\n        lng: this.longitude\n      };\n      if (this.usePanning) {\n        this._mapsWrapper.panTo(newCenter);\n      } else {\n        this._mapsWrapper.setCenter(newCenter);\n      }\n    }\n  }, {\n    key: \"_fitBounds\",\n    value: function _fitBounds() {\n      switch (this.fitBounds) {\n        case true:\n          this._subscribeToFitBoundsUpdates();\n          break;\n        case false:\n          if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n          }\n          break;\n        default:\n          this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n      }\n    }\n  }, {\n    key: \"_subscribeToFitBoundsUpdates\",\n    value: function _subscribeToFitBoundsUpdates() {\n      var _this63 = this;\n      this._zone.runOutsideAngular(function () {\n        _this63._fitBoundsSubscription = _this63._fitBoundsService.getBounds$().subscribe(function (b) {\n          _this63._zone.run(function () {\n            return _this63._updateBounds(b, _this63.fitBoundsPadding);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_updateBounds\",\n    value: function _updateBounds(bounds, padding) {\n      if (!bounds) {\n        return;\n      }\n      if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n        var newBounds = new google.maps.LatLngBounds();\n        newBounds.union(bounds);\n        bounds = newBounds;\n      }\n      if (this.usePanning) {\n        this._mapsWrapper.panToBounds(bounds, padding);\n        return;\n      }\n      this._mapsWrapper.fitBounds(bounds, padding);\n    }\n  }, {\n    key: \"_isLatLngBoundsLiteral\",\n    value: function _isLatLngBoundsLiteral(bounds) {\n      return bounds != null && bounds.extend === undefined;\n    }\n  }, {\n    key: \"_handleMapCenterChange\",\n    value: function _handleMapCenterChange() {\n      var _this64 = this;\n      var s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(function () {\n        _this64._mapsWrapper.getCenter().then(function (center) {\n          _this64.latitude = center.lat();\n          _this64.longitude = center.lng();\n          _this64.centerChange.emit({\n            lat: _this64.latitude,\n            lng: _this64.longitude\n          });\n        });\n      });\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleBoundsChange\",\n    value: function _handleBoundsChange() {\n      var _this65 = this;\n      var s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(function () {\n        _this65._mapsWrapper.getBounds().then(function (bounds) {\n          _this65.boundsChange.emit(bounds);\n        });\n      });\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleMapTypeIdChange\",\n    value: function _handleMapTypeIdChange() {\n      var _this66 = this;\n      var s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(function () {\n        _this66._mapsWrapper.getMapTypeId().then(function (mapTypeId) {\n          _this66.mapTypeIdChange.emit(mapTypeId);\n        });\n      });\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleMapZoomChange\",\n    value: function _handleMapZoomChange() {\n      var _this67 = this;\n      var s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(function () {\n        _this67._mapsWrapper.getZoom().then(function (z) {\n          _this67.zoom = z;\n          _this67.zoomChange.emit(z);\n        });\n      });\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleIdleEvent\",\n    value: function _handleIdleEvent() {\n      var _this68 = this;\n      var s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(function () {\n        _this68.idle.emit(void 0);\n      });\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleTilesLoadedEvent\",\n    value: function _handleTilesLoadedEvent() {\n      var _this69 = this;\n      var s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(function () {\n        return _this69.tilesLoaded.emit(void 0);\n      });\n      this._observableSubscriptions.push(s);\n    }\n  }, {\n    key: \"_handleMapMouseEvents\",\n    value: function _handleMapMouseEvents() {\n      var _this70 = this;\n      var events = [{\n        name: 'click',\n        emitter: this.mapClick\n      }, {\n        name: 'rightclick',\n        emitter: this.mapRightClick\n      }, {\n        name: 'dblclick',\n        emitter: this.mapDblClick\n      }];\n      events.forEach(function (e) {\n        var s = _this70._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {\n          var value = {\n            coords: {\n              lat: event.latLng.lat(),\n              lng: event.latLng.lng()\n            },\n            placeId: event.placeId\n          };\n          // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n          if (value.placeId && !_this70.showDefaultInfoWindow) {\n            event.stop();\n          }\n          e.emitter.emit(value);\n        });\n        _this70._observableSubscriptions.push(s);\n      });\n    }\n  }]);\n  return AgmMap;\n}();\nAgmMap.ɵfac = function AgmMap_Factory(t) {\n  return new (t || AgmMap)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(FitBoundsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nAgmMap.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AgmMap,\n  selectors: [[\"agm-map\"]],\n  hostVars: 2,\n  hostBindings: function AgmMap_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"sebm-google-map-container\", true);\n    }\n  },\n  inputs: {\n    longitude: \"longitude\",\n    latitude: \"latitude\",\n    zoom: \"zoom\",\n    draggable: [\"mapDraggable\", \"draggable\"],\n    disableDoubleClickZoom: \"disableDoubleClickZoom\",\n    disableDefaultUI: \"disableDefaultUI\",\n    scrollwheel: \"scrollwheel\",\n    keyboardShortcuts: \"keyboardShortcuts\",\n    styles: \"styles\",\n    usePanning: \"usePanning\",\n    fitBounds: \"fitBounds\",\n    scaleControl: \"scaleControl\",\n    mapTypeControl: \"mapTypeControl\",\n    panControl: \"panControl\",\n    rotateControl: \"rotateControl\",\n    fullscreenControl: \"fullscreenControl\",\n    mapTypeId: \"mapTypeId\",\n    clickableIcons: \"clickableIcons\",\n    showDefaultInfoWindow: \"showDefaultInfoWindow\",\n    gestureHandling: \"gestureHandling\",\n    tilt: \"tilt\",\n    minZoom: \"minZoom\",\n    maxZoom: \"maxZoom\",\n    controlSize: \"controlSize\",\n    backgroundColor: \"backgroundColor\",\n    draggableCursor: \"draggableCursor\",\n    draggingCursor: \"draggingCursor\",\n    zoomControl: \"zoomControl\",\n    zoomControlOptions: \"zoomControlOptions\",\n    streetViewControl: \"streetViewControl\",\n    streetViewControlOptions: \"streetViewControlOptions\",\n    fitBoundsPadding: \"fitBoundsPadding\",\n    scaleControlOptions: \"scaleControlOptions\",\n    mapTypeControlOptions: \"mapTypeControlOptions\",\n    panControlOptions: \"panControlOptions\",\n    rotateControlOptions: \"rotateControlOptions\",\n    fullscreenControlOptions: \"fullscreenControlOptions\",\n    restriction: \"restriction\"\n  },\n  outputs: {\n    mapClick: \"mapClick\",\n    mapRightClick: \"mapRightClick\",\n    mapDblClick: \"mapDblClick\",\n    centerChange: \"centerChange\",\n    boundsChange: \"boundsChange\",\n    mapTypeIdChange: \"mapTypeIdChange\",\n    idle: \"idle\",\n    zoomChange: \"zoomChange\",\n    mapReady: \"mapReady\",\n    tilesLoaded: \"tilesLoaded\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([CircleManager, DataLayerManager, DataLayerManager, FitBoundsService, GoogleMapsAPIWrapper, InfoWindowManager, KmlLayerManager, LayerManager, MarkerManager, PolygonManager, PolylineManager, RectangleManager]), ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"agm-map-container-inner\", \"sebm-google-map-container-inner\"], [1, \"agm-map-content\"]],\n  template: function AgmMap_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".agm-map-container-inner[_ngcontent-%COMP%] {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content[_ngcontent-%COMP%] {\\n      display:none;\\n    }\"]\n});\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = ['disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor', 'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl', 'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom', 'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions', 'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions', 'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction'];\nAgmMap.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: GoogleMapsAPIWrapper\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: FitBoundsService\n  }, {\n    type: NgZone\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"longitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"zoom\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"minZoom\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"maxZoom\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"controlSize\", void 0);\n__decorate([Input('mapDraggable'), __metadata(\"design:type\", Object)], AgmMap.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"disableDefaultUI\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scrollwheel\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"backgroundColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"draggableCursor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"draggingCursor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmMap.prototype, \"zoomControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"zoomControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Array)], AgmMap.prototype, \"styles\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"usePanning\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmMap.prototype, \"streetViewControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fitBounds\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scaleControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scaleControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"mapTypeControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"panControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"panControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"rotateControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"rotateControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fullscreenControl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"mapTypeId\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"clickableIcons\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"gestureHandling\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"tilt\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"restriction\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapRightClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"centerChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"boundsChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"idle\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"zoomChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapReady\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"tilesLoaded\", void 0);\nAgmMap = AgmMap_1 = __decorate([__param(2, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, GoogleMapsAPIWrapper, Object, FitBoundsService, NgZone])], AgmMap);\nvar AgmMarker_1;\nvar markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMarker = AgmMarker_1 = /*#__PURE__*/function () {\n  function AgmMarker(_markerManager) {\n    _classCallCheck(this, AgmMarker);\n    this._markerManager = _markerManager;\n    /**\n     * If true, the marker can be dragged. Default value is false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If true, the marker is visible\n     */\n    this.visible = true;\n    /**\n     * Whether to automatically open the child info window when the marker is clicked.\n     */\n    this.openInfoWindow = true;\n    /**\n     * The marker's opacity between 0.0 and 1.0.\n     */\n    this.opacity = 1;\n    /**\n     * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n     * front of markers with lower values. By default, markers are displayed according to their\n     * vertical position on screen, with lower markers appearing in front of markers further up the\n     * screen.\n     */\n    this.zIndex = 1;\n    /**\n     * If true, the marker can be clicked. Default value is true.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.clickable = true;\n    /**\n     * This event is fired when the marker's animation property changes.\n     *\n     * @memberof AgmMarker\n     */\n    this.animationChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the marker.\n     */\n    this.markerClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks twice on the marker.\n     */\n    this.markerDblClick = new EventEmitter();\n    /**\n     * This event is fired when the user rightclicks on the marker.\n     */\n    this.markerRightClick = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the marker.\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the marker.\n     */\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the marker.\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user mouses over the marker.\n     */\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the user mouses outside the marker.\n     */\n    this.mouseOut = new EventEmitter();\n    /** @internal */\n    this.infoWindow = new QueryList();\n    this._markerAddedToManger = false;\n    this._observableSubscriptions = [];\n    this._fitBoundsDetails$ = new ReplaySubject(1);\n    this._id = (markerId++).toString();\n  }\n  /* @internal */\n  _createClass(AgmMarker, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this71 = this;\n      this.handleInfoWindowUpdate();\n      this.infoWindow.changes.subscribe(function () {\n        return _this71.handleInfoWindowUpdate();\n      });\n    }\n  }, {\n    key: \"handleInfoWindowUpdate\",\n    value: function handleInfoWindowUpdate() {\n      var _this72 = this;\n      if (this.infoWindow.length > 1) {\n        throw new Error('Expected no more than one info window.');\n      }\n      this.infoWindow.forEach(function (marker) {\n        marker.hostMarker = _this72;\n      });\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (typeof this.latitude === 'string') {\n        this.latitude = Number(this.latitude);\n      }\n      if (typeof this.longitude === 'string') {\n        this.longitude = Number(this.longitude);\n      }\n      if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n        return;\n      }\n      if (!this._markerAddedToManger) {\n        this._markerManager.addMarker(this);\n        this._updateFitBoundsDetails();\n        this._markerAddedToManger = true;\n        this._addEventListeners();\n        return;\n      }\n      if (changes['latitude'] || changes['longitude']) {\n        this._markerManager.updateMarkerPosition(this);\n        this._updateFitBoundsDetails();\n      }\n      if (changes['title']) {\n        this._markerManager.updateTitle(this);\n      }\n      if (changes['label']) {\n        this._markerManager.updateLabel(this);\n      }\n      if (changes['draggable']) {\n        this._markerManager.updateDraggable(this);\n      }\n      if (changes['iconUrl']) {\n        this._markerManager.updateIcon(this);\n      }\n      if (changes['opacity']) {\n        this._markerManager.updateOpacity(this);\n      }\n      if (changes['visible']) {\n        this._markerManager.updateVisible(this);\n      }\n      if (changes['zIndex']) {\n        this._markerManager.updateZIndex(this);\n      }\n      if (changes['clickable']) {\n        this._markerManager.updateClickable(this);\n      }\n      if (changes['animation']) {\n        this._markerManager.updateAnimation(this);\n      }\n    }\n    /** @internal */\n  }, {\n    key: \"getFitBoundsDetails$\",\n    value: function getFitBoundsDetails$() {\n      return this._fitBoundsDetails$.asObservable();\n    }\n  }, {\n    key: \"_updateFitBoundsDetails\",\n    value: function _updateFitBoundsDetails() {\n      this._fitBoundsDetails$.next({\n        latLng: {\n          lat: this.latitude,\n          lng: this.longitude\n        }\n      });\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this73 = this;\n      var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {\n        if (_this73.openInfoWindow) {\n          _this73.infoWindow.forEach(function (infoWindow) {\n            return infoWindow.open();\n          });\n        }\n        _this73.markerClick.emit(_this73);\n      });\n      this._observableSubscriptions.push(cs);\n      var dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(function () {\n        _this73.markerDblClick.emit(null);\n      });\n      this._observableSubscriptions.push(dcs);\n      var rc = this._markerManager.createEventObservable('rightclick', this).subscribe(function () {\n        _this73.markerRightClick.emit(null);\n      });\n      this._observableSubscriptions.push(rc);\n      var ds = this._markerManager.createEventObservable('dragstart', this).subscribe(function (e) {\n        _this73.dragStart.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n      this._observableSubscriptions.push(ds);\n      var d = this._markerManager.createEventObservable('drag', this).subscribe(function (e) {\n        _this73.drag.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n      this._observableSubscriptions.push(d);\n      var de = this._markerManager.createEventObservable('dragend', this).subscribe(function (e) {\n        _this73.dragEnd.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n      this._observableSubscriptions.push(de);\n      var mover = this._markerManager.createEventObservable('mouseover', this).subscribe(function (e) {\n        _this73.mouseOver.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n      this._observableSubscriptions.push(mover);\n      var mout = this._markerManager.createEventObservable('mouseout', this).subscribe(function (e) {\n        _this73.mouseOut.emit({\n          coords: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      });\n      this._observableSubscriptions.push(mout);\n      var anChng = this._markerManager.createEventObservable('animation_changed', this).subscribe(function () {\n        _this73.animationChange.emit(_this73.animation);\n      });\n      this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'AgmMarker-' + this._id.toString();\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._markerManager.deleteMarker(this);\n      // unsubscribe all registered observable subscriptions\n      this._observableSubscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }]);\n  return AgmMarker;\n}();\nAgmMarker.ɵfac = function AgmMarker_Factory(t) {\n  return new (t || AgmMarker)(ɵngcc0.ɵɵdirectiveInject(MarkerManager));\n};\nAgmMarker.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmMarker,\n  selectors: [[\"agm-marker\"]],\n  contentQueries: function AgmMarker_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmInfoWindow, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoWindow = _t);\n    }\n  },\n  inputs: {\n    latitude: \"latitude\",\n    longitude: \"longitude\",\n    title: \"title\",\n    label: \"label\",\n    draggable: [\"markerDraggable\", \"draggable\"],\n    iconUrl: \"iconUrl\",\n    openInfoWindow: \"openInfoWindow\",\n    opacity: \"opacity\",\n    visible: \"visible\",\n    zIndex: \"zIndex\",\n    animation: \"animation\",\n    clickable: [\"markerClickable\", \"clickable\"]\n  },\n  outputs: {\n    markerClick: \"markerClick\",\n    dragStart: \"dragStart\",\n    drag: \"drag\",\n    dragEnd: \"dragEnd\",\n    mouseOver: \"mouseOver\",\n    mouseOut: \"mouseOut\",\n    animationChange: \"animationChange\",\n    markerDblClick: \"markerDblClick\",\n    markerRightClick: \"markerRightClick\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(function () {\n      return AgmMarker_1;\n    })\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmMarker.ctorParameters = function () {\n  return [{\n    type: MarkerManager\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMarker.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMarker.prototype, \"longitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"title\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"label\", void 0);\n__decorate([Input('markerDraggable'), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"iconUrl\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"openInfoWindow\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"opacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"zIndex\", void 0);\n__decorate([Input('markerClickable'), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"clickable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"animation\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"animationChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerRightClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"dragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"drag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"dragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"mouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"mouseOut\", void 0);\n__decorate([ContentChildren(AgmInfoWindow), __metadata(\"design:type\", QueryList)], AgmMarker.prototype, \"infoWindow\", void 0);\nAgmMarker = AgmMarker_1 = __decorate([__metadata(\"design:paramtypes\", [MarkerManager])], AgmMarker);\nvar AgmPolygon_1;\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nvar AgmPolygon = AgmPolygon_1 = /*#__PURE__*/function () {\n  function AgmPolygon(_polygonManager) {\n    _classCallCheck(this, AgmPolygon);\n    this._polygonManager = _polygonManager;\n    /**\n     * Indicates whether this Polygon handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic\n     * property defines the mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control\n     * points shown at the vertices and on each segment. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will\n     * follow the curvature of the Earth. When false, edges of the polygon are\n     * rendered as straight lines in screen space. Note that the shape of a\n     * geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n    this.geodesic = false;\n    /**\n     * The ordered sequence of coordinates that designates a closed loop.\n     * Unlike polylines, a polygon may consist of one or more paths.\n     *  As a result, the paths property may specify one or more arrays of\n     * LatLng coordinates. Paths are closed automatically; do not repeat the\n     * first vertex of the path as the last vertex. Simple polygons may be\n     * defined using a single array of LatLngs. More complex polygons may\n     * specify an array of arrays. Any simple arrays are converted into Arrays.\n     * Inserting or removing LatLngs from the Array will automatically update\n     * the polygon on the map.\n     */\n    this.paths = [];\n    /**\n     * This event is fired when the DOM click event is fired on the Polygon.\n     */\n    this.polyClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polygon.\n     */\n    this.polyDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polygon.\n     */\n    this.polyDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polygon.\n     */\n    this.polyDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polygon.\n     */\n    this.polyDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polygon.\n     */\n    this.polyMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polygon.\n     */\n    this.polyMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseout.\n     */\n    this.polyMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseover.\n     */\n    this.polyMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polygon\n     */\n    this.polyMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polygon is right-clicked on.\n     */\n    this.polyRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polygon first path changes.\n     */\n    this.polyPathsChange = new EventEmitter();\n    this._polygonAddedToManager = false;\n    this._subscriptions = [];\n  }\n  /** @internal */\n  _createClass(AgmPolygon, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      if (!this._polygonAddedToManager) {\n        this._init();\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._polygonAddedToManager) {\n        this._init();\n        return;\n      }\n      this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      this._polygonManager.addPolygon(this);\n      this._polygonAddedToManager = true;\n      this._addEventListeners();\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this74 = this;\n      var handlers = [{\n        name: 'click',\n        handler: function handler(ev) {\n          return _this74.polyClick.emit(ev);\n        }\n      }, {\n        name: 'dblclick',\n        handler: function handler(ev) {\n          return _this74.polyDblClick.emit(ev);\n        }\n      }, {\n        name: 'drag',\n        handler: function handler(ev) {\n          return _this74.polyDrag.emit(ev);\n        }\n      }, {\n        name: 'dragend',\n        handler: function handler(ev) {\n          return _this74.polyDragEnd.emit(ev);\n        }\n      }, {\n        name: 'dragstart',\n        handler: function handler(ev) {\n          return _this74.polyDragStart.emit(ev);\n        }\n      }, {\n        name: 'mousedown',\n        handler: function handler(ev) {\n          return _this74.polyMouseDown.emit(ev);\n        }\n      }, {\n        name: 'mousemove',\n        handler: function handler(ev) {\n          return _this74.polyMouseMove.emit(ev);\n        }\n      }, {\n        name: 'mouseout',\n        handler: function handler(ev) {\n          return _this74.polyMouseOut.emit(ev);\n        }\n      }, {\n        name: 'mouseover',\n        handler: function handler(ev) {\n          return _this74.polyMouseOver.emit(ev);\n        }\n      }, {\n        name: 'mouseup',\n        handler: function handler(ev) {\n          return _this74.polyMouseUp.emit(ev);\n        }\n      }, {\n        name: 'rightclick',\n        handler: function handler(ev) {\n          return _this74.polyRightClick.emit(ev);\n        }\n      }];\n      handlers.forEach(function (obj) {\n        var os = _this74._polygonManager.createEventObservable(obj.name, _this74).subscribe(obj.handler);\n        _this74._subscriptions.push(os);\n      });\n      this._polygonManager.createPathEventObservable(this).then(function (paths$) {\n        var os = paths$.subscribe(function (pathEvent) {\n          return _this74.polyPathsChange.emit(pathEvent);\n        });\n        _this74._subscriptions.push(os);\n      });\n    }\n  }, {\n    key: \"_updatePolygonOptions\",\n    value: function _updatePolygonOptions(changes) {\n      return Object.keys(changes).filter(function (k) {\n        return AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1;\n      }).reduce(function (obj, k) {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n    }\n    /** @internal */\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._polygonManager.deletePolygon(this);\n      // unsubscribe all registered observable subscriptions\n      this._subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return this._polygonManager.getPath(this);\n    }\n  }, {\n    key: \"getPaths\",\n    value: function getPaths() {\n      return this._polygonManager.getPaths(this);\n    }\n  }]);\n  return AgmPolygon;\n}();\nAgmPolygon.ɵfac = function AgmPolygon_Factory(t) {\n  return new (t || AgmPolygon)(ɵngcc0.ɵɵdirectiveInject(PolygonManager));\n};\nAgmPolygon.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolygon,\n  selectors: [[\"agm-polygon\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"polyDraggable\", \"draggable\"],\n    editable: \"editable\",\n    geodesic: \"geodesic\",\n    paths: \"paths\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    polyClick: \"polyClick\",\n    polyDblClick: \"polyDblClick\",\n    polyDrag: \"polyDrag\",\n    polyDragEnd: \"polyDragEnd\",\n    polyDragStart: \"polyDragStart\",\n    polyMouseDown: \"polyMouseDown\",\n    polyMouseMove: \"polyMouseMove\",\n    polyMouseOut: \"polyMouseOut\",\n    polyMouseOver: \"polyMouseOver\",\n    polyMouseUp: \"polyMouseUp\",\n    polyRightClick: \"polyRightClick\",\n    polyPathsChange: \"polyPathsChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmPolygon._polygonOptionsAttributes = ['clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map', 'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable', 'editable', 'visible'];\nAgmPolygon.ctorParameters = function () {\n  return [{\n    type: PolygonManager\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"clickable\", void 0);\n__decorate([Input('polyDraggable'), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"editable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolygon.prototype, \"fillColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"fillOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"geodesic\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Array)], AgmPolygon.prototype, \"paths\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolygon.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"strokeWeight\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmPolygon.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDrag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyRightClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"polyPathsChange\", void 0);\nAgmPolygon = AgmPolygon_1 = __decorate([__metadata(\"design:paramtypes\", [PolygonManager])], AgmPolygon);\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\nvar AgmPolylineIcon = /*#__PURE__*/function () {\n  function AgmPolylineIcon() {\n    _classCallCheck(this, AgmPolylineIcon);\n  }\n  _createClass(AgmPolylineIcon, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.path == null) {\n        throw new Error('Icon Sequence path is required');\n      }\n    }\n  }]);\n  return AgmPolylineIcon;\n}();\nAgmPolylineIcon.ɵfac = function AgmPolylineIcon_Factory(t) {\n  return new (t || AgmPolylineIcon)();\n};\nAgmPolylineIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolylineIcon,\n  selectors: [[\"agm-icon-sequence\"]],\n  inputs: {\n    fixedRotation: \"fixedRotation\",\n    offset: \"offset\",\n    repeat: \"repeat\",\n    anchorX: \"anchorX\",\n    anchorY: \"anchorY\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    path: \"path\",\n    rotation: \"rotation\",\n    scale: \"scale\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\"\n  }\n});\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"offset\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"repeat\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"path\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"rotation\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"scale\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\nvar AgmPolylinePoint_1;\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nvar AgmPolylinePoint = AgmPolylinePoint_1 = /*#__PURE__*/function () {\n  function AgmPolylinePoint() {\n    _classCallCheck(this, AgmPolylinePoint);\n    /**\n     * This event emitter gets emitted when the position of the point changed.\n     */\n    this.positionChanged = new EventEmitter();\n  }\n  _createClass(AgmPolylinePoint, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['latitude'] || changes['longitude']) {\n        var position = {\n          lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n          lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude\n        };\n        this.positionChanged.emit(position);\n      }\n    }\n    /** @internal */\n  }, {\n    key: \"getFitBoundsDetails$\",\n    value: function getFitBoundsDetails$() {\n      return this.positionChanged.pipe(startWith({\n        lat: this.latitude,\n        lng: this.longitude\n      }), map(function (position) {\n        return {\n          latLng: position\n        };\n      }));\n    }\n  }]);\n  return AgmPolylinePoint;\n}();\nAgmPolylinePoint.ɵfac = function AgmPolylinePoint_Factory(t) {\n  return new (t || AgmPolylinePoint)();\n};\nAgmPolylinePoint.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolylinePoint,\n  selectors: [[\"agm-polyline-point\"]],\n  inputs: {\n    latitude: \"latitude\",\n    longitude: \"longitude\"\n  },\n  outputs: {\n    positionChanged: \"positionChanged\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(function () {\n      return AgmPolylinePoint_1;\n    })\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylinePoint.prototype, \"latitude\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylinePoint.prototype, \"longitude\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\nAgmPolylinePoint = AgmPolylinePoint_1 = __decorate([__metadata(\"design:paramtypes\", [])], AgmPolylinePoint);\nvar AgmPolyline_1;\nvar polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmPolyline = AgmPolyline_1 = /*#__PURE__*/function () {\n  function AgmPolyline(_polylineManager) {\n    _classCallCheck(this, AgmPolyline);\n    this._polylineManager = _polylineManager;\n    /**\n     * Indicates whether this Polyline handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic property defines the\n     * mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control points shown at the\n     * vertices and on each segment. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n     * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n     * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n    this.geodesic = false;\n    /**\n     * Whether this polyline is visible on the map. Defaults to true.\n     */\n    this.visible = true;\n    /**\n     * This event is fired when the DOM click event is fired on the Polyline.\n     */\n    this.lineClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polyline.\n     */\n    this.lineDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polyline.\n     */\n    this.lineDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polyline.\n     */\n    this.lineDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polyline.\n     */\n    this.lineDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polyline.\n     */\n    this.lineMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polyline.\n     */\n    this.lineMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseout.\n     */\n    this.lineMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseover.\n     */\n    this.lineMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polyline\n     */\n    this.lineMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polyline is right-clicked on.\n     */\n    this.lineRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polyline's path changes.\n     */\n    this.polyPathChange = new EventEmitter();\n    this._polylineAddedToManager = false;\n    this._subscriptions = [];\n    this._id = (polylineId++).toString();\n  }\n  /** @internal */\n  _createClass(AgmPolyline, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this75 = this;\n      if (this.points.length) {\n        this.points.forEach(function (point) {\n          var s = point.positionChanged.subscribe(function () {\n            _this75._polylineManager.updatePolylinePoints(_this75);\n          });\n          _this75._subscriptions.push(s);\n        });\n      }\n      if (!this._polylineAddedToManager) {\n        this._init();\n      }\n      var pointSub = this.points.changes.subscribe(function () {\n        return _this75._polylineManager.updatePolylinePoints(_this75);\n      });\n      this._subscriptions.push(pointSub);\n      this._polylineManager.updatePolylinePoints(this);\n      var iconSub = this.iconSequences.changes.subscribe(function () {\n        return _this75._polylineManager.updateIconSequences(_this75);\n      });\n      this._subscriptions.push(iconSub);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._polylineAddedToManager) {\n        this._init();\n        return;\n      }\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        return options[k] = changes[k].currentValue;\n      });\n      this._polylineManager.setPolylineOptions(this, options);\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return this._polylineManager.getPath(this);\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      this._polylineManager.addPolyline(this);\n      this._polylineAddedToManager = true;\n      this._addEventListeners();\n    }\n  }, {\n    key: \"_addEventListeners\",\n    value: function _addEventListeners() {\n      var _this76 = this;\n      var handlers = [{\n        name: 'click',\n        handler: function handler(ev) {\n          return _this76.lineClick.emit(ev);\n        }\n      }, {\n        name: 'dblclick',\n        handler: function handler(ev) {\n          return _this76.lineDblClick.emit(ev);\n        }\n      }, {\n        name: 'drag',\n        handler: function handler(ev) {\n          return _this76.lineDrag.emit(ev);\n        }\n      }, {\n        name: 'dragend',\n        handler: function handler(ev) {\n          return _this76.lineDragEnd.emit(ev);\n        }\n      }, {\n        name: 'dragstart',\n        handler: function handler(ev) {\n          return _this76.lineDragStart.emit(ev);\n        }\n      }, {\n        name: 'mousedown',\n        handler: function handler(ev) {\n          return _this76.lineMouseDown.emit(ev);\n        }\n      }, {\n        name: 'mousemove',\n        handler: function handler(ev) {\n          return _this76.lineMouseMove.emit(ev);\n        }\n      }, {\n        name: 'mouseout',\n        handler: function handler(ev) {\n          return _this76.lineMouseOut.emit(ev);\n        }\n      }, {\n        name: 'mouseover',\n        handler: function handler(ev) {\n          return _this76.lineMouseOver.emit(ev);\n        }\n      }, {\n        name: 'mouseup',\n        handler: function handler(ev) {\n          return _this76.lineMouseUp.emit(ev);\n        }\n      }, {\n        name: 'rightclick',\n        handler: function handler(ev) {\n          return _this76.lineRightClick.emit(ev);\n        }\n      }];\n      handlers.forEach(function (obj) {\n        var os = _this76._polylineManager.createEventObservable(obj.name, _this76).subscribe(obj.handler);\n        _this76._subscriptions.push(os);\n      });\n      this._polylineManager.createPathEventObservable(this).then(function (ob$) {\n        var os = ob$.subscribe(function (pathEvent) {\n          return _this76.polyPathChange.emit(pathEvent);\n        });\n        _this76._subscriptions.push(os);\n      });\n    }\n    /** @internal */\n  }, {\n    key: \"_getPoints\",\n    value: function _getPoints() {\n      if (this.points) {\n        return this.points.toArray();\n      }\n      return [];\n    }\n  }, {\n    key: \"_getIcons\",\n    value: function _getIcons() {\n      if (this.iconSequences) {\n        return this.iconSequences.toArray();\n      }\n      return [];\n    }\n    /** @internal */\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._polylineManager.deletePolyline(this);\n      // unsubscribe all registered observable subscriptions\n      this._subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }]);\n  return AgmPolyline;\n}();\nAgmPolyline.ɵfac = function AgmPolyline_Factory(t) {\n  return new (t || AgmPolyline)(ɵngcc0.ɵɵdirectiveInject(PolylineManager));\n};\nAgmPolyline.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmPolyline,\n  selectors: [[\"agm-polyline\"]],\n  contentQueries: function AgmPolyline_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylinePoint, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylineIcon, false);\n    }\n    if (rf & 2) {\n      var _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.points = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconSequences = _t);\n    }\n  },\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"polylineDraggable\", \"draggable\"],\n    editable: \"editable\",\n    geodesic: \"geodesic\",\n    visible: \"visible\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    strokeWeight: \"strokeWeight\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    lineClick: \"lineClick\",\n    lineDblClick: \"lineDblClick\",\n    lineDrag: \"lineDrag\",\n    lineDragEnd: \"lineDragEnd\",\n    lineDragStart: \"lineDragStart\",\n    lineMouseDown: \"lineMouseDown\",\n    lineMouseMove: \"lineMouseMove\",\n    lineMouseOut: \"lineMouseOut\",\n    lineMouseOver: \"lineMouseOver\",\n    lineMouseUp: \"lineMouseUp\",\n    lineRightClick: \"lineRightClick\",\n    polyPathChange: \"polyPathChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmPolyline._polylineOptionsAttributes = ['draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'zIndex'];\nAgmPolyline.ctorParameters = function () {\n  return [{\n    type: PolylineManager\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"clickable\", void 0);\n__decorate([Input('polylineDraggable'), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"editable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"geodesic\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolyline.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"strokeWeight\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDrag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineRightClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"polyPathChange\", void 0);\n__decorate([ContentChildren(AgmPolylinePoint), __metadata(\"design:type\", QueryList)], AgmPolyline.prototype, \"points\", void 0);\n__decorate([ContentChildren(AgmPolylineIcon), __metadata(\"design:type\", QueryList)], AgmPolyline.prototype, \"iconSequences\", void 0);\nAgmPolyline = AgmPolyline_1 = __decorate([__metadata(\"design:paramtypes\", [PolylineManager])], AgmPolyline);\nvar AgmRectangle_1;\nvar AgmRectangle = AgmRectangle_1 = /*#__PURE__*/function () {\n  function AgmRectangle(_manager) {\n    _classCallCheck(this, AgmRectangle);\n    this._manager = _manager;\n    /**\n     * Indicates whether this Rectangle handles mouse events. Defaults to true.\n     */\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this rectangle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this rectangle by dragging the control points shown at\n     * the center and around the circumference of the rectangle. Defaults to false.\n     */\n    this.editable = false;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n    this.strokeWeight = 0;\n    /**\n     * Whether this rectangle is visible on the map. Defaults to true.\n     */\n    this.visible = true;\n    /**\n     * This event is fired when the rectangle's is changed.\n     */\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n    this.rectangleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n    this.rectangleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the rectangle.\n     */\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the rectangle.\n     */\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the rectangle.\n     */\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the rectangle.\n     */\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the rectangle.\n     */\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseout.\n     */\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseover.\n     */\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the rectangle.\n     */\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the rectangle is right-clicked on.\n     */\n    this.rightClick = new EventEmitter();\n    this._rectangleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n  _createClass(AgmRectangle, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._manager.addRectangle(this);\n      this._rectangleAddedToManager = true;\n      this._registerEventListeners();\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._rectangleAddedToManager) {\n        return;\n      }\n      if (changes['north'] || changes['east'] || changes['south'] || changes['west']) {\n        this._manager.setBounds(this);\n      }\n      if (changes['editable']) {\n        this._manager.setEditable(this);\n      }\n      if (changes['draggable']) {\n        this._manager.setDraggable(this);\n      }\n      if (changes['visible']) {\n        this._manager.setVisible(this);\n      }\n      this._updateRectangleOptionsChanges(changes);\n    }\n  }, {\n    key: \"_updateRectangleOptionsChanges\",\n    value: function _updateRectangleOptionsChanges(changes) {\n      var options = {};\n      var optionKeys = Object.keys(changes).filter(function (k) {\n        return AgmRectangle_1._mapOptions.indexOf(k) !== -1;\n      });\n      optionKeys.forEach(function (k) {\n        options[k] = changes[k].currentValue;\n      });\n      if (optionKeys.length > 0) {\n        this._manager.setOptions(this, options);\n      }\n    }\n  }, {\n    key: \"_registerEventListeners\",\n    value: function _registerEventListeners() {\n      var _this77 = this;\n      var events = new Map();\n      events.set('bounds_changed', this.boundsChange);\n      events.set('click', this.rectangleClick);\n      events.set('dblclick', this.rectangleDblClick);\n      events.set('drag', this.drag);\n      events.set('dragend', this.dragEnd);\n      events.set('dragStart', this.dragStart);\n      events.set('mousedown', this.mouseDown);\n      events.set('mousemove', this.mouseMove);\n      events.set('mouseout', this.mouseOut);\n      events.set('mouseover', this.mouseOver);\n      events.set('mouseup', this.mouseUp);\n      events.set('rightclick', this.rightClick);\n      events.forEach(function (eventEmitter, eventName) {\n        _this77._eventSubscriptions.push(_this77._manager.createEventObservable(eventName, _this77).subscribe(function (value) {\n          switch (eventName) {\n            case 'bounds_changed':\n              _this77._manager.getBounds(_this77).then(function (bounds) {\n                return eventEmitter.emit({\n                  north: bounds.getNorthEast().lat(),\n                  east: bounds.getNorthEast().lng(),\n                  south: bounds.getSouthWest().lat(),\n                  west: bounds.getSouthWest().lng()\n                });\n              });\n              break;\n            default:\n              eventEmitter.emit({\n                coords: {\n                  lat: value.latLng.lat(),\n                  lng: value.latLng.lng()\n                }\n              });\n          }\n        }));\n      });\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._eventSubscriptions.forEach(function (s) {\n        s.unsubscribe();\n      });\n      this._eventSubscriptions = null;\n      this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this._manager.getBounds(this);\n    }\n  }]);\n  return AgmRectangle;\n}();\nAgmRectangle.ɵfac = function AgmRectangle_Factory(t) {\n  return new (t || AgmRectangle)(ɵngcc0.ɵɵdirectiveInject(RectangleManager));\n};\nAgmRectangle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmRectangle,\n  selectors: [[\"agm-rectangle\"]],\n  inputs: {\n    clickable: \"clickable\",\n    draggable: [\"rectangleDraggable\", \"draggable\"],\n    editable: \"editable\",\n    strokePosition: \"strokePosition\",\n    strokeWeight: \"strokeWeight\",\n    visible: \"visible\",\n    north: \"north\",\n    east: \"east\",\n    south: \"south\",\n    west: \"west\",\n    fillColor: \"fillColor\",\n    fillOpacity: \"fillOpacity\",\n    strokeColor: \"strokeColor\",\n    strokeOpacity: \"strokeOpacity\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    boundsChange: \"boundsChange\",\n    rectangleClick: \"rectangleClick\",\n    rectangleDblClick: \"rectangleDblClick\",\n    drag: \"drag\",\n    dragEnd: \"dragEnd\",\n    dragStart: \"dragStart\",\n    mouseDown: \"mouseDown\",\n    mouseMove: \"mouseMove\",\n    mouseOut: \"mouseOut\",\n    mouseOver: \"mouseOver\",\n    mouseUp: \"mouseUp\",\n    rightClick: \"rightClick\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmRectangle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\nAgmRectangle.ctorParameters = function () {\n  return [{\n    type: RectangleManager\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"north\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"east\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"south\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"west\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"clickable\", void 0);\n__decorate([Input('rectangleDraggable'), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"draggable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"editable\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"fillColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"fillOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"strokeColor\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"strokePosition\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"strokeWeight\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"visible\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"zIndex\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"boundsChange\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rectangleClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"drag\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"dragEnd\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"dragStart\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseDown\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseMove\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseOut\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseOver\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseUp\", void 0);\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rightClick\", void 0);\nAgmRectangle = AgmRectangle_1 = __decorate([__metadata(\"design:paramtypes\", [RectangleManager])], AgmRectangle);\nvar layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nvar AgmTransitLayer = /*#__PURE__*/function () {\n  function AgmTransitLayer(_manager) {\n    _classCallCheck(this, AgmTransitLayer);\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$3++).toString();\n    /**\n     * Hide/show transit layer\n     */\n    this.visible = true;\n  }\n  _createClass(AgmTransitLayer, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this._addedToManager) {\n        return;\n      }\n      this._manager.addTransitLayer(this, {\n        visible: this.visible\n      });\n      this._addedToManager = true;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this._addedToManager) {\n        return;\n      }\n      if (changes['visible'] != null) {\n        this._manager.toggleLayerVisibility(this, {\n          visible: changes['visible'].currentValue\n        });\n      }\n    }\n    /** @internal */\n  }, {\n    key: \"id\",\n    value: function id() {\n      return this._id;\n    }\n    /** @internal */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AgmTransitLayer-\".concat(this._id.toString());\n    }\n    /** @internal */\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._manager.deleteLayer(this);\n    }\n  }]);\n  return AgmTransitLayer;\n}();\nAgmTransitLayer.ɵfac = function AgmTransitLayer_Factory(t) {\n  return new (t || AgmTransitLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager));\n};\nAgmTransitLayer.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AgmTransitLayer,\n  selectors: [[\"agm-transit-layer\"]],\n  inputs: {\n    visible: \"visible\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nAgmTransitLayer.ctorParameters = function () {\n  return [{\n    type: LayerManager\n  }];\n};\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmTransitLayer.prototype, \"visible\", void 0);\nAgmTransitLayer = __decorate([__metadata(\"design:paramtypes\", [LayerManager])], AgmTransitLayer);\nvar google$1;\nvar SymbolPath;\n(function (SymbolPath) {\n  SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n  SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n  SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n  SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n  SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nvar ControlPosition;\n(function (ControlPosition) {\n  ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n  ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n  ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n  ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n  ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n  ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n  ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n  ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n  ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n  ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n  ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n  ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\nvar MapTypeId;\n(function (MapTypeId) {\n  /** This map type displays a transparent layer of major streets on satellite images. */\n  MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n  /** This map type displays a normal street map. */\n  MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n  /** This map type displays satellite images. */\n  MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n  /** This map type displays maps with physical features such as terrain and vegetation. */\n  MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\nvar MapTypeControlStyle;\n(function (MapTypeControlStyle) {\n  MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n  MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\nvar ScaleControlStyle;\n(function (ScaleControlStyle) {\n  ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\nvar ZoomControlStyle;\n(function (ZoomControlStyle) {\n  ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n  ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\nvar GeocoderLocationType;\n(function (GeocoderLocationType) {\n  GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n  GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n  GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n  GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\nvar GeocoderStatus;\n(function (GeocoderStatus) {\n  GeocoderStatus[\"ERROR\"] = \"ERROR\";\n  GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n  GeocoderStatus[\"OK\"] = \"OK\";\n  GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n  GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n  GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n  GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\nvar AgmGeocoder = /*#__PURE__*/function () {\n  function AgmGeocoder(loader) {\n    var _this78 = this;\n    _classCallCheck(this, AgmGeocoder);\n    var connectableGeocoder$ = new Observable(function (subscriber) {\n      loader.load().then(function () {\n        return subscriber.next();\n      });\n    }).pipe(map(function () {\n      return _this78._createGeocoder();\n    }), multicast(new ReplaySubject(1)));\n    connectableGeocoder$.connect(); // ignore the subscription\n    // since we will remain subscribed till application exits\n    this.geocoder$ = connectableGeocoder$;\n  }\n  _createClass(AgmGeocoder, [{\n    key: \"geocode\",\n    value: function geocode(request) {\n      var _this79 = this;\n      return this.geocoder$.pipe(switchMap(function (geocoder) {\n        return _this79._getGoogleResults(geocoder, request);\n      }));\n    }\n  }, {\n    key: \"_getGoogleResults\",\n    value: function _getGoogleResults(geocoder, request) {\n      var geocodeObservable = bindCallback(geocoder.geocode);\n      return geocodeObservable(request).pipe(switchMap(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n          results = _ref7[0],\n          status = _ref7[1];\n        if (status === GeocoderStatus.OK) {\n          return of(results);\n        }\n        return throwError(status);\n      }));\n    }\n  }, {\n    key: \"_createGeocoder\",\n    value: function _createGeocoder() {\n      return new google.maps.Geocoder();\n    }\n  }]);\n  return AgmGeocoder;\n}();\nAgmGeocoder.ɵfac = function AgmGeocoder_Factory(t) {\n  return new (t || AgmGeocoder)(ɵngcc0.ɵɵinject(MapsAPILoader));\n};\nAgmGeocoder.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: AgmGeocoder,\n  factory: function factory(t) {\n    return AgmGeocoder.ɵfac(t);\n  },\n  providedIn: 'root'\n});\nAgmGeocoder.ctorParameters = function () {\n  return [{\n    type: MapsAPILoader\n  }];\n};\nAgmGeocoder.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function AgmGeocoder_Factory() {\n    return new AgmGeocoder(ɵɵinject(MapsAPILoader));\n  },\n  token: AgmGeocoder,\n  providedIn: \"root\"\n});\nAgmGeocoder = __decorate([__metadata(\"design:paramtypes\", [MapsAPILoader])], AgmGeocoder);\nvar WindowRef = /*#__PURE__*/function () {\n  function WindowRef() {\n    _classCallCheck(this, WindowRef);\n  }\n  _createClass(WindowRef, [{\n    key: \"getNativeWindow\",\n    value: function getNativeWindow() {\n      return window;\n    }\n  }]);\n  return WindowRef;\n}();\nvar DocumentRef = /*#__PURE__*/function () {\n  function DocumentRef() {\n    _classCallCheck(this, DocumentRef);\n  }\n  _createClass(DocumentRef, [{\n    key: \"getNativeDocument\",\n    value: function getNativeDocument() {\n      return document;\n    }\n  }]);\n  return DocumentRef;\n}();\nvar BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nvar LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nvar LazyMapsAPILoader = /*#__PURE__*/function (_MapsAPILoader) {\n  _inherits(LazyMapsAPILoader, _MapsAPILoader);\n  var _super = _createSuper(LazyMapsAPILoader);\n  function LazyMapsAPILoader() {\n    var _this80;\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var w = arguments.length > 1 ? arguments[1] : undefined;\n    var d = arguments.length > 2 ? arguments[2] : undefined;\n    var localeId = arguments.length > 3 ? arguments[3] : undefined;\n    _classCallCheck(this, LazyMapsAPILoader);\n    _this80 = _super.call(this);\n    _this80.localeId = localeId;\n    _this80._SCRIPT_ID = 'agmGoogleMapsApiScript';\n    _this80.callbackName = \"agmLazyMapsAPILoader\";\n    _this80._config = config || {};\n    _this80._windowRef = w;\n    _this80._documentRef = d;\n    return _this80;\n  }\n  _createClass(LazyMapsAPILoader, [{\n    key: \"load\",\n    value: function load() {\n      var window = this._windowRef.getNativeWindow();\n      if (window.google && window.google.maps) {\n        // Google maps already loaded on the page.\n        return Promise.resolve();\n      }\n      if (this._scriptLoadingPromise) {\n        return this._scriptLoadingPromise;\n      }\n      // this can happen in HMR situations or Stackblitz.io editors.\n      var scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n      if (scriptOnPage) {\n        this._assignScriptLoadingPromise(scriptOnPage);\n        return this._scriptLoadingPromise;\n      }\n      var script = this._documentRef.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.id = this._SCRIPT_ID;\n      script.src = this._getScriptSrc(this.callbackName);\n      this._assignScriptLoadingPromise(script);\n      this._documentRef.getNativeDocument().body.appendChild(script);\n      return this._scriptLoadingPromise;\n    }\n  }, {\n    key: \"_assignScriptLoadingPromise\",\n    value: function _assignScriptLoadingPromise(scriptElem) {\n      var _this81 = this;\n      this._scriptLoadingPromise = new Promise(function (resolve, reject) {\n        _this81._windowRef.getNativeWindow()[_this81.callbackName] = function () {\n          resolve();\n        };\n        scriptElem.onerror = function (error) {\n          reject(error);\n        };\n      });\n    }\n  }, {\n    key: \"_getScriptSrc\",\n    value: function _getScriptSrc(callbackName) {\n      var protocolType = this._config && this._config.protocol || GoogleMapsScriptProtocol.HTTPS;\n      var protocol;\n      switch (protocolType) {\n        case GoogleMapsScriptProtocol.AUTO:\n          protocol = '';\n          break;\n        case GoogleMapsScriptProtocol.HTTP:\n          protocol = 'http:';\n          break;\n        case GoogleMapsScriptProtocol.HTTPS:\n          protocol = 'https:';\n          break;\n      }\n      var hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n      var queryParams = {\n        v: this._config.apiVersion || 'quarterly',\n        callback: callbackName,\n        key: this._config.apiKey,\n        client: this._config.clientId,\n        channel: this._config.channel,\n        libraries: this._config.libraries,\n        region: this._config.region,\n        language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null\n      };\n      var params = Object.keys(queryParams).filter(function (k) {\n        return queryParams[k] != null;\n      }).filter(function (k) {\n        // remove empty arrays\n        return !Array.isArray(queryParams[k]) || Array.isArray(queryParams[k]) && queryParams[k].length > 0;\n      }).map(function (k) {\n        // join arrays as comma seperated strings\n        var i = queryParams[k];\n        if (Array.isArray(i)) {\n          return {\n            key: k,\n            value: i.join(',')\n          };\n        }\n        return {\n          key: k,\n          value: queryParams[k]\n        };\n      }).map(function (entry) {\n        return \"\".concat(entry.key, \"=\").concat(entry.value);\n      }).join('&');\n      return \"\".concat(protocol, \"//\").concat(hostAndPath, \"?\").concat(params);\n    }\n  }]);\n  return LazyMapsAPILoader;\n}(MapsAPILoader);\nLazyMapsAPILoader.ɵfac = function LazyMapsAPILoader_Factory(t) {\n  return new (t || LazyMapsAPILoader)(ɵngcc0.ɵɵinject(LAZY_MAPS_API_CONFIG, 8), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef), ɵngcc0.ɵɵinject(LOCALE_ID));\n};\nLazyMapsAPILoader.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: LazyMapsAPILoader,\n  factory: function factory(t) {\n    return LazyMapsAPILoader.ɵfac(t);\n  }\n});\nLazyMapsAPILoader.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LAZY_MAPS_API_CONFIG]\n    }]\n  }, {\n    type: WindowRef\n  }, {\n    type: DocumentRef\n  }, {\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\nLazyMapsAPILoader = __decorate([__param(0, Optional()), __param(0, Inject(LAZY_MAPS_API_CONFIG)), __param(3, Inject(LOCALE_ID)), __metadata(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])], LazyMapsAPILoader);\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nvar NoOpMapsAPILoader = /*#__PURE__*/function () {\n  function NoOpMapsAPILoader() {\n    _classCallCheck(this, NoOpMapsAPILoader);\n  }\n  _createClass(NoOpMapsAPILoader, [{\n    key: \"load\",\n    value: function load() {\n      if (!window.google || !window.google.maps) {\n        throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n      }\n      return Promise.resolve();\n    }\n  }]);\n  return NoOpMapsAPILoader;\n}(); // exported map types\nvar AgmCoreModule_1;\n/**\n * @internal\n */\nfunction coreDirectives() {\n  return [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nvar AgmCoreModule = AgmCoreModule_1 = /*#__PURE__*/function () {\n  function AgmCoreModule() {\n    _classCallCheck(this, AgmCoreModule);\n  }\n  _createClass(AgmCoreModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    function forRoot(lazyMapsAPILoaderConfig) {\n      return {\n        ngModule: AgmCoreModule_1,\n        providers: [].concat(BROWSER_GLOBALS_PROVIDERS, [{\n          provide: MapsAPILoader,\n          useClass: LazyMapsAPILoader\n        }, {\n          provide: LAZY_MAPS_API_CONFIG,\n          useValue: lazyMapsAPILoaderConfig\n        }])\n      };\n    }\n  }]);\n  return AgmCoreModule;\n}();\nAgmCoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: AgmCoreModule\n});\nAgmCoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function AgmCoreModule_Factory(t) {\n    return new (t || AgmCoreModule)();\n  }\n});\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MapsAPILoader, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GoogleMapsAPIWrapper, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: MapsAPILoader\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LayerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmBicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-bicycling-layer'\n    }]\n  }], function () {\n    return [{\n      type: LayerManager\n    }];\n  }, {\n    visible: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CircleManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmCircle, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-circle'\n    }]\n  }], function () {\n    return [{\n      type: CircleManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['circleDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    strokePosition: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    centerChange: [{\n      type: Output\n    }],\n    circleClick: [{\n      type: Output\n    }],\n    circleDblClick: [{\n      type: Output\n    }],\n    drag: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    mouseDown: [{\n      type: Output\n    }],\n    mouseMove: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseUp: [{\n      type: Output\n    }],\n    radiusChange: [{\n      type: Output\n    }],\n    rightClick: [{\n      type: Output\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataLayerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmDataLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-data-layer'\n    }]\n  }], function () {\n    return [{\n      type: DataLayerManager\n    }];\n  }, {\n    layerClick: [{\n      type: Output\n    }],\n    geoJson: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FitBoundsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: MapsAPILoader\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmFitBounds, [{\n    type: Directive,\n    args: [{\n      selector: '[agmFitBounds]'\n    }]\n  }], function () {\n    return [{\n      type: FitBoundsAccessor,\n      decorators: [{\n        type: Self\n      }]\n    }, {\n      type: FitBoundsService\n    }];\n  }, {\n    agmFitBounds: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MarkerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(InfoWindowManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: MarkerManager\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmInfoWindow, [{\n    type: Component,\n    args: [{\n      selector: 'agm-info-window',\n      template: \"<div class='agm-info-window-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: InfoWindowManager\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    isOpen: [{\n      type: Input\n    }],\n    infoWindowClose: [{\n      type: Output\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }],\n    disableAutoPan: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    maxWidth: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(KmlLayerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmKmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-kml-layer'\n    }]\n  }], function () {\n    return [{\n      type: KmlLayerManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    preserveViewport: [{\n      type: Input\n    }],\n    screenOverlays: [{\n      type: Input\n    }],\n    suppressInfoWindows: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    layerClick: [{\n      type: Output\n    }],\n    defaultViewportChange: [{\n      type: Output\n    }],\n    statusChange: [{\n      type: Output\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PolygonManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PolylineManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RectangleManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmMap, [{\n    type: Component,\n    args: [{\n      selector: 'agm-map',\n      providers: [CircleManager, DataLayerManager, DataLayerManager, FitBoundsService, GoogleMapsAPIWrapper, InfoWindowManager, KmlLayerManager, LayerManager, MarkerManager, PolygonManager, PolylineManager, RectangleManager],\n      host: {\n        // todo: deprecated - we will remove it with the next version\n        '[class.sebm-google-map-container]': 'true'\n      },\n      template: \"\\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\\n              <div class='agm-map-content'>\\n                <ng-content></ng-content>\\n              </div>\\n  \",\n      styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: GoogleMapsAPIWrapper\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: FitBoundsService\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    longitude: [{\n      type: Input\n    }],\n    latitude: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['mapDraggable']\n    }],\n    disableDoubleClickZoom: [{\n      type: Input\n    }],\n    disableDefaultUI: [{\n      type: Input\n    }],\n    scrollwheel: [{\n      type: Input\n    }],\n    keyboardShortcuts: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    usePanning: [{\n      type: Input\n    }],\n    fitBounds: [{\n      type: Input\n    }],\n    scaleControl: [{\n      type: Input\n    }],\n    mapTypeControl: [{\n      type: Input\n    }],\n    panControl: [{\n      type: Input\n    }],\n    rotateControl: [{\n      type: Input\n    }],\n    fullscreenControl: [{\n      type: Input\n    }],\n    mapTypeId: [{\n      type: Input\n    }],\n    clickableIcons: [{\n      type: Input\n    }],\n    showDefaultInfoWindow: [{\n      type: Input\n    }],\n    gestureHandling: [{\n      type: Input\n    }],\n    tilt: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapRightClick: [{\n      type: Output\n    }],\n    mapDblClick: [{\n      type: Output\n    }],\n    centerChange: [{\n      type: Output\n    }],\n    boundsChange: [{\n      type: Output\n    }],\n    mapTypeIdChange: [{\n      type: Output\n    }],\n    idle: [{\n      type: Output\n    }],\n    zoomChange: [{\n      type: Output\n    }],\n    mapReady: [{\n      type: Output\n    }],\n    tilesLoaded: [{\n      type: Output\n    }],\n    minZoom: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    controlSize: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    draggableCursor: [{\n      type: Input\n    }],\n    draggingCursor: [{\n      type: Input\n    }],\n    zoomControl: [{\n      type: Input\n    }],\n    zoomControlOptions: [{\n      type: Input\n    }],\n    streetViewControl: [{\n      type: Input\n    }],\n    streetViewControlOptions: [{\n      type: Input\n    }],\n    fitBoundsPadding: [{\n      type: Input\n    }],\n    scaleControlOptions: [{\n      type: Input\n    }],\n    mapTypeControlOptions: [{\n      type: Input\n    }],\n    panControlOptions: [{\n      type: Input\n    }],\n    rotateControlOptions: [{\n      type: Input\n    }],\n    fullscreenControlOptions: [{\n      type: Input\n    }],\n    restriction: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-marker',\n      providers: [{\n        provide: FitBoundsAccessor,\n        useExisting: forwardRef(function () {\n          return AgmMarker_1;\n        })\n      }],\n      inputs: ['latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl', 'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation'],\n      outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut']\n    }]\n  }], function () {\n    return [{\n      type: MarkerManager\n    }];\n  }, {\n    draggable: [{\n      type: Input,\n      args: ['markerDraggable']\n    }],\n    visible: [{\n      type: Input\n    }],\n    openInfoWindow: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input,\n      args: ['markerClickable']\n    }],\n    animationChange: [{\n      type: Output\n    }],\n    markerClick: [{\n      type: Output\n    }],\n    markerDblClick: [{\n      type: Output\n    }],\n    markerRightClick: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    drag: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    infoWindow: [{\n      type: ContentChildren,\n      args: [AgmInfoWindow]\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    iconUrl: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmPolygon, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polygon'\n    }]\n  }], function () {\n    return [{\n      type: PolygonManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['polyDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    geodesic: [{\n      type: Input\n    }],\n    paths: [{\n      type: Input\n    }],\n    polyClick: [{\n      type: Output\n    }],\n    polyDblClick: [{\n      type: Output\n    }],\n    polyDrag: [{\n      type: Output\n    }],\n    polyDragEnd: [{\n      type: Output\n    }],\n    polyDragStart: [{\n      type: Output\n    }],\n    polyMouseDown: [{\n      type: Output\n    }],\n    polyMouseMove: [{\n      type: Output\n    }],\n    polyMouseOut: [{\n      type: Output\n    }],\n    polyMouseOver: [{\n      type: Output\n    }],\n    polyMouseUp: [{\n      type: Output\n    }],\n    polyRightClick: [{\n      type: Output\n    }],\n    polyPathsChange: [{\n      type: Output\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmPolylineIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polyline agm-icon-sequence'\n    }]\n  }], null, {\n    fixedRotation: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    repeat: [{\n      type: Input\n    }],\n    anchorX: [{\n      type: Input\n    }],\n    anchorY: [{\n      type: Input\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    rotation: [{\n      type: Input\n    }],\n    scale: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmPolylinePoint, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polyline-point',\n      providers: [{\n        provide: FitBoundsAccessor,\n        useExisting: forwardRef(function () {\n          return AgmPolylinePoint_1;\n        })\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    positionChanged: [{\n      type: Output\n    }],\n    latitude: [{\n      type: Input\n    }],\n    longitude: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmPolyline, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-polyline'\n    }]\n  }], function () {\n    return [{\n      type: PolylineManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['polylineDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    geodesic: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    lineClick: [{\n      type: Output\n    }],\n    lineDblClick: [{\n      type: Output\n    }],\n    lineDrag: [{\n      type: Output\n    }],\n    lineDragEnd: [{\n      type: Output\n    }],\n    lineDragStart: [{\n      type: Output\n    }],\n    lineMouseDown: [{\n      type: Output\n    }],\n    lineMouseMove: [{\n      type: Output\n    }],\n    lineMouseOut: [{\n      type: Output\n    }],\n    lineMouseOver: [{\n      type: Output\n    }],\n    lineMouseUp: [{\n      type: Output\n    }],\n    lineRightClick: [{\n      type: Output\n    }],\n    polyPathChange: [{\n      type: Output\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    points: [{\n      type: ContentChildren,\n      args: [AgmPolylinePoint]\n    }],\n    iconSequences: [{\n      type: ContentChildren,\n      args: [AgmPolylineIcon]\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmRectangle, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-rectangle'\n    }]\n  }], function () {\n    return [{\n      type: RectangleManager\n    }];\n  }, {\n    clickable: [{\n      type: Input\n    }],\n    draggable: [{\n      type: Input,\n      args: ['rectangleDraggable']\n    }],\n    editable: [{\n      type: Input\n    }],\n    strokePosition: [{\n      type: Input\n    }],\n    strokeWeight: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    boundsChange: [{\n      type: Output\n    }],\n    rectangleClick: [{\n      type: Output\n    }],\n    rectangleDblClick: [{\n      type: Output\n    }],\n    drag: [{\n      type: Output\n    }],\n    dragEnd: [{\n      type: Output\n    }],\n    dragStart: [{\n      type: Output\n    }],\n    mouseDown: [{\n      type: Output\n    }],\n    mouseMove: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseUp: [{\n      type: Output\n    }],\n    rightClick: [{\n      type: Output\n    }],\n    north: [{\n      type: Input\n    }],\n    east: [{\n      type: Input\n    }],\n    south: [{\n      type: Input\n    }],\n    west: [{\n      type: Input\n    }],\n    fillColor: [{\n      type: Input\n    }],\n    fillOpacity: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeOpacity: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmTransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'agm-transit-layer'\n    }]\n  }], function () {\n    return [{\n      type: LayerManager\n    }];\n  }, {\n    visible: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmGeocoder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MapsAPILoader\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LazyMapsAPILoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LAZY_MAPS_API_CONFIG]\n      }]\n    }, {\n      type: WindowRef\n    }, {\n      type: DocumentRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgmCoreModule, {\n    declarations: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer],\n    exports: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer]\n  });\n})();\n/*@__PURE__*/\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AgmCoreModule, [{\n    type: NgModule,\n    args: [{\n      declarations: coreDirectives(),\n      exports: coreDirectives()\n    }]\n  }], null, null);\n})();\n\n// main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, FitBoundsService as ɵa, coreDirectives as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };","map":{"version":3,"sources":["@agm/core/services/maps-api-loader/maps-api-loader.ts","@agm/core/services/google-maps-api-wrapper.ts","@agm/core/services/managers/layer-manager.ts","@agm/core/directives/bicycling-layer.ts","@agm/core/services/managers/circle-manager.ts","@agm/core/directives/circle.ts","@agm/core/services/managers/data-layer-manager.ts","@agm/core/directives/data-layer.ts","@agm/core/services/fit-bounds.ts","@agm/core/directives/fit-bounds.ts","@agm/core/services/managers/marker-manager.ts","@agm/core/services/managers/info-window-manager.ts","@agm/core/directives/info-window.ts","@agm/core/services/managers/kml-layer-manager.ts","@agm/core/directives/kml-layer.ts","@agm/core/utils/mvcarray-utils.ts","@agm/core/services/managers/polygon-manager.ts","@agm/core/services/managers/polyline-manager.ts","@agm/core/services/managers/rectangle-manager.ts","@agm/core/directives/map.ts","@agm/core/directives/marker.ts","@agm/core/directives/polygon.ts","@agm/core/directives/polyline-icon.ts","@agm/core/directives/polyline-point.ts","@agm/core/directives/polyline.ts","@agm/core/directives/rectangle.ts","@agm/core/directives/transit-layer.ts","@agm/core/services/google-maps-types.ts","@agm/core/services/geocoder-service.ts","@agm/core/utils/browser-globals.ts","@agm/core/services/maps-api-loader/lazy-maps-api-loader.ts","@agm/core/services/maps-api-loader/noop-maps-api-loader.ts","@agm/core/map-types.ts","@agm/core/core.module.ts","@agm/core/index.ts","@agm/core/agm-core.ts"],"names":["tslib_1.__decorate","layerId","tslib_1.__param","google"],"mappings":"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AM,CAAC,CAAC,CAAC;UACrB;QACA,CAAS,MAAM,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;UACtC,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC;QAC/C,CAAS,MAAM;UACL,MAAM,oEAAoE;QACpF;MACA,CAAO,CAAC;IACR;EAAG;EAAA;AAAA,GACF;;;;;;;;;EAAA;AACD,gBAAA,CAAA,cAAA,GAAA;EAAA,OAAA,CAA0C;IAAA,IAAA,EAlFV;EAAoB,CAAA,EAAI;IAAA,IAAA,EAAa;EAAM,CAAA,CAAG;AAAA;AAJjE,gBAAgB,GAAA,UAAA,CAAzB,CADH,UAAA,CAAA,mBAAY,EAAA,CAKmB,oBAAoB,EAAiB,MAAM,CAAA,CAAA,CAAG,EAJjE,gBAAgB,CAqF5B;AACC,IAAA,cAAA;AC3FF,IAAIC,SAAO,GAAG,CAAC;AACf;AACG;AAC4D;AAC7D;AACY;AACE;AAC6B;AACN;AACT;AAC5B;AACa;AACY;AACY;AACzB;AACQ;AACA;AACf;AACD;AACS;AAC8C;AACsC;AAC5E;AACV;AACR;AACA;AACqB;AACI;AACA;AACR;AACpB;AACsB;AACM;AACzB;AACH;AACsB;AACT;AACU;AACuB;AACzB;AACd;AACJ;AACH;AAC2B;AACK;AACf;AACV;AACmB;AACH;AACC;AACE;AACJ;AACC;AACb;AACW;AACO;AACF;AACb;AAC0F;AACA;AACA;AACA;AACA;AACA;AACA;AACnB;AACvE;AACF;AACF;AACD;AACD;AACmB;AACH;AACC;AACC;AACF;AACC;AACd;AACW;AACO;AACF;AACb;AAC0F;AACA;AACA;AACrC;AACpD;AACD;AAC0F;AACnB;AACvE;AACF;AACF;AACD;AACD;AACmB;AACH;AACC;AACI;AACL;AACC;AACd;AACW;AACO;AACF;AACb;AAC0F;AACA;AACA;AACvD;AAClC;AACD;AAC0F;AACnB;AACvE;AACF;AACF;AACD;AACD;AACmB;AACH;AACC;AACE;AACJ;AACE;AACd;AACW;AACO;AACF;AACb;AACuF;AACG;AACA;AACA;AACA;AACA;AACrC;A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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class MapsAPILoader {\n  abstract load(): Promise<void>;\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport * as mapTypes from './google-maps-types';\nimport { Polyline, PolylineOptions } from './google-maps-types';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\n// todo: add types for this\ndeclare var google: any;\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\n@Injectable()\nexport class GoogleMapsAPIWrapper {\n  private _map: Promise<mapTypes.GoogleMap>;\n  private _mapResolver: (value?: mapTypes.GoogleMap) => void;\n\n  constructor(private _loader: MapsAPILoader, private _zone: NgZone) {\n    this._map =\n        new Promise<mapTypes.GoogleMap>((resolve: () => void) => { this._mapResolver = resolve; });\n  }\n\n  createMap(el: HTMLElement, mapOptions: mapTypes.MapOptions): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._loader.load().then(() => {\n        const map = new google.maps.Map(el, mapOptions);\n        this._mapResolver(map as mapTypes.GoogleMap);\n        return;\n      });\n    });\n  }\n\n  setMapOptions(options: mapTypes.MapOptions) {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then((m: mapTypes.GoogleMap) => { m.setOptions(options); });\n    });\n  }\n\n  /**\n   * Creates a google map marker with the map context\n   */\n  createMarker(options: mapTypes.MarkerOptions = {} as mapTypes.MarkerOptions, addToMap: boolean = true):\n      Promise<mapTypes.Marker> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        if (addToMap) {\n          options.map = map;\n        }\n        return new google.maps.Marker(options);\n      });\n    });\n  }\n\n  createInfoWindow(options?: mapTypes.InfoWindowOptions): Promise<mapTypes.InfoWindow> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(() => { return new google.maps.InfoWindow(options); });\n    });\n  }\n\n  /**\n   * Creates a google.map.Circle for the current map.\n   */\n  createCircle(options: mapTypes.CircleOptions): Promise<mapTypes.Circle> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        if (typeof options.strokePosition === 'string') {\n          options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n        }\n        options.map = map;\n        return new google.maps.Circle(options);\n      });\n    });\n  }\n\n  /**\n   * Creates a google.map.Rectangle for the current map.\n   */\n  createRectangle(options: mapTypes.RectangleOptions): Promise<mapTypes.Rectangle> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        options.map = map;\n        return new google.maps.Rectangle(options);\n      });\n    });\n  }\n\n  createPolyline(options: PolylineOptions): Promise<Polyline> {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then((map: mapTypes.GoogleMap) => {\n        let line = new google.maps.Polyline(options);\n        line.setMap(map);\n        return line;\n      });\n    });\n  }\n\n  createPolygon(options: mapTypes.PolygonOptions): Promise<mapTypes.Polygon> {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then((map: mapTypes.GoogleMap) => {\n        let polygon = new google.maps.Polygon(options);\n        polygon.setMap(map);\n        return polygon;\n      });\n    });\n  }\n\n  /**\n   * Creates a new google.map.Data layer for the current map\n   */\n  createDataLayer(options?: mapTypes.DataOptions): Promise<mapTypes.Data> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(m => {\n        let data = new google.maps.Data(options);\n        data.setMap(m);\n        return data;\n      });\n    });\n  }\n\n  /**\n   * Creates a TransitLayer instance for a map\n   * @param {TransitLayerOptions} options - used for setting layer options\n   * @returns {Promise<TransitLayer>} a new transit layer object\n   */\n  createTransitLayer(options: mapTypes.TransitLayerOptions): Promise<mapTypes.TransitLayer>{\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        let newLayer: mapTypes.TransitLayer = new google.maps.TransitLayer();\n        newLayer.setMap(options.visible ? map : null);\n        return newLayer;\n      });\n    });\n  }\n\n  /**\n   * Creates a BicyclingLayer instance for a map\n   * @param {BicyclingLayerOptions} options - used for setting layer options\n   * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n   */\n  createBicyclingLayer(options: mapTypes.BicyclingLayerOptions): Promise<mapTypes.BicyclingLayer>{\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => {\n        let newLayer: mapTypes.BicyclingLayer = new google.maps.BicyclingLayer();\n        newLayer.setMap(options.visible ? map : null);\n        return newLayer;\n      });\n    });\n  }\n\n  /**\n   * Determines if given coordinates are insite a Polygon path.\n   */\n  containsLocation(latLng: mapTypes.LatLngLiteral, polygon: mapTypes.Polygon): Promise<boolean> {\n    return google.maps.geometry.poly.containsLocation(latLng, polygon);\n  }\n\n  subscribeToMapEvent<E>(eventName: string): Observable<E> {\n    return new Observable((observer: Observer<E>) => {\n      this._map.then((m: mapTypes.GoogleMap) => {\n        m.addListener(eventName, (arg: E) => { this._zone.run(() => observer.next(arg)); });\n      });\n    });\n  }\n\n  clearInstanceListeners() {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then((map: mapTypes.GoogleMap) => {\n        google.maps.event.clearInstanceListeners(map);\n      });\n    });\n  }\n\n  setCenter(latLng: mapTypes.LatLngLiteral): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.setCenter(latLng));\n    });\n  }\n\n  getZoom(): Promise<number> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.getZoom());\n    });\n  }\n\n  getBounds(): Promise<mapTypes.LatLngBounds> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.getBounds());\n    });\n  }\n\n  getMapTypeId(): Promise<mapTypes.MapTypeId> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.getMapTypeId());\n    });\n  }\n\n  setZoom(zoom: number): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.setZoom(zoom));\n    });\n  }\n\n  getCenter(): Promise<mapTypes.LatLng> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map: mapTypes.GoogleMap) => map.getCenter());\n    });\n  }\n\n  panTo(latLng: mapTypes.LatLng | mapTypes.LatLngLiteral): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map) => map.panTo(latLng));\n    });\n  }\n\n  panBy(x: number, y: number): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map) => map.panBy(x, y));\n    });\n  }\n\n  fitBounds(latLng: mapTypes.LatLngBounds | mapTypes.LatLngBoundsLiteral, padding?: number | mapTypes.Padding): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map) => map.fitBounds(latLng, padding));\n    });\n  }\n\n  panToBounds(latLng: mapTypes.LatLngBounds | mapTypes.LatLngBoundsLiteral, padding?: number | mapTypes.Padding): Promise<void> {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then((map) => map.panToBounds(latLng, padding));\n    });\n  }\n\n  /**\n   * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n   */\n  getNativeMap(): Promise<mapTypes.GoogleMap> { return this._map; }\n\n  /**\n   * Triggers the given event name on the map instance.\n   */\n  triggerMapEvent(eventName: string): Promise<void> {\n    return this._map.then((m) => google.maps.event.trigger(m, eventName));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AgmBicyclingLayer } from '../../directives/bicycling-layer';\nimport { AgmTransitLayer } from '../../directives/transit-layer';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { BicyclingLayer, BicyclingLayerOptions, GoogleMap, TransitLayer, TransitLayerOptions } from '../google-maps-types';\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\n\n@Injectable()\nexport class LayerManager {\n    private _layers: Map<AgmTransitLayer | AgmBicyclingLayer, Promise<TransitLayer | BicyclingLayer>> =\n        new Map<AgmTransitLayer | AgmBicyclingLayer, Promise<TransitLayer | BicyclingLayer>>();\n\n    constructor(private _wrapper: GoogleMapsAPIWrapper) {}\n\n    /**\n     * Adds a transit layer to a map instance.\n     * @param {AgmTransitLayer} layer - a TransitLayer object\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer: AgmTransitLayer, options: TransitLayerOptions): void {\n        const newLayer = this._wrapper.createTransitLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer: AgmBicyclingLayer, options: BicyclingLayerOptions): void {\n        const newLayer = this._wrapper.createBicyclingLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n    deleteLayer(layer: AgmTransitLayer | AgmBicyclingLayer): Promise<void> {\n        return this._layers.get(layer).then(currentLayer => {\n            currentLayer.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n    toggleLayerVisibility(layer: AgmTransitLayer | AgmBicyclingLayer, options: TransitLayerOptions | BicyclingLayerOptions): Promise<void> {\n        return this._layers.get(layer).then(currentLayer => {\n            if (!options.visible) {\n                currentLayer.setMap(null);\n                return;\n            } else {\n               return this._wrapper.getNativeMap().then( (map: GoogleMap) => {\n                   currentLayer.setMap(map);\n                });\n            }\n        });\n    }\n}\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { LayerManager } from '../services/managers/layer-manager';\n\nlet layerId = 0;\n\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\n@Directive({\n    selector: 'agm-bicycling-layer',\n})\n\nexport class AgmBicyclingLayer implements OnInit, OnChanges, OnDestroy{\n    private _addedToManager = false;\n    private _id: string = (layerId++).toString();\n\n    /**\n     * Hide/show bicycling layer\n     */\n    @Input() visible = true;\n\n    constructor( private _manager: LayerManager ) {}\n\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this, {visible: this.visible});\n        this._addedToManager = true;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, {visible: changes['visible'].currentValue});\n        }\n    }\n\n    /** @internal */\n    id(): string { return this._id; }\n\n    /** @internal */\n    toString(): string { return `AgmBicyclingLayer-${this._id.toString()}`; }\n\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\n\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmCircle } from '../../directives/circle';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport * as mapTypes from '../google-maps-types';\n\ndeclare var google: any;\n\n@Injectable()\nexport class CircleManager {\n  private _circles: Map<AgmCircle, Promise<mapTypes.Circle>> =\n      new Map<AgmCircle, Promise<mapTypes.Circle>>();\n\n  constructor(private _apiWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\n\n  addCircle(circle: AgmCircle) {\n    this._circles.set(circle, this._apiWrapper.createCircle({\n      center: {lat: circle.latitude, lng: circle.longitude},\n      clickable: circle.clickable,\n      draggable: circle.draggable,\n      editable: circle.editable,\n      fillColor: circle.fillColor,\n      fillOpacity: circle.fillOpacity,\n      radius: circle.radius,\n      strokeColor: circle.strokeColor,\n      strokeOpacity: circle.strokeOpacity,\n      strokePosition: circle.strokePosition,\n      strokeWeight: circle.strokeWeight,\n      visible: circle.visible,\n      zIndex: circle.zIndex,\n    }));\n  }\n\n  /**\n   * Removes the given circle from the map.\n   */\n  removeCircle(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => {\n      c.setMap(null);\n      this._circles.delete(circle);\n    });\n  }\n\n  setOptions(circle: AgmCircle, options: mapTypes.CircleOptions): Promise<void> {\n    return this._circles.get(circle).then((c) => {\n      if (typeof options.strokePosition === 'string') {\n        options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n      }\n      c.setOptions(options);\n    });\n  }\n\n  getBounds(circle: AgmCircle): Promise<mapTypes.LatLngBounds> {\n    return this._circles.get(circle).then((c) => c.getBounds());\n  }\n\n  getCenter(circle: AgmCircle): Promise<mapTypes.LatLng> {\n    return this._circles.get(circle).then((c) => c.getCenter());\n  }\n\n  getRadius(circle: AgmCircle): Promise<number> {\n    return this._circles.get(circle).then((c) => c.getRadius());\n  }\n\n  setCenter(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then(\n        (c) => { return c.setCenter({lat: circle.latitude, lng: circle.longitude}); });\n  }\n\n  setEditable(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => { return c.setEditable(circle.editable); });\n  }\n\n  setDraggable(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => { return c.setDraggable(circle.draggable); });\n  }\n\n  setVisible(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => { return c.setVisible(circle.visible); });\n  }\n\n  setRadius(circle: AgmCircle): Promise<void> {\n    return this._circles.get(circle).then((c) => { return c.setRadius(circle.radius); });\n  }\n\n  getNativeCircle(circle: AgmCircle): Promise<mapTypes.Circle> {\n    return this._circles.get(circle);\n  }\n\n  createEventObservable<T>(eventName: string, circle: AgmCircle): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      let listener: mapTypes.MapsEventListener = null;\n      this._circles.get(circle).then((c) => {\n        listener = c.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { MouseEvent } from '../map-types';\nimport { LatLng, LatLngBounds, LatLngLiteral, MouseEvent as MapMouseEvent } from '../services/google-maps-types';\nimport { CircleManager } from '../services/managers/circle-manager';\n\n@Directive({\n  selector: 'agm-circle',\n})\nexport class AgmCircle implements OnInit, OnChanges, OnDestroy {\n  /**\n   * The latitude position of the circle (required).\n   */\n  @Input() latitude: number;\n\n  /**\n   * The clickable position of the circle (required).\n   */\n  @Input() longitude: number;\n\n  /**\n   * Indicates whether this Circle handles mouse events. Defaults to true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * If set to true, the user can drag this circle over the map. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('circleDraggable') draggable = false;\n\n  /**\n   * If set to true, the user can edit this circle by dragging the control points shown at\n   * the center and around the circumference of the circle. Defaults to false.\n   */\n  @Input() editable = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The radius in meters on the Earth's surface.\n   */\n  @Input() radius = 0;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight = 0;\n\n  /**\n   * Whether this circle is visible on the map. Defaults to true.\n   */\n  @Input() visible = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the circle's center is changed.\n   */\n  @Output() centerChange: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output() circleClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the circle.\n   */\n  @Output() circleDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the circle.\n   */\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the circle.\n   */\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user starts dragging the circle.\n   */\n  @Output() dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the circle.\n   */\n  @Output() mouseDown: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the circle.\n   */\n  @Output() mouseMove: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired on circle mouseout.\n   */\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired on circle mouseover.\n   */\n  @Output() mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the circle.\n   */\n  @Output() mouseUp: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the circle's radius is changed.\n   */\n  @Output() radiusChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * This event is fired when the circle is right-clicked on.\n   */\n  @Output() rightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  private _circleAddedToManager = false;\n\n  private static _mapOptions: string[] = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex', 'clickable',\n  ];\n\n  private _eventSubscriptions: Subscription[] = [];\n\n  constructor(private _manager: CircleManager) {}\n\n  /** @internal */\n  ngOnInit() {\n    this._manager.addCircle(this);\n    this._circleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n    if (changes['latitude'] || changes['longitude']) {\n      this._manager.setCenter(this);\n    }\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n    if (changes['radius']) {\n      this._manager.setRadius(this);\n    }\n    this._updateCircleOptionsChanges(changes);\n  }\n\n  private _updateCircleOptionsChanges(changes: {[propName: string]: SimpleChange}) {\n    let options: {[propName: string]: any} = {};\n    let optionKeys =\n        Object.keys(changes).filter(k => AgmCircle._mapOptions.indexOf(k) !== -1);\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    let events: Map<string, EventEmitter<any>> = new Map<string, EventEmitter<any>>();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(\n          this._manager.createEventObservable<MapMouseEvent>(eventName, this).subscribe((value) => {\n            switch (eventName) {\n              case 'radius_changed':\n                this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\n                break;\n              case 'center_changed':\n                this._manager.getCenter(this).then(\n                    (center) =>\n                        eventEmitter.emit({lat: center.lat(), lng: center.lng()} as LatLngLiteral));\n                break;\n              default:\n                eventEmitter.emit(\n                    {coords: {lat: value.latLng.lat(), lng: value.latLng.lng()}} as MouseEvent);\n            }\n          }));\n    });\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(function(s: Subscription) { s.unsubscribe(); });\n    this._eventSubscriptions = null;\n    this._manager.removeCircle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n  getBounds(): Promise<LatLngBounds> { return this._manager.getBounds(this); }\n\n  getCenter(): Promise<LatLng> { return this._manager.getCenter(this); }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmDataLayer } from './../../directives/data-layer';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\nimport { Data, DataOptions, Feature } from './../google-maps-types';\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\n@Injectable()\nexport class DataLayerManager {\n  private _layers: Map<AgmDataLayer, Promise<Data>> =\n  new Map<AgmDataLayer, Promise<Data>>();\n\n  constructor(private _wrapper: GoogleMapsAPIWrapper, private _zone: NgZone) { }\n\n  /**\n   * Adds a new Data Layer to the map.\n   */\n  addDataLayer(layer: AgmDataLayer) {\n    const newLayer = this._wrapper.createDataLayer({\n      style: layer.style,\n    } as DataOptions)\n    .then(d => {\n      if (layer.geoJson) {\n        this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n      }\n      return d;\n    });\n    this._layers.set(layer, newLayer);\n  }\n\n  deleteDataLayer(layer: AgmDataLayer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n\n  updateGeoJson(layer: AgmDataLayer, geoJson: Object | string) {\n    this._layers.get(layer).then(l => {\n      l.forEach(function (feature: Feature) {\n        l.remove(feature);\n\n        var index = l.features.indexOf(feature, 0);\n        if (index > -1) {\n          l.features.splice(index, 1);\n        }\n      });\n      this.getDataFeatures(l, geoJson).then(features => l.features = features);\n    });\n  }\n\n  setDataOptions(layer: AgmDataLayer, options: DataOptions)\n  {\n    this._layers.get(layer).then(l => {\n      l.setControlPosition(options.controlPosition);\n      l.setControls(options.controls);\n      l.setDrawingMode(options.drawingMode);\n      l.setStyle(options.style);\n    });\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given DataLayer as an Observable\n   */\n  createEventObservable<T>(eventName: string, layer: AgmDataLayer): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._layers.get(layer).then((d: Data) => {\n        d.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  /**\n   * Extract features from a geoJson using google.maps Data Class\n   * @param d : google.maps.Data class instance\n   * @param geoJson : url or geojson object\n   */\n  getDataFeatures(d: Data, geoJson: Object | string): Promise<Feature[]> {\n    return new Promise<Feature[]>((resolve, reject) => {\n        if (typeof geoJson === 'object') {\n          try {\n            const features = d.addGeoJson(geoJson);\n            resolve(features);\n          } catch (e) {\n            reject(e);\n          }\n        } else if (typeof geoJson === 'string') {\n          d.loadGeoJson(geoJson, null, resolve);\n        } else {\n          reject(`Impossible to extract features from geoJson: wrong argument type`);\n        }\n      });\n  }\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DataMouseEvent, DataOptions } from './../services/google-maps-types';\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\n\nlet layerId = 0;\n\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\n@Directive({\n  selector: 'agm-data-layer',\n})\nexport class AgmDataLayer implements OnInit, OnDestroy, OnChanges {\n  private static _dataOptionsAttributes: Array<string> = ['style'];\n\n  private _addedToManager = false;\n  private _id: string = (layerId++).toString();\n  private _subscriptions: Subscription[] = [];\n\n  /**\n   * This event is fired when a feature in the layer is clicked.\n   */\n  @Output() layerClick: EventEmitter<DataMouseEvent> = new EventEmitter<DataMouseEvent>();\n\n  /**\n   * The geoJson to be displayed\n   */\n  @Input() geoJson: Object | string | null = null;\n\n  /**\n   * The layer's style function.\n   */\n  @Input() style: () => void;\n\n  constructor(private _manager: DataLayerManager) { }\n\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addDataLayer(this);\n    this._addedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const listeners = [\n      { name: 'click', handler: (ev: DataMouseEvent) => this.layerClick.emit(ev) },\n    ];\n    listeners.forEach((obj) => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  toString(): string { return `AgmDataLayer-${this._id.toString()}`; }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteDataLayer(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  /** @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._addedToManager) {\n      return;\n    }\n\n    var geoJsonChange = changes['geoJson'];\n    if (geoJsonChange) {\n      this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n    }\n\n    let dataOptions: DataOptions = {};\n\n    AgmDataLayer._dataOptionsAttributes.forEach(k => (dataOptions as any)[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : (this as any)[k]);\n\n    this._manager.setDataOptions(this, dataOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\nimport {\n  flatMap,\n  map,\n  sample,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\nimport { LatLng, LatLngBounds, LatLngLiteral } from './google-maps-types';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\ndeclare var google: any;\n\nexport interface FitBoundsDetails {\n  latLng: LatLng | LatLngLiteral;\n}\n\n/**\n * @internal\n */\nexport type BoundsMap = Map<string, LatLng | LatLngLiteral>;\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport abstract class FitBoundsAccessor {\n  abstract getFitBoundsDetails$(): Observable<FitBoundsDetails>;\n}\n\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n@Injectable()\nexport class FitBoundsService {\n  protected readonly bounds$: Observable<LatLngBounds>;\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject<number>(200);\n  protected readonly _includeInBounds$ = new BehaviorSubject<BoundsMap>(new Map<string, LatLng | LatLngLiteral>());\n\n  constructor(loader: MapsAPILoader) {\n    this.bounds$ = from(loader.load()).pipe(\n      flatMap(() => this._includeInBounds$),\n      sample(\n        this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time))),\n      ),\n      map(includeInBounds => this._generateBounds(includeInBounds)),\n      shareReplay(1),\n    );\n  }\n\n  private _generateBounds(\n    includeInBounds: Map<string, LatLng | LatLngLiteral>,\n  ) {\n    const bounds = new google.maps.LatLngBounds() as LatLngBounds;\n    includeInBounds.forEach(b => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng: LatLng | LatLngLiteral) {\n    const id = this._createIdentifier(latLng);\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n    const map = this._includeInBounds$.value;\n    map.set(id, latLng);\n    this._includeInBounds$.next(map);\n  }\n\n  removeFromBounds(latLng: LatLng | LatLngLiteral) {\n    const map = this._includeInBounds$.value;\n    map.delete(this._createIdentifier(latLng));\n    this._includeInBounds$.next(map);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs: number) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$(): Observable<LatLngBounds> {\n    return this.bounds$;\n  }\n\n  protected _createIdentifier(latLng: LatLng | LatLngLiteral): string {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n}\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, Self } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { FitBoundsAccessor, FitBoundsDetails, FitBoundsService } from '../services/fit-bounds';\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\n@Directive({\n  selector: '[agmFitBounds]',\n})\nexport class AgmFitBounds implements OnInit, OnDestroy, OnChanges {\n  /**\n   * If the value is true, the element gets added to the bounds of the map.\n   * Default: true.\n   */\n  @Input() agmFitBounds = true;\n\n  private _destroyed$: Subject<void> = new Subject<void>();\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\n\n  constructor(\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\n    private readonly _fitBoundsService: FitBoundsService,\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnChanges() {\n    this._updateBounds();\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    this._fitBoundsAccessor\n      .getFitBoundsDetails$()\n      .pipe(\n        distinctUntilChanged(\n          (x: FitBoundsDetails, y: FitBoundsDetails) =>\n            x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\n        ),\n        takeUntil(this._destroyed$),\n      )\n      .subscribe(details => this._updateBounds(details));\n  }\n\n  /*\n   Either the location changed, or visible status changed.\n   Possible state changes are\n   invisible -> visible\n   visible -> invisible\n   visible -> visible (new location)\n  */\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\n    // either visibility will change, or location, so remove the old one anyway\n    if (this._latestFitBoundsDetails) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n      // true -> false -> true, in which case we still need old value cached here\n    }\n\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n    if (!this._latestFitBoundsDetails) {\n      return;\n    }\n    if (this.agmFitBounds === true) {\n      this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmMarker } from './../../directives/marker';\n\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\nimport { Marker } from './../google-maps-types';\n\ndeclare var google: any;\n\n@Injectable()\nexport class MarkerManager {\n  protected _markers: Map<AgmMarker, Promise<Marker>> =\n      new Map<AgmMarker, Promise<Marker>>();\n\n  constructor(protected _mapsWrapper: GoogleMapsAPIWrapper, protected _zone: NgZone) {}\n\n  async convertAnimation(uiAnim: 'BOUNCE' | 'DROP' | null): Promise<any>{\n    if (uiAnim === null) {\n      return null;\n    } else {\n      return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n    }\n  }\n\n  deleteMarker(marker: AgmMarker): Promise<void> {\n    const m = this._markers.get(marker);\n    if (m == null) {\n      // marker already deleted\n      return Promise.resolve();\n    }\n    return m.then((m: Marker) => {\n      return this._zone.run(() => {\n        m.setMap(null);\n        this._markers.delete(marker);\n      });\n    });\n  }\n\n  updateMarkerPosition(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then(\n        (m: Marker) => m.setPosition({lat: marker.latitude, lng: marker.longitude}));\n  }\n\n  updateTitle(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setTitle(marker.title));\n  }\n\n  updateLabel(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => { m.setLabel(marker.label); });\n  }\n\n  updateDraggable(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setDraggable(marker.draggable));\n  }\n\n  updateIcon(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setIcon(marker.iconUrl));\n  }\n\n  updateOpacity(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setOpacity(marker.opacity));\n  }\n\n  updateVisible(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setVisible(marker.visible));\n  }\n\n  updateZIndex(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setZIndex(marker.zIndex));\n  }\n\n  updateClickable(marker: AgmMarker): Promise<void> {\n    return this._markers.get(marker).then((m: Marker) => m.setClickable(marker.clickable));\n  }\n\n  async updateAnimation(marker: AgmMarker) {\n    const m = await this._markers.get(marker);\n    m.setAnimation(await this.convertAnimation(marker.animation));\n  }\n\n  addMarker(marker: AgmMarker) {\n    const markerPromise = new Promise<Marker>(async (resolve) =>\n     this._mapsWrapper.createMarker({\n        position: {lat: marker.latitude, lng: marker.longitude},\n        label: marker.label,\n        draggable: marker.draggable,\n        icon: marker.iconUrl,\n        opacity: marker.opacity,\n        visible: marker.visible,\n        zIndex: marker.zIndex,\n        title: marker.title,\n        clickable: marker.clickable,\n        animation: await this.convertAnimation(marker.animation),\n      }).then(resolve));\n    this._markers.set(marker, markerPromise);\n  }\n\n  getNativeMarker(marker: AgmMarker): Promise<Marker> {\n    return this._markers.get(marker);\n  }\n\n  createEventObservable<T>(eventName: string, marker: AgmMarker): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._markers.get(marker).then((m: Marker) => {\n        m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmInfoWindow } from '../../directives/info-window';\n\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { InfoWindow, InfoWindowOptions } from '../google-maps-types';\nimport { MarkerManager } from './marker-manager';\n\n@Injectable()\nexport class InfoWindowManager {\n  private _infoWindows: Map<AgmInfoWindow, Promise<InfoWindow>> =\n      new Map<AgmInfoWindow, Promise<InfoWindow>>();\n\n  constructor(\n      private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone,\n      private _markerManager: MarkerManager) {}\n\n  deleteInfoWindow(infoWindow: AgmInfoWindow): Promise<void> {\n    const iWindow = this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return Promise.resolve();\n    }\n    return iWindow.then((i: InfoWindow) => {\n      return this._zone.run(() => {\n        i.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    });\n  }\n\n  setPosition(infoWindow: AgmInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude,\n    }));\n  }\n\n  setZIndex(infoWindow: AgmInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow)\n        .then((i: InfoWindow) => i.setZIndex(infoWindow.zIndex));\n  }\n\n  open(infoWindow: AgmInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow).then((w) => {\n      if (infoWindow.hostMarker != null) {\n        return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n          return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\n        });\n      }\n      return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\n    });\n  }\n\n  close(infoWindow: AgmInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow).then((w) => w.close());\n  }\n\n  setOptions(infoWindow: AgmInfoWindow, options: InfoWindowOptions) {\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setOptions(options));\n  }\n\n  addInfoWindow(infoWindow: AgmInfoWindow) {\n    const options: InfoWindowOptions = {\n      content: infoWindow.content,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan,\n    };\n    if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n      options.position = {lat: infoWindow.latitude, lng: infoWindow.longitude};\n    }\n    const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n    this._infoWindows.set(infoWindow, infoWindowPromise);\n  }\n\n   /**\n    * Creates a Google Maps event listener for the given InfoWindow as an Observable\n    */\n  createEventObservable<T>(eventName: string, infoWindow: AgmInfoWindow): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._infoWindows.get(infoWindow).then((i: InfoWindow) => {\n        i.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\n\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\n\nimport { AgmMarker } from './marker';\n\nlet infoWindowId = 0;\n\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'agm-info-window',\n  template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class AgmInfoWindow implements OnDestroy, OnChanges, OnInit {\n  /**\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\n   * AgmMarker}).\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\n   * AgmMarker}).\n   */\n  @Input() longitude: number;\n\n  /**\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\n   * visible when it opens.\n   */\n  @Input() disableAutoPan: boolean;\n\n  /**\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\n   * if it is set before a call to open. To change the maximum width when changing content, call\n   * close, update maxWidth, and then open.\n   */\n  @Input() maxWidth: number;\n\n  /**\n   * Holds the marker that is the host of the info window (if available)\n   */\n  hostMarker: AgmMarker;\n\n  /**\n   * Holds the native element that is used for the info window content.\n   */\n  content: Node;\n\n  /**\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n   */\n  @Input() isOpen = false;\n\n  /**\n   * Emits an event when the info window is closed.\n   */\n  @Output() infoWindowClose: EventEmitter<void> = new EventEmitter<void>();\n\n  private static _infoWindowOptionsInputs: string[] = ['disableAutoPan', 'maxWidth'];\n  private _infoWindowAddedToManager = false;\n  private _id: string = (infoWindowId++).toString();\n\n  constructor(private _infoWindowManager: InfoWindowManager, private _el: ElementRef) {}\n\n  ngOnInit() {\n    this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n    this._infoWindowManager.addInfoWindow(this);\n    this._infoWindowAddedToManager = true;\n    this._updateOpenState();\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n    if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n        typeof this.longitude === 'number') {\n      this._infoWindowManager.setPosition(this);\n    }\n    if (changes['zIndex']) {\n      this._infoWindowManager.setZIndex(this);\n    }\n    if (changes['isOpen']) {\n      this._updateOpenState();\n    }\n    this._setInfoWindowOptions(changes);\n  }\n\n  private _registerEventListeners() {\n    this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n      this.isOpen = false;\n      this.infoWindowClose.emit();\n    });\n  }\n\n  private _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n\n  private _setInfoWindowOptions(changes: {[key: string]: SimpleChange}) {\n    let options: {[propName: string]: any} = {};\n    let optionKeys = Object.keys(changes).filter(\n        k => AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1);\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n    this._infoWindowManager.setOptions(this, options);\n  }\n\n  /**\n   * Opens the info window.\n   */\n  open(): Promise<void> { return this._infoWindowManager.open(this); }\n\n  /**\n   * Closes the info window.\n   */\n  close(): Promise<void> {\n    return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  toString(): string { return 'AgmInfoWindow-' + this._id.toString(); }\n\n  /** @internal */\n  ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmKmlLayer } from './../../directives/kml-layer';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\nimport { KmlLayer, KmlLayerOptions } from './../google-maps-types';\n\ndeclare var google: any;\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\n@Injectable()\nexport class KmlLayerManager {\n  private _layers: Map<AgmKmlLayer, Promise<KmlLayer>> =\n      new Map<AgmKmlLayer, Promise<KmlLayer>>();\n\n  constructor(private _wrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\n\n  /**\n   * Adds a new KML Layer to the map.\n   */\n  addKmlLayer(layer: AgmKmlLayer) {\n    const newLayer = this._wrapper.getNativeMap().then(m => {\n      return new google.maps.KmlLayer({\n        clickable: layer.clickable,\n        map: m,\n        preserveViewport: layer.preserveViewport,\n        screenOverlays: layer.screenOverlays,\n        suppressInfoWindows: layer.suppressInfoWindows,\n        url: layer.url,\n        zIndex: layer.zIndex,\n      } as KmlLayerOptions);\n    });\n    this._layers.set(layer, newLayer);\n  }\n\n  setOptions(layer: AgmKmlLayer, options: KmlLayerOptions) {\n    this._layers.get(layer).then(l => l.setOptions(options));\n  }\n\n  deleteKmlLayer(layer: AgmKmlLayer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n      this._layers.delete(layer);\n    });\n  }\n\n  /**\n   * Creates a Google Maps event listener for the given KmlLayer as an Observable\n   */\n  createEventObservable<T>(eventName: string, layer: AgmKmlLayer): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._layers.get(layer).then((m: KmlLayer) => {\n        m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { KmlMouseEvent } from './../services/google-maps-types';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\n\nlet layerId = 0;\n\n@Directive({\n  selector: 'agm-kml-layer',\n})\nexport class AgmKmlLayer implements OnInit, OnDestroy, OnChanges {\n  private _addedToManager = false;\n  private _id: string = (layerId++).toString();\n  private _subscriptions: Subscription[] = [];\n  private static _kmlLayerOptions: string[] =\n      ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\n\n  /**\n   * If true, the layer receives mouse events. Default value is true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * By default, the input map is centered and zoomed to the bounding box of the contents of the\n   * layer.\n   * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n   * were never set.\n   */\n  @Input() preserveViewport = false;\n\n  /**\n   * Whether to render the screen overlays. Default true.\n   */\n  @Input() screenOverlays = true;\n\n  /**\n   * Suppress the rendering of info windows when layer features are clicked.\n   */\n  @Input() suppressInfoWindows = false;\n\n  /**\n   * The URL of the KML document to display.\n   */\n  @Input() url: string = null;\n\n  /**\n   * The z-index of the layer.\n   */\n  @Input() zIndex: number | null = null;\n\n  /**\n   * This event is fired when a feature in the layer is clicked.\n   */\n  @Output() layerClick: EventEmitter<KmlMouseEvent> = new EventEmitter<KmlMouseEvent>();\n\n  /**\n   * This event is fired when the KML layers default viewport has changed.\n   */\n  @Output() defaultViewportChange: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * This event is fired when the KML layer has finished loading.\n   * At this point it is safe to read the status property to determine if the layer loaded\n   * successfully.\n   */\n  @Output() statusChange: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _manager: KmlLayerManager) {}\n\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n    this._manager.addKmlLayer(this);\n    this._addedToManager = true;\n    this._addEventListeners();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._addedToManager) {\n      return;\n    }\n    this._updatePolygonOptions(changes);\n  }\n\n  private _updatePolygonOptions(changes: SimpleChanges) {\n    const options = Object.keys(changes)\n                        .filter(k => AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1)\n                        .reduce((obj: any, k: string) => {\n                          obj[k] = changes[k].currentValue;\n                          return obj;\n                        }, {});\n    if (Object.keys(options).length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _addEventListeners() {\n    const listeners = [\n      {name: 'click', handler: (ev: KmlMouseEvent) => this.layerClick.emit(ev)},\n      {name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit()},\n      {name: 'status_changed', handler: () => this.statusChange.emit()},\n    ];\n    listeners.forEach((obj) => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  toString(): string { return `AgmKmlLayer-${this._id.toString()}`; }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._manager.deleteKmlLayer(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { fromEventPattern, Observable } from 'rxjs';\nimport { MapsEventListener, MVCArray } from '../services/google-maps-types';\n\nexport function createMVCEventObservable<T>(array: MVCArray<T>): Observable<MVCEvent<T>>{\n  const eventNames = ['insert_at', 'remove_at', 'set_at'];\n  return fromEventPattern(\n    (handler: Function) => eventNames.map(evName => array.addListener(evName,\n      (index: number, previous?: T) => handler.apply(array, [ {'newArr': array.getArray(), evName, index, previous} as MVCEvent<T>]))),\n    (_handler: Function, evListeners: MapsEventListener[]) => evListeners.forEach(evListener => evListener.remove()));\n}\n\nexport interface MVCEvent<T> {\n  newArr: T[];\n  evName: MvcEventType;\n  index: number;\n  previous?: T;\n}\n\nexport type MvcEventType = 'insert_at' | 'remove_at' | 'set_at';\n\nexport class MvcArrayMock<T> implements MVCArray<T> {\n  private vals: T[] = [];\n  private listeners: {\n    'remove_at': Function[];\n    'insert_at': Function[];\n    'set_at': Function[];\n    [key: string]: Function[];\n  } = {\n    'remove_at': [] as Function[],\n    'insert_at': [] as Function[],\n    'set_at': [] as Function[],\n  };\n  clear(): void {\n    for (let i = this.vals.length - 1; i >= 0; i--) {\n        this.removeAt(i);\n    }\n  }\n  getArray(): T[] {\n    return [...this.vals];\n  }\n  getAt(i: number): T {\n    return this.vals[i];\n  }\n  getLength(): number {\n    return this.vals.length;\n  }\n  insertAt(i: number, elem: T): void {\n    this.vals.splice(i, 0, elem);\n    this.listeners.insert_at.map(listener => listener(i));\n  }\n  pop(): T {\n    const deleted = this.vals.pop();\n    this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\n    return deleted;\n  }\n  push(elem: T): number {\n    this.vals.push(elem);\n    this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\n    return this.vals.length;\n  }\n  removeAt(i: number): T {\n    const deleted = this.vals.splice(i, 1)[0];\n    this.listeners.remove_at.map(listener => listener(i, deleted));\n    return deleted;\n  }\n  setAt(i: number, elem: T): void {\n    const deleted = this.vals[i];\n    this.vals[i] = elem;\n    this.listeners.set_at.map(listener => listener(i, deleted));\n  }\n  forEach(callback: (elem: T, i: number) => void): void {\n    this.vals.forEach(callback);\n  }\n  addListener(eventName: string, handler: Function): MapsEventListener {\n    const listenerArr = this.listeners[eventName];\n    listenerArr.push(handler);\n    return {\n        remove: () => {\n            listenerArr.splice(listenerArr.indexOf(handler), 1);\n        },\n    };\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { merge, Observable, Observer } from 'rxjs';\nimport { map, skip, startWith, switchMap } from 'rxjs/operators';\n\nimport { AgmPolygon, PathChangePolygonPathEvent, PathCollectionChangePolygonPathEvent, PolygonPathEvent } from '../../directives/polygon';\nimport { createMVCEventObservable, MVCEvent } from '../../utils/mvcarray-utils';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { LatLng, MVCArray, Polygon } from '../google-maps-types';\n\n@Injectable()\nexport class PolygonManager {\n  private _polygons: Map<AgmPolygon, Promise<Polygon>> =\n    new Map<AgmPolygon, Promise<Polygon>>();\n\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) { }\n\n  addPolygon(path: AgmPolygon) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex,\n    });\n    this._polygons.set(path, polygonPromise);\n  }\n\n  updatePolygon(polygon: AgmPolygon): Promise<void> {\n    const m = this._polygons.get(polygon);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: Polygon) => this._zone.run(() => { l.setPaths(polygon.paths); }));\n  }\n\n  setPolygonOptions(path: AgmPolygon, options: { [propName: string]: any }): Promise<void> {\n    return this._polygons.get(path).then((l: Polygon) => { l.setOptions(options); });\n  }\n\n  deletePolygon(paths: AgmPolygon): Promise<void> {\n    const m = this._polygons.get(paths);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: Polygon) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polygons.delete(paths);\n      });\n    });\n  }\n\n  getPath(polygon: AgmPolygon): Promise<Array<LatLng>> {\n    return this._polygons.get(polygon)\n      .then((polygon) => polygon.getPath().getArray());\n  }\n\n  getPaths(polygon: AgmPolygon): Promise<Array<Array<LatLng>>> {\n    return this._polygons.get(polygon)\n      .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\n  }\n\n  createEventObservable<T>(eventName: string, path: AgmPolygon): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._polygons.get(path).then((l: Polygon) => {\n        l.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  async createPathEventObservable(agmPolygon: AgmPolygon): Promise<Observable<PolygonPathEvent<any>>> {\n    const polygon = await this._polygons.get(agmPolygon);\n    const paths = polygon.getPaths();\n    const pathsChanges$ = createMVCEventObservable(paths);\n    return pathsChanges$.pipe(startWith(({ newArr: paths.getArray() } as MVCEvent<MVCArray<LatLng>>)), // in order to subscribe to them all\n      switchMap(parentMVEvent => merge(...// rest parameter\n        parentMVEvent.newArr.map((chMVC, index) =>\n          createMVCEventObservable(chMVC)\n          .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\n        .pipe(startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), // start the merged ob with an event signinifing change to parent\n      skip(1), // skip the manually added event\n      map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\n        let retVal;\n        if (!chMVCEvent) {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            eventName: parentMVEvent.evName,\n            index: parentMVEvent.index,\n          } as PathCollectionChangePolygonPathEvent;\n          if (parentMVEvent.previous) {\n            retVal.previous =  parentMVEvent.previous.getArray();\n          }\n        } else {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            pathIndex,\n            eventName: chMVCEvent.evName,\n            index: chMVCEvent.index,\n          } as PathChangePolygonPathEvent;\n          if (chMVCEvent.previous) {\n            retVal.previous = chMVCEvent.previous;\n          }\n        }\n        return retVal;\n      }));\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmPolyline, PathEvent } from '../../directives/polyline';\nimport { AgmPolylinePoint } from '../../directives/polyline-point';\nimport { createMVCEventObservable } from '../../utils/mvcarray-utils';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { IconSequence, LatLng, LatLngLiteral, MVCArray, Polyline } from '../google-maps-types';\n\ndeclare var google: any;\n\n@Injectable()\nexport class PolylineManager {\n  private _polylines: Map<AgmPolyline, Promise<Polyline>> =\n      new Map<AgmPolyline, Promise<Polyline>>();\n\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\n\n  private static _convertPoints(line: AgmPolyline): Array<LatLngLiteral> {\n    const path = line._getPoints().map((point: AgmPolylinePoint) => {\n      return {lat: point.latitude, lng: point.longitude} as LatLngLiteral;\n    });\n    return path;\n  }\n\n  private static _convertPath(path: 'CIRCLE' | 'BACKWARD_CLOSED_ARROW' | 'BACKWARD_OPEN_ARROW' | 'FORWARD_CLOSED_ARROW' |\n  'FORWARD_CLOSED_ARROW' | string): number | string{\n    const symbolPath = google.maps.SymbolPath[path];\n    if (typeof symbolPath === 'number') {\n      return symbolPath;\n    } else{\n      return path;\n    }\n  }\n\n  private static _convertIcons(line: AgmPolyline): Array<IconSequence> {\n    const icons = line._getIcons().map(agmIcon => ({\n      fixedRotation: agmIcon.fixedRotation,\n      offset: agmIcon.offset,\n      repeat: agmIcon.repeat,\n      icon: {\n        anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n        fillColor: agmIcon.fillColor,\n        fillOpacity: agmIcon.fillOpacity,\n        path: PolylineManager._convertPath(agmIcon.path),\n        rotation: agmIcon.rotation,\n        scale: agmIcon.scale,\n        strokeColor: agmIcon.strokeColor,\n        strokeOpacity: agmIcon.strokeOpacity,\n        strokeWeight: agmIcon.strokeWeight,\n      },\n    } as IconSequence));\n    // prune undefineds;\n    icons.forEach(icon => {\n      Object.entries(icon).forEach(([key, val]) => {\n        if (typeof val === 'undefined') {\n          delete (icon as any)[key];\n        }\n      });\n      if (typeof icon.icon.anchor.x === 'undefined' ||\n        typeof icon.icon.anchor.y === 'undefined') {\n          delete icon.icon.anchor;\n        }\n    });\n    return icons;\n  }\n\n  addPolyline(line: AgmPolyline) {\n    const polylinePromise = this._mapsWrapper.getNativeMap()\n    .then(() => [ PolylineManager._convertPoints(line),\n                  PolylineManager._convertIcons(line)])\n    .then(([path, icons]: [LatLngLiteral[], IconSequence[]]) =>\n      this._mapsWrapper.createPolyline({\n        clickable: line.clickable,\n        draggable: line.draggable,\n        editable: line.editable,\n        geodesic: line.geodesic,\n        strokeColor: line.strokeColor,\n        strokeOpacity: line.strokeOpacity,\n        strokeWeight: line.strokeWeight,\n        visible: line.visible,\n        zIndex: line.zIndex,\n        path: path,\n        icons: icons,\n    }));\n    this._polylines.set(line, polylinePromise);\n  }\n\n  updatePolylinePoints(line: AgmPolyline): Promise<void> {\n    const path = PolylineManager._convertPoints(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: Polyline) => { return this._zone.run(() => { l.setPath(path); }); });\n  }\n\n  async updateIconSequences(line: AgmPolyline): Promise<void> {\n    await this._mapsWrapper.getNativeMap();\n    const icons = PolylineManager._convertIcons(line);\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return;\n    }\n    return m.then(l => this._zone.run(() => l.setOptions({icons: icons}) ) );\n  }\n\n  setPolylineOptions(line: AgmPolyline, options: {[propName: string]: any}):\n      Promise<void> {\n    return this._polylines.get(line).then((l: Polyline) => { l.setOptions(options); });\n  }\n\n  deletePolyline(line: AgmPolyline): Promise<void> {\n    const m = this._polylines.get(line);\n    if (m == null) {\n      return Promise.resolve();\n    }\n    return m.then((l: Polyline) => {\n      return this._zone.run(() => {\n        l.setMap(null);\n        this._polylines.delete(line);\n      });\n    });\n  }\n\n  private async getMVCPath(agmPolyline: AgmPolyline): Promise<MVCArray<LatLng>> {\n    const polyline = await this._polylines.get(agmPolyline);\n    return polyline.getPath();\n  }\n\n  async getPath(agmPolyline: AgmPolyline): Promise<Array<LatLng>> {\n    return (await this.getMVCPath(agmPolyline)).getArray();\n  }\n\n  createEventObservable<T>(eventName: string, line: AgmPolyline): Observable<T> {\n    return new Observable((observer: Observer<T>) => {\n      this._polylines.get(line).then((l: Polyline) => {\n        l.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  async createPathEventObservable(line: AgmPolyline): Promise<Observable<PathEvent>> {\n    const mvcPath = await this.getMVCPath(line);\n    return createMVCEventObservable(mvcPath);\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\n\nimport { Observable, Observer } from 'rxjs';\n\nimport { AgmRectangle } from '../../directives/rectangle';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport * as mapTypes from '../google-maps-types';\n\n@Injectable()\nexport class RectangleManager {\n  private _rectangles: Map<AgmRectangle, Promise<mapTypes.Rectangle>> =\n      new Map<AgmRectangle, Promise<mapTypes.Rectangle>>();\n\n  constructor(private _apiWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\n\n  addRectangle(rectangle: AgmRectangle) {\n    this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n      bounds: {\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      },\n      clickable: rectangle.clickable,\n      draggable: rectangle.draggable,\n      editable: rectangle.editable,\n      fillColor: rectangle.fillColor,\n      fillOpacity: rectangle.fillOpacity,\n      strokeColor: rectangle.strokeColor,\n      strokeOpacity: rectangle.strokeOpacity,\n      strokePosition: rectangle.strokePosition,\n      strokeWeight: rectangle.strokeWeight,\n      visible: rectangle.visible,\n      zIndex: rectangle.zIndex,\n    }));\n  }\n\n  /**\n   * Removes the given rectangle from the map.\n   */\n  removeRectangle(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      r.setMap(null);\n      this._rectangles.delete(rectangle);\n    });\n  }\n\n  setOptions(rectangle: AgmRectangle, options: mapTypes.RectangleOptions): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n  }\n\n  getBounds(rectangle: AgmRectangle): Promise<mapTypes.LatLngBounds> {\n    return this._rectangles.get(rectangle).then((r) => r.getBounds());\n  }\n\n  setBounds(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west,\n      });\n    });\n  }\n\n  setEditable(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setEditable(rectangle.editable);\n    });\n  }\n\n  setDraggable(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setDraggable(rectangle.draggable);\n    });\n  }\n\n  setVisible(rectangle: AgmRectangle): Promise<void> {\n    return this._rectangles.get(rectangle).then((r) => {\n      return r.setVisible(rectangle.visible);\n    });\n  }\n\n  createEventObservable<T>(eventName: string, rectangle: AgmRectangle): Observable<T> {\n    return Observable.create((observer: Observer<T>) => {\n      let listener: mapTypes.MapsEventListener = null;\n      this._rectangles.get(rectangle).then((r) => {\n        listener = r.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Component, ElementRef, EventEmitter, Inject, Input, NgZone, OnChanges, OnDestroy, OnInit, Output, PLATFORM_ID, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { MouseEvent } from '../map-types';\nimport { FitBoundsService } from '../services/fit-bounds';\nimport { GoogleMapsAPIWrapper } from '../services/google-maps-api-wrapper';\nimport {\n  FullscreenControlOptions, LatLng, LatLngBounds, LatLngBoundsLiteral, LatLngLiteral,\n  MapRestriction, MapTypeControlOptions, MapTypeId, MapTypeStyle, Padding, PanControlOptions,\n  RotateControlOptions, ScaleControlOptions, StreetViewControlOptions, ZoomControlOptions,\n} from '../services/google-maps-types';\nimport { CircleManager } from '../services/managers/circle-manager';\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\nimport { LayerManager } from '../services/managers/layer-manager';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { PolygonManager } from '../services/managers/polygon-manager';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\n\ndeclare var google: any;\n\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'agm-map',\n  providers: [\n    CircleManager,\n    DataLayerManager,\n    DataLayerManager,\n    FitBoundsService,\n    GoogleMapsAPIWrapper,\n    InfoWindowManager,\n    KmlLayerManager,\n    LayerManager,\n    MarkerManager,\n    PolygonManager,\n    PolylineManager,\n    RectangleManager,\n  ],\n  host: {\n    // todo: deprecated - we will remove it with the next version\n    '[class.sebm-google-map-container]': 'true',\n  },\n  styles: [`\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  `],\n  template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n})\nexport class AgmMap implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The longitude that defines the center of the map.\n   */\n  @Input() longitude = 0;\n\n  /**\n   * The latitude that defines the center of the map.\n   */\n  @Input() latitude = 0;\n\n  /**\n   * The zoom level of the map. The default zoom level is 8.\n   */\n  @Input() zoom = 8;\n\n  /**\n   * The minimal zoom level of the map allowed. When not provided, no restrictions to the zoom level\n   * are enforced.\n   */\n  @Input() minZoom: number;\n\n  /**\n   * The maximal zoom level of the map allowed. When not provided, no restrictions to the zoom level\n   * are enforced.\n   */\n  @Input() maxZoom: number;\n\n  /**\n   * The control size for the default map controls. Only governs the controls made by the Maps API itself\n   */\n  @Input() controlSize: number;\n\n  /**\n   * Enables/disables if map is draggable.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('mapDraggable') draggable = true;\n\n  /**\n   * Enables/disables zoom and center on double click. Enabled by default.\n   */\n  @Input() disableDoubleClickZoom = false;\n\n  /**\n   * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n   * value cannot get updated.\n   */\n  @Input() disableDefaultUI = false;\n\n  /**\n   * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n   */\n  @Input() scrollwheel = true;\n\n  /**\n   * Color used for the background of the Map div. This color will be visible when tiles have not\n   * yet loaded as the user pans. This option can only be set when the map is initialized.\n   */\n  @Input() backgroundColor: string;\n\n  /**\n   * The name or url of the cursor to display when mousing over a draggable map. This property uses\n   * the css  * cursor attribute to change the icon. As with the css property, you must specify at\n   * least one fallback cursor that is not a URL. For example:\n   * [draggableCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\n   */\n  @Input() draggableCursor: string;\n\n  /**\n   * The name or url of the cursor to display when the map is being dragged. This property uses the\n   * css cursor attribute to change the icon. As with the css property, you must specify at least\n   * one fallback cursor that is not a URL. For example:\n   * [draggingCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\n   */\n  @Input() draggingCursor: string;\n\n  /**\n   * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n   * enabled by default.\n   */\n  @Input() keyboardShortcuts = true;\n\n  /**\n   * The enabled/disabled state of the Zoom control.\n   */\n  @Input() zoomControl: boolean;\n\n  /**\n   * Options for the Zoom control.\n   */\n  @Input() zoomControlOptions: ZoomControlOptions;\n\n  /**\n   * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n   * modes, these styles will only apply to labels and geometry.\n   */\n  @Input() styles: MapTypeStyle[] = [];\n\n  /**\n   * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n   * used to\n   * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n   */\n  @Input() usePanning = false;\n\n  /**\n   * The initial enabled/disabled state of the Street View Pegman control.\n   * This control is part of the default UI, and should be set to false when displaying a map type\n   * on which the Street View road overlay should not appear (e.g. a non-Earth map type).\n   */\n  @Input() streetViewControl: boolean;\n\n  /**\n   * Options for the Street View control.\n   */\n  @Input() streetViewControlOptions: StreetViewControlOptions;\n\n  /**\n   * Sets the viewport to contain the given bounds.\n   * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n   */\n  @Input() fitBounds: LatLngBoundsLiteral | LatLngBounds | boolean = false;\n\n  /**\n   * Padding amount for the bounds.\n   */\n  @Input() fitBoundsPadding: number | Padding;\n\n  /**\n   * The initial enabled/disabled state of the Scale control. This is disabled by default.\n   */\n  @Input() scaleControl = false;\n\n  /**\n   * Options for the scale control.\n   */\n  @Input() scaleControlOptions: ScaleControlOptions;\n\n  /**\n   * The initial enabled/disabled state of the Map type control.\n   */\n  @Input() mapTypeControl = false;\n\n  /**\n   * Options for the Map type control.\n   */\n  @Input() mapTypeControlOptions: MapTypeControlOptions;\n\n  /**\n   * The initial enabled/disabled state of the Pan control.\n   */\n  @Input() panControl  = false;\n\n  /**\n   * Options for the Pan control.\n   */\n  @Input() panControlOptions: PanControlOptions;\n\n  /**\n   * The initial enabled/disabled state of the Rotate control.\n   */\n  @Input() rotateControl = false;\n\n  /**\n   * Options for the Rotate control.\n   */\n  @Input() rotateControlOptions: RotateControlOptions;\n\n  /**\n   * The initial enabled/disabled state of the Fullscreen control.\n   */\n  @Input() fullscreenControl  = false;\n\n  /**\n   * Options for the Fullscreen control.\n   */\n  @Input() fullscreenControlOptions: FullscreenControlOptions;\n\n  /**\n   * The map mapTypeId. Defaults to 'roadmap'.\n   */\n  @Input() mapTypeId: 'roadmap' | 'hybrid' | 'satellite' | 'terrain' | string = 'roadmap';\n\n  /**\n   * When false, map icons are not clickable. A map icon represents a point of interest,\n   * also known as a POI. By default map icons are clickable.\n   */\n  @Input() clickableIcons = true;\n\n  /**\n   * A map icon represents a point of interest, also known as a POI.\n   * When map icons are clickable by default, an info window is displayed.\n   * When this property is set to false, the info window will not be shown but the click event\n   * will still fire\n   */\n  @Input() showDefaultInfoWindow = true;\n\n  /**\n   * This setting controls how gestures on the map are handled.\n   * Allowed values:\n   * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n   * - 'greedy'      (All touch gestures pan or zoom the map.)\n   * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n   * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n   */\n  @Input() gestureHandling: 'cooperative' | 'greedy' | 'none' | 'auto' = 'auto';\n\n    /**\n     * Controls the automatic switching behavior for the angle of incidence of\n     * the map. The only allowed values are 0 and 45. The value 0 causes the map\n     * to always use a 0Â° overhead view regardless of the zoom level and\n     * viewport. The value 45 causes the tilt angle to automatically switch to\n     * 45 whenever 45Â° imagery is available for the current zoom level and\n     * viewport, and switch back to 0 whenever 45Â° imagery is not available\n     * (this is the default behavior). 45Â° imagery is only available for\n     * satellite and hybrid map types, within some locations, and at some zoom\n     * levels. Note: getTilt returns the current tilt angle, not the value\n     * specified by this option. Because getTilt and this option refer to\n     * different things, do not bind() the tilt property; doing so may yield\n     * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n     */\n  @Input() tilt = 0;\n\n  /**\n   * Options for restricting the bounds of the map.\n   * User cannot pan or zoom away from restricted area.\n   */\n  @Input() restriction: MapRestriction;\n  /**\n   * Map option attributes that can change over time\n   */\n  private static _mapOptionsAttributes: string[] = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n    'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\n  ];\n\n  private _observableSubscriptions: Subscription[] = [];\n  private _fitBoundsSubscription: Subscription;\n\n  /**\n   * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n   * marker or infoWindow).\n   */\n  @Output() mapClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n   * on a marker or infoWindow).\n   */\n  @Output() mapRightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n   * on a marker or infoWindow).\n   */\n  @Output() mapDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter is fired when the map center changes.\n   */\n  @Output() centerChange: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\n\n  /**\n   * This event is fired when the viewport bounds have changed.\n   */\n  @Output() boundsChange: EventEmitter<LatLngBounds> = new EventEmitter<LatLngBounds>();\n\n  /**\n   * This event is fired when the mapTypeId property changes.\n   */\n  @Output() mapTypeIdChange: EventEmitter<MapTypeId> = new EventEmitter<MapTypeId>();\n\n  /**\n   * This event is fired when the map becomes idle after panning or zooming.\n   */\n  @Output() idle: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * This event is fired when the zoom level has changed.\n   */\n  @Output() zoomChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * This event is fired when the google map is fully initialized.\n   * You get the google.maps.Map instance as a result of this EventEmitter.\n   */\n  @Output() mapReady: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * This event is fired when the visible tiles have finished loading.\n   */\n  @Output() tilesLoaded: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(\n    private _elem: ElementRef,\n    private _mapsWrapper: GoogleMapsAPIWrapper,\n    @Inject(PLATFORM_ID) private _platformId: Object,\n    protected _fitBoundsService: FitBoundsService,\n    private _zone: NgZone\n  ) {}\n\n  /** @internal */\n  ngOnInit() {\n    if (isPlatformServer(this._platformId)) {\n      // The code is running on the server, do nothing\n      return;\n    }\n    // todo: this should be solved with a new component and a viewChild decorator\n    const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n    this._initMapInstance(container);\n  }\n\n  private _initMapInstance(el: HTMLElement) {\n    this._mapsWrapper.createMap(el, {\n      center: {lat: this.latitude || 0, lng: this.longitude || 0},\n      zoom: this.zoom,\n      minZoom: this.minZoom,\n      maxZoom: this.maxZoom,\n      controlSize: this.controlSize,\n      disableDefaultUI: this.disableDefaultUI,\n      disableDoubleClickZoom: this.disableDoubleClickZoom,\n      scrollwheel: this.scrollwheel,\n      backgroundColor: this.backgroundColor,\n      draggable: this.draggable,\n      draggableCursor: this.draggableCursor,\n      draggingCursor: this.draggingCursor,\n      keyboardShortcuts: this.keyboardShortcuts,\n      styles: this.styles,\n      zoomControl: this.zoomControl,\n      zoomControlOptions: this.zoomControlOptions,\n      streetViewControl: this.streetViewControl,\n      streetViewControlOptions: this.streetViewControlOptions,\n      scaleControl: this.scaleControl,\n      scaleControlOptions: this.scaleControlOptions,\n      mapTypeControl: this.mapTypeControl,\n      mapTypeControlOptions: this.mapTypeControlOptions,\n      panControl: this.panControl,\n      panControlOptions: this.panControlOptions,\n      rotateControl: this.rotateControl,\n      rotateControlOptions: this.rotateControlOptions,\n      fullscreenControl: this.fullscreenControl,\n      fullscreenControlOptions: this.fullscreenControlOptions,\n      mapTypeId: this.mapTypeId,\n      clickableIcons: this.clickableIcons,\n      gestureHandling: this.gestureHandling,\n      tilt: this.tilt,\n      restriction: this.restriction,\n    })\n      .then(() => this._mapsWrapper.getNativeMap())\n      .then(map => this.mapReady.emit(map));\n\n    // register event listeners\n    this._handleMapCenterChange();\n    this._handleMapZoomChange();\n    this._handleMapMouseEvents();\n    this._handleBoundsChange();\n    this._handleMapTypeIdChange();\n    this._handleTilesLoadedEvent();\n    this._handleIdleEvent();\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n\n    // remove all listeners from the map instance\n    this._mapsWrapper.clearInstanceListeners();\n    if (this._fitBoundsSubscription) {\n      this._fitBoundsSubscription.unsubscribe();\n    }\n  }\n\n  /* @internal */\n  ngOnChanges(changes: SimpleChanges) {\n    this._updateMapOptionsChanges(changes);\n    this._updatePosition(changes);\n  }\n\n  private _updateMapOptionsChanges(changes: SimpleChanges) {\n    let options: {[propName: string]: any} = {};\n    let optionKeys =\n      Object.keys(changes).filter(k => AgmMap._mapOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n    this._mapsWrapper.setMapOptions(options);\n  }\n\n  /**\n   * Triggers a resize event on the google map instance.\n   * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n   * Returns a promise that gets resolved after the event was triggered.\n   */\n  triggerResize(recenter: boolean = true): Promise<void> {\n    // Note: When we would trigger the resize event and show the map in the same turn (which is a\n    // common case for triggering a resize event), then the resize event would not\n    // work (to show the map), so we trigger the event in a timeout.\n    return new Promise<void>((resolve) => {\n      setTimeout(() => {\n        return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n          if (recenter) {\n            this.fitBounds != null ? this._fitBounds() : this._setCenter();\n          }\n          resolve();\n        });\n      });\n    });\n  }\n\n  private _updatePosition(changes: SimpleChanges) {\n    if (changes['latitude'] == null && changes['longitude'] == null &&\n        !changes['fitBounds']) {\n      // no position update needed\n      return;\n    }\n\n    // we prefer fitBounds in changes\n    if ('fitBounds' in changes) {\n      this._fitBounds();\n      return;\n    }\n\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n    this._setCenter();\n  }\n\n  private _setCenter() {\n    let newCenter = {\n      lat: this.latitude,\n      lng: this.longitude,\n    };\n    if (this.usePanning) {\n      this._mapsWrapper.panTo(newCenter);\n    } else {\n      this._mapsWrapper.setCenter(newCenter);\n    }\n  }\n\n  private _fitBounds() {\n    switch (this.fitBounds) {\n      case true:\n        this._subscribeToFitBoundsUpdates();\n        break;\n      case false:\n        if (this._fitBoundsSubscription) {\n          this._fitBoundsSubscription.unsubscribe();\n        }\n        break;\n      default:\n        this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n    }\n  }\n\n  private _subscribeToFitBoundsUpdates() {\n    this._zone.runOutsideAngular(() => {\n      this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n        this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n      });\n    });\n  }\n\n  protected _updateBounds(bounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding) {\n    if (!bounds) {\n      return;\n    }\n    if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n      const newBounds = new google.maps.LatLngBounds();\n      newBounds.union(bounds);\n      bounds = newBounds;\n    }\n    if (this.usePanning) {\n      this._mapsWrapper.panToBounds(bounds, padding);\n      return;\n    }\n    this._mapsWrapper.fitBounds(bounds, padding);\n  }\n\n  private _isLatLngBoundsLiteral(bounds: LatLngBounds | LatLngBoundsLiteral): bounds is LatLngBoundsLiteral {\n    return bounds != null && (bounds as any).extend === undefined;\n  }\n\n  private _handleMapCenterChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('center_changed').subscribe(() => {\n      this._mapsWrapper.getCenter().then((center: LatLng) => {\n        this.latitude = center.lat();\n        this.longitude = center.lng();\n        this.centerChange.emit({lat: this.latitude, lng: this.longitude} as LatLngLiteral);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleBoundsChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('bounds_changed').subscribe(() => {\n      this._mapsWrapper.getBounds().then(\n        (bounds: LatLngBounds) => { this.boundsChange.emit(bounds); });\n    });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleMapTypeIdChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('maptypeid_changed').subscribe(() => {\n      this._mapsWrapper.getMapTypeId().then(\n        (mapTypeId: MapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\n    });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleMapZoomChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('zoom_changed').subscribe(() => {\n      this._mapsWrapper.getZoom().then((z: number) => {\n        this.zoom = z;\n        this.zoomChange.emit(z);\n      });\n    });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleIdleEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('idle').subscribe(\n      () => { this.idle.emit(void 0); });\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleTilesLoadedEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('tilesloaded').subscribe(\n      () => this.tilesLoaded.emit(void 0),\n    );\n    this._observableSubscriptions.push(s);\n  }\n\n  private _handleMapMouseEvents() {\n    interface Emitter {\n      emit(value: any): void;\n    }\n\n    type Event = { name: string, emitter: Emitter };\n\n    const events: Event[] = [\n      {name: 'click', emitter: this.mapClick},\n      {name: 'rightclick', emitter: this.mapRightClick},\n      {name: 'dblclick', emitter: this.mapDblClick},\n    ];\n\n    events.forEach((e: Event) => {\n      const s = this._mapsWrapper.subscribeToMapEvent<{latLng: LatLng}>(e.name).subscribe(\n        (event: {latLng: LatLng}) => {\n          let value: MouseEvent = {\n            coords: {\n              lat: event.latLng.lat(),\n              lng: event.latLng.lng(),\n            },\n            placeId: (event as {latLng: LatLng, placeId: string}).placeId,\n          };\n          // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n          if (value.placeId && !this.showDefaultInfoWindow) {\n            (event as any).stop();\n          }\n          e.emitter.emit(value);\n        });\n      this._observableSubscriptions.push(s);\n    });\n  }\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, forwardRef, Input, OnChanges, OnDestroy, Output, QueryList, SimpleChange } from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { MouseEvent } from '../map-types';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\nimport * as mapTypes from '../services/google-maps-types';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { AgmInfoWindow } from './info-window';\n\nlet markerId = 0;\n\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n@Directive({\n  selector: 'agm-marker',\n  providers: [\n    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker) },\n  ],\n  inputs: [\n    'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n    'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\n  ],\n  outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut'],\n})\nexport class AgmMarker implements OnDestroy, OnChanges, AfterContentInit, FitBoundsAccessor {\n  /**\n   * The latitude position of the marker.\n   */\n  @Input() latitude: number;\n\n  /**\n   * The longitude position of the marker.\n   */\n  @Input() longitude: number;\n\n  /**\n   * The title of the marker.\n   */\n  @Input() title: string;\n\n  /**\n   * The label (a single uppercase character) for the marker.\n   */\n  @Input() label: string | mapTypes.MarkerLabel;\n\n  /**\n   * If true, the marker can be dragged. Default value is false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerDraggable') draggable = false;\n\n  /**\n   * Icon (the URL of the image) for the foreground.\n   */\n  @Input() iconUrl: string;\n\n  /**\n   * If true, the marker is visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Whether to automatically open the child info window when the marker is clicked.\n   */\n  @Input() openInfoWindow = true;\n\n  /**\n   * The marker's opacity between 0.0 and 1.0.\n   */\n  @Input() opacity = 1;\n\n  /**\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n   * front of markers with lower values. By default, markers are displayed according to their\n   * vertical position on screen, with lower markers appearing in front of markers further up the\n   * screen.\n   */\n  @Input() zIndex = 1;\n\n  /**\n   * If true, the marker can be clicked. Default value is true.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('markerClickable') clickable = true;\n\n  /**\n   * Which animation to play when marker is added to a map.\n   * This can be 'BOUNCE' or 'DROP'\n   */\n  @Input() animation: Animation;\n\n  /**\n   * This event is fired when the marker's animation property changes.\n   *\n   * @memberof AgmMarker\n   */\n  @Output() animationChange = new EventEmitter<Animation>();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the marker.\n   */\n  @Output() markerClick: EventEmitter<AgmMarker> = new EventEmitter<AgmMarker>();\n\n  /**\n   * This event emitter gets emitted when the user clicks twice on the marker.\n   */\n  @Output() markerDblClick: EventEmitter<AgmMarker> = new EventEmitter<AgmMarker>();\n\n  /**\n   * This event is fired when the user rightclicks on the marker.\n   */\n  @Output() markerRightClick: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * This event is fired when the user starts dragging the marker.\n   */\n  @Output() dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the marker.\n   */\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the marker.\n   */\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user mouses over the marker.\n   */\n  @Output() mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user mouses outside the marker.\n   */\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /** @internal */\n  @ContentChildren(AgmInfoWindow) infoWindow: QueryList<AgmInfoWindow> = new QueryList<AgmInfoWindow>();\n\n  private _markerAddedToManger = false;\n  private _id: string;\n  private _observableSubscriptions: Subscription[] = [];\n\n  protected readonly _fitBoundsDetails$: ReplaySubject<FitBoundsDetails> = new ReplaySubject<FitBoundsDetails>(1);\n\n  constructor(private _markerManager: MarkerManager) { this._id = (markerId++).toString(); }\n\n  /* @internal */\n  ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n\n  private handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n    this.infoWindow.forEach(marker => {\n      marker.hostMarker = this;\n    });\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n    if (!this._markerAddedToManger) {\n      this._markerManager.addMarker(this);\n      this._updateFitBoundsDetails();\n      this._markerAddedToManger = true;\n      this._addEventListeners();\n      return;\n    }\n    if (changes['latitude'] || changes['longitude']) {\n      this._markerManager.updateMarkerPosition(this);\n      this._updateFitBoundsDetails();\n    }\n    if (changes['title']) {\n      this._markerManager.updateTitle(this);\n    }\n    if (changes['label']) {\n      this._markerManager.updateLabel(this);\n    }\n    if (changes['draggable']) {\n      this._markerManager.updateDraggable(this);\n    }\n    if (changes['iconUrl']) {\n      this._markerManager.updateIcon(this);\n    }\n    if (changes['opacity']) {\n      this._markerManager.updateOpacity(this);\n    }\n    if (changes['visible']) {\n      this._markerManager.updateVisible(this);\n    }\n    if (changes['zIndex']) {\n      this._markerManager.updateZIndex(this);\n    }\n    if (changes['clickable']) {\n      this._markerManager.updateClickable(this);\n    }\n    if (changes['animation']) {\n      this._markerManager.updateAnimation(this);\n    }\n  }\n\n  /** @internal */\n  getFitBoundsDetails$(): Observable<FitBoundsDetails> {\n    return this._fitBoundsDetails$.asObservable();\n  }\n\n  protected _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n  }\n\n  private _addEventListeners() {\n    const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n      if (this.openInfoWindow) {\n        this.infoWindow.forEach(infoWindow => infoWindow.open());\n      }\n      this.markerClick.emit(this);\n    });\n    this._observableSubscriptions.push(cs);\n\n    const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n      this.markerDblClick.emit(null);\n    });\n    this._observableSubscriptions.push(dcs);\n\n    const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n      this.markerRightClick.emit(null);\n    });\n    this._observableSubscriptions.push(rc);\n\n    const ds =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('dragstart', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(ds);\n\n    const d =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('drag', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(d);\n\n    const de =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('dragend', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(de);\n\n    const mover =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('mouseover', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(mover);\n\n    const mout =\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('mouseout', this)\n        .subscribe((e: mapTypes.MouseEvent) => {\n          this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\n        });\n    this._observableSubscriptions.push(mout);\n\n    const anChng =\n      this._markerManager.createEventObservable<void>('animation_changed', this)\n        .subscribe(() => {\n          this.animationChange.emit(this.animation);\n        });\n    this._observableSubscriptions.push(anChng);\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  toString(): string { return 'AgmMarker-' + this._id.toString(); }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._markerManager.deleteMarker(this);\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\nexport type Animation = 'BOUNCE' | 'DROP' | null;\n","import { AfterContentInit, Directive, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { LatLng, LatLngLiteral, PolygonOptions, PolyMouseEvent } from '../services/google-maps-types';\nimport { PolygonManager } from '../services/managers/polygon-manager';\nimport { MvcEventType } from '../utils/mvcarray-utils';\n\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\n@Directive({\n  selector: 'agm-polygon',\n})\nexport class AgmPolygon implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * Indicates whether this Polygon handles mouse events. Defaults to true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic\n   * property defines the mode of dragging. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('polyDraggable') draggable = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control\n   * points shown at the vertices and on each segment. Defaults to false.\n   */\n  @Input() editable = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will\n   * follow the curvature of the Earth. When false, edges of the polygon are\n   * rendered as straight lines in screen space. Note that the shape of a\n   * geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() geodesic = false;\n\n  /**\n   * The ordered sequence of coordinates that designates a closed loop.\n   * Unlike polylines, a polygon may consist of one or more paths.\n   *  As a result, the paths property may specify one or more arrays of\n   * LatLng coordinates. Paths are closed automatically; do not repeat the\n   * first vertex of the path as the last vertex. Simple polygons may be\n   * defined using a single array of LatLngs. More complex polygons may\n   * specify an array of arrays. Any simple arrays are converted into Arrays.\n   * Inserting or removing LatLngs from the Array will automatically update\n   * the polygon on the map.\n   */\n  @Input() paths: Array<LatLng | LatLngLiteral> | Array<Array<LatLng | LatLngLiteral>> = [];\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended\n   * named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number;\n\n  /**\n   * Whether this polygon is visible on the map. Defaults to true.\n   */\n  @Input() visible: boolean;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polygon.\n   */\n  @Output() polyClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polygon.\n   */\n  @Output() polyDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the polygon.\n   */\n  @Output() polyDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the polygon.\n   */\n  @Output() polyDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user starts dragging the polygon.\n   */\n  @Output() polyDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polygon.\n   */\n  @Output() polyMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polygon.\n   */\n  @Output() polyMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polygon mouseout.\n   */\n  @Output() polyMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polygon mouseover.\n   */\n  @Output() polyMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polygon\n   */\n  @Output() polyMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the Polygon is right-clicked on.\n   */\n  @Output() polyRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired after Polygon first path changes.\n   */\n  @Output() polyPathsChange = new EventEmitter<PolygonPathEvent<any>>();\n\n  private static _polygonOptionsAttributes: Array<string> = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible',\n  ];\n\n  private _id: string;\n  private _polygonAddedToManager = false;\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _polygonManager: PolygonManager) { }\n\n  /** @internal */\n  ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polygonAddedToManager) {\n      this._init();\n      return;\n    }\n\n    this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n  }\n\n  private _init() {\n    this._polygonManager.addPolygon(this);\n    this._polygonAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      { name: 'click', handler: (ev: PolyMouseEvent) => this.polyClick.emit(ev) },\n      { name: 'dblclick', handler: (ev: PolyMouseEvent) => this.polyDblClick.emit(ev) },\n      { name: 'drag', handler: (ev: MouseEvent) => this.polyDrag.emit(ev) },\n      { name: 'dragend', handler: (ev: MouseEvent) => this.polyDragEnd.emit(ev) },\n      { name: 'dragstart', handler: (ev: MouseEvent) => this.polyDragStart.emit(ev) },\n      { name: 'mousedown', handler: (ev: PolyMouseEvent) => this.polyMouseDown.emit(ev) },\n      { name: 'mousemove', handler: (ev: PolyMouseEvent) => this.polyMouseMove.emit(ev) },\n      { name: 'mouseout', handler: (ev: PolyMouseEvent) => this.polyMouseOut.emit(ev) },\n      { name: 'mouseover', handler: (ev: PolyMouseEvent) => this.polyMouseOver.emit(ev) },\n      { name: 'mouseup', handler: (ev: PolyMouseEvent) => this.polyMouseUp.emit(ev) },\n      { name: 'rightclick', handler: (ev: PolyMouseEvent) => this.polyRightClick.emit(ev) },\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n\n    this._polygonManager.createPathEventObservable(this)\n    .then(paths$ => {\n      const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n      this._subscriptions.push(os);\n    });\n  }\n\n  private _updatePolygonOptions(changes: SimpleChanges): PolygonOptions {\n    return Object.keys(changes)\n      .filter(k => AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1)\n      .reduce((obj: any, k: string) => {\n        obj[k] = changes[k].currentValue;\n        return obj;\n      }, {});\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._polygonManager.deletePolygon(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  getPath(): Promise<Array<LatLng>> {\n    return this._polygonManager.getPath(this);\n  }\n\n  getPaths(): Promise<Array<Array<LatLng>>> {\n    return this._polygonManager.getPaths(this);\n  }\n}\n\nexport interface PolygonPathEvent<T extends (LatLng | Array<LatLng>)> {\n  newArr: LatLng[][];\n  eventName: MvcEventType;\n  index: number;\n  previous?: T;\n}\n\nexport interface PathCollectionChangePolygonPathEvent extends PolygonPathEvent <Array<LatLng>>{\n}\n\nexport interface PathChangePolygonPathEvent extends PolygonPathEvent<LatLng> {\n  pathIndex: number;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\n@Directive({selector: 'agm-polyline agm-icon-sequence'})\nexport class AgmPolylineIcon implements OnInit{\n\n  /**\n   * If `true`, each icon in the sequence has the same fixed rotation regardless of the\n   * angle of the edge on which it lies. Defaults to `false`, in which case each icon\n   * in the sequence is rotated to align with its edge.\n   *\n   * @type {boolean}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() fixedRotation: boolean;\n\n  /**\n   * The distance from the start of the line at which an icon is to be rendered. This\n   * distance may be expressed as a percentage of line's length (e.g. '50%') or in pixels\n   * (e.g. '50px'). Defaults to '100%'.\n   *\n   * @type {string}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() offset: string;\n\n  /**\n   * The distance between consecutive icons on the line. This distance may be expressed as\n   * a percentage of the line's length (e.g. '50%') or in pixels (e.g. '50px'). To disable\n   * repeating of the icon, specify '0'. Defaults to '0'.\n   *\n   * @type {string}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() repeat: string;\n\n  /**\n   * The x coordinate of the position of the symbol relative to the polyline. The coordinate\n   * of the symbol's path is translated _left_ by the anchor's x coordinate. By default, a\n   * symbol is anchored at (0, 0). The position is expressed in the same coordinate system as the\n   * symbol's path.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() anchorX: number;\n\n  /**\n   * The y coordinate of the position of the symbol relative to the polyline. The coordinate\n   * of the symbol's path is translated _up_ by the anchor's y coordinate. By default, a\n   * symbol is anchored at (0, 0). The position is expressed in the same coordinate system as the\n   * symbol's path.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() anchorY: number;\n\n  /**\n   * The symbol's fill color. All CSS3 colors are supported except for extended named\n   * colors. Defaults to the stroke color of the corresponding polyline.\n   *\n   * @type {string}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The symbol's fill opacity. Defaults to 0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The symbol's path, which is a built-in symbol path, or a custom path expressed using\n   * SVG path notation. Required.\n   *\n   * @type {SymbolPath}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() path: 'CIRCLE' | 'BACKWARD_CLOSED_ARROW' | 'BACKWARD_OPEN_ARROW' | 'FORWARD_CLOSED_ARROW' |\n        'FORWARD_OPEN_ARROW' | string;\n\n  /**\n   * The angle by which to rotate the symbol, expressed clockwise in degrees.\n   * Defaults to 0. A symbol where `fixedRotation` is `false` is rotated relative to\n   * the angle of the edge on which it lies.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() rotation: number;\n\n  /**\n   * The amount by which the symbol is scaled in size. Defaults to the stroke weight\n   * of the polyline; after scaling, the symbol must lie inside a square 22 pixels in\n   * size centered at the symbol's anchor.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() scale: number;\n\n  /**\n   * The symbol's stroke color. All CSS3 colors are supported except for extended named\n   * colors. Defaults to the stroke color of the polyline.\n   *\n   * @type {string}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The symbol's stroke opacity. Defaults to the stroke opacity of the polyline.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The symbol's stroke weight. Defaults to the scale of the symbol.\n   *\n   * @type {number}\n   * @memberof AgmPolylineIcon\n   */\n  @Input() strokeWeight: number;\n\n  ngOnInit(): void {\n    if (this.path == null) {\n      throw new Error('Icon Sequence path is required');\n    }\n  }\n}\n","import { Directive, EventEmitter, forwardRef, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { LatLngLiteral } from '../../core/services/google-maps-types';\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\n\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\n@Directive({\n  selector: 'agm-polyline-point',\n  providers: [\n    {provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint)},\n  ],\n})\nexport class AgmPolylinePoint implements OnChanges, FitBoundsAccessor {\n  /**\n   * The latitude position of the point.\n   */\n  @Input() public latitude: number;\n\n  /**\n   * The longitude position of the point;\n   */\n  @Input() public longitude: number;\n\n  /**\n   * This event emitter gets emitted when the position of the point changed.\n   */\n  @Output() positionChanged: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (changes['latitude'] || changes['longitude']) {\n      const position: LatLngLiteral = {\n        lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n        lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n      } as LatLngLiteral;\n      this.positionChanged.emit(position);\n    }\n  }\n\n  /** @internal */\n  getFitBoundsDetails$(): Observable<FitBoundsDetails> {\n    return this.positionChanged.pipe(\n      startWith({lat: this.latitude, lng: this.longitude}),\n      map(position => ({latLng: position}))\n    );\n  }\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, Input, OnChanges, OnDestroy, Output, QueryList, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { LatLng, PolyMouseEvent } from '../services/google-maps-types';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { AgmPolylineIcon } from './polyline-icon';\nimport { AgmPolylinePoint } from './polyline-point';\n\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n@Directive({\n  selector: 'agm-polyline',\n})\nexport class AgmPolyline implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\n   * mode of dragging. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('polylineDraggable') draggable = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control points shown at the\n   * vertices and on each segment. Defaults to false.\n   */\n  @Input() editable = false;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  @Input() geodesic = false;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0.\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight: number;\n\n  /**\n   * Whether this polyline is visible on the map. Defaults to true.\n   */\n  @Input() visible = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polyline.\n   */\n  @Output() lineClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\n   */\n  @Output() lineDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the polyline.\n   */\n  @Output() lineDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the polyline.\n   */\n  @Output() lineDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user starts dragging the polyline.\n   */\n  @Output() lineDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\n   */\n  @Output() lineMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\n   */\n  @Output() lineMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polyline mouseout.\n   */\n  @Output() lineMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polyline mouseover.\n   */\n  @Output() lineMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\n   */\n  @Output() lineMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the Polyline is right-clicked on.\n   */\n  @Output() lineRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired after Polyline's path changes.\n   */\n  @Output() polyPathChange = new EventEmitter<PathEvent>();\n\n  /**\n   * @internal\n   */\n  @ContentChildren(AgmPolylinePoint) points: QueryList<AgmPolylinePoint>;\n\n  @ContentChildren(AgmPolylineIcon) iconSequences: QueryList<AgmPolylineIcon>;\n\n  private static _polylineOptionsAttributes: Array<string> = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex',\n  ];\n\n  private _id: string;\n  private _polylineAddedToManager = false;\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _polylineManager: PolylineManager) { this._id = (polylineId++).toString(); }\n\n  /** @internal */\n  ngAfterContentInit() {\n    if (this.points.length) {\n      this.points.forEach((point: AgmPolylinePoint) => {\n        const s = point.positionChanged.subscribe(\n            () => { this._polylineManager.updatePolylinePoints(this); });\n        this._subscriptions.push(s);\n      });\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n    this._subscriptions.push(pointSub);\n    this._polylineManager.updatePolylinePoints(this);\n\n    const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n    this._subscriptions.push(iconSub);\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n\n    let options: {[propName: string]: any} = {};\n    const optionKeys = Object.keys(changes).filter(\n        k => AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach(k => options[k] = changes[k].currentValue);\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n\n  getPath(): Promise<Array<LatLng>> {\n    return this._polylineManager.getPath(this);\n  }\n\n  private _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {name: 'click', handler: (ev: PolyMouseEvent) => this.lineClick.emit(ev)},\n      {name: 'dblclick', handler: (ev: PolyMouseEvent) => this.lineDblClick.emit(ev)},\n      {name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev)},\n      {name: 'dragend', handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev)},\n      {name: 'dragstart', handler: (ev: MouseEvent) => this.lineDragStart.emit(ev)},\n      {name: 'mousedown', handler: (ev: PolyMouseEvent) => this.lineMouseDown.emit(ev)},\n      {name: 'mousemove', handler: (ev: PolyMouseEvent) => this.lineMouseMove.emit(ev)},\n      {name: 'mouseout', handler: (ev: PolyMouseEvent) => this.lineMouseOut.emit(ev)},\n      {name: 'mouseover', handler: (ev: PolyMouseEvent) => this.lineMouseOver.emit(ev)},\n      {name: 'mouseup', handler: (ev: PolyMouseEvent) => this.lineMouseUp.emit(ev)},\n      {name: 'rightclick', handler: (ev: PolyMouseEvent) => this.lineRightClick.emit(ev)},\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n\n    this._polylineManager.createPathEventObservable(this).then((ob$) => {\n      const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n      this._subscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  _getPoints(): Array<AgmPolylinePoint> {\n    if (this.points) {\n      return this.points.toArray();\n    }\n    return [];\n  }\n\n  _getIcons(): Array<AgmPolylineIcon> {\n    if (this.iconSequences) {\n      return this.iconSequences.toArray();\n    }\n    return [];\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n\nexport interface PathEvent {\n  newArr: LatLng[];\n  evName: 'insert_at' | 'remove_at' | 'set_at';\n  index: number;\n  previous?: LatLng;\n}\n","import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MouseEvent } from '../map-types';\nimport {\n  LatLngBounds,\n  LatLngBoundsLiteral,\n  MouseEvent as MapMouseEvent,\n} from '../services/google-maps-types';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\n\n@Directive({\n  selector: 'agm-rectangle',\n})\nexport class AgmRectangle implements OnInit, OnChanges, OnDestroy {\n  /**\n   * The north position of the rectangle (required).\n   */\n  @Input() north: number;\n\n  /**\n   * The east position of the rectangle (required).\n   */\n  @Input() east: number;\n\n  /**\n   * The south position of the rectangle (required).\n   */\n  @Input() south: number;\n\n  /**\n   * The west position of the rectangle (required).\n   */\n  @Input() west: number;\n\n  /**\n   * Indicates whether this Rectangle handles mouse events. Defaults to true.\n   */\n  @Input() clickable = true;\n\n  /**\n   * If set to true, the user can drag this rectangle over the map. Defaults to false.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('rectangleDraggable') draggable = false;\n\n  /**\n   * If set to true, the user can edit this rectangle by dragging the control points shown at\n   * the center and around the circumference of the rectangle. Defaults to false.\n   */\n  @Input() editable = false;\n\n  /**\n   * The fill color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() fillColor: string;\n\n  /**\n   * The fill opacity between 0.0 and 1.0.\n   */\n  @Input() fillOpacity: number;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  @Input() strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0\n   */\n  @Input() strokeOpacity: number;\n\n  /**\n   * The stroke position. Defaults to CENTER.\n   * This property is not supported on Internet Explorer 8 and earlier.\n   */\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\n\n  /**\n   * The stroke width in pixels.\n   */\n  @Input() strokeWeight = 0;\n\n  /**\n   * Whether this rectangle is visible on the map. Defaults to true.\n   */\n  @Input() visible = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  @Input() zIndex: number;\n\n  /**\n   * This event is fired when the rectangle's is changed.\n   */\n  @Output()\n  boundsChange: EventEmitter<LatLngBoundsLiteral> = new EventEmitter<\n    LatLngBoundsLiteral\n  >();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  rectangleClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user clicks on the rectangle.\n   */\n  @Output()\n  rectangleDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the rectangle.\n   */\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the rectangle.\n   */\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user starts dragging the rectangle.\n   */\n  @Output()\n  dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the rectangle.\n   */\n  @Output()\n  mouseDown: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the rectangle.\n   */\n  @Output()\n  mouseMove: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired on rectangle mouseout.\n   */\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired on rectangle mouseover.\n   */\n  @Output()\n  mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mouseup event is fired on the rectangle.\n   */\n  @Output() mouseUp: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the rectangle is right-clicked on.\n   */\n  @Output()\n  rightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  private _rectangleAddedToManager = false;\n\n  private static _mapOptions: string[] = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n  ];\n\n  private _eventSubscriptions: Subscription[] = [];\n\n  constructor(private _manager: RectangleManager) {}\n\n  /** @internal */\n  ngOnInit() {\n    this._manager.addRectangle(this);\n    this._rectangleAddedToManager = true;\n    this._registerEventListeners();\n  }\n\n  /** @internal */\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n    if (\n      changes['north'] ||\n      changes['east'] ||\n      changes['south'] ||\n      changes['west']\n    ) {\n      this._manager.setBounds(this);\n    }\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n    this._updateRectangleOptionsChanges(changes);\n  }\n\n  private _updateRectangleOptionsChanges(changes: {\n    [propName: string]: SimpleChange;\n  }) {\n    let options: { [propName: string]: any } = {};\n    let optionKeys = Object.keys(changes).filter(\n      k => AgmRectangle._mapOptions.indexOf(k) !== -1,\n    );\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  private _registerEventListeners() {\n    let events: Map<string, EventEmitter<any>> = new Map<\n      string,\n      EventEmitter<any>\n    >();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(\n        this._manager\n          .createEventObservable<MapMouseEvent>(eventName, this)\n          .subscribe(value => {\n            switch (eventName) {\n              case 'bounds_changed':\n                this._manager.getBounds(this).then(bounds =>\n                  eventEmitter.emit({\n                    north: bounds.getNorthEast().lat(),\n                    east: bounds.getNorthEast().lng(),\n                    south: bounds.getSouthWest().lat(),\n                    west: bounds.getSouthWest().lng(),\n                  } as LatLngBoundsLiteral),\n                );\n                break;\n              default:\n                eventEmitter.emit({\n                  coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\n                } as MouseEvent);\n            }\n          }),\n      );\n    });\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(function(s: Subscription) {\n      s.unsubscribe();\n    });\n    this._eventSubscriptions = null;\n    this._manager.removeRectangle(this);\n  }\n\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n  getBounds(): Promise<LatLngBounds> {\n    return this._manager.getBounds(this);\n  }\n}\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { LayerManager } from '../services/managers/layer-manager';\n\nlet layerId = 0;\n\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\n@Directive({\n    selector: 'agm-transit-layer',\n})\n\nexport class AgmTransitLayer implements OnInit, OnChanges, OnDestroy{\n    private _addedToManager = false;\n    private _id: string = (layerId++).toString();\n\n    /**\n     * Hide/show transit layer\n     */\n    @Input() visible = true;\n\n    constructor( private _manager: LayerManager ) {}\n\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this, {visible: this.visible});\n        this._addedToManager = true;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, {visible: changes['visible'].currentValue});\n        }\n    }\n\n    /** @internal */\n    id(): string { return this._id; }\n\n    /** @internal */\n    toString(): string { return `AgmTransitLayer-${this._id.toString()}`; }\n\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n\n}\n","export var google: any;\n\nexport interface MVCObject {\n  addListener(eventName: string, handler: Function): MapsEventListener;\n}\n\nexport interface MVCArray<T> extends MVCObject {\n  clear(): void;\n  getArray(): Array<T>;\n  getAt(i: number): T;\n  getLength(): number;\n  insertAt(i: number, elem: T): void;\n  pop(): T;\n  push(elem: T): number;\n  removeAt(i: number): T;\n  setAt(i: number, elem: T): void;\n  /* tslint:disable */\n  /*\n  * Tslint configuration check-parameters will prompt errors for these lines of code.\n  * https://palantir.github.io/tslint/rules/no-unused-variable/\n  */\n  forEach(callback: (elem: T, i: number) => void): void;\n  /* tslint:enable */\n}\n\nexport interface GoogleMap extends MVCObject {\n  data?: Data;\n  panTo(latLng: LatLng | LatLngLiteral): void;\n  panBy(x: number, y: number): void;\n  setZoom(zoom: number): void;\n  getCenter(): LatLng;\n  setCenter(latLng: LatLng | LatLngLiteral): void;\n  getBounds(): LatLngBounds;\n  getMapTypeId(): MapTypeId;\n  getZoom(): number;\n  setOptions(options: MapOptions): void;\n  panToBounds(latLngBounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding): void;\n  fitBounds(bounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding): void;\n}\n\nexport interface LatLng {\n  lat(): number;\n  lng(): number;\n  toJSON(): any;\n  toString(): string;\n}\n\nexport interface Marker extends MVCObject {\n  setMap(map: GoogleMap): void;\n  setPosition(latLng: LatLng | LatLngLiteral): void;\n  setTitle(title: string): void;\n  setLabel(label: string | MarkerLabel): void;\n  setDraggable(draggable: boolean): void;\n  setIcon(icon: string): void;\n  setOpacity(opacity: number): void;\n  setVisible(visible: boolean): void;\n  setZIndex(zIndex: number): void;\n  setAnimation(animation: any): void;\n  getLabel(): MarkerLabel;\n  setClickable(clickable: boolean): void;\n}\n\nexport interface MarkerOptions {\n  position: LatLng | LatLngLiteral;\n  title?: string;\n  map?: GoogleMap;\n  label?: string | MarkerLabel;\n  draggable?: boolean;\n  icon?: string;\n  opacity?: number;\n  visible?: boolean;\n  zIndex?: number;\n  clickable: boolean;\n  animation?: any;\n}\n\nexport interface MarkerLabel {\n  color: string;\n  fontFamily: string;\n  fontSize: string;\n  fontWeight: string;\n  text: string;\n}\n\nexport interface Circle extends MVCObject {\n  getBounds(): LatLngBounds;\n  getCenter(): LatLng;\n  getDraggable(): boolean;\n  getEditable(): boolean;\n  getMap(): GoogleMap;\n  getRadius(): number;\n  getVisible(): boolean;\n  setCenter(center: LatLng | LatLngLiteral): void;\n  setDraggable(draggable: boolean): void;\n  setEditable(editable: boolean): void;\n  setMap(map: GoogleMap): void;\n  setOptions(options: CircleOptions): void;\n  setRadius(radius: number): void;\n  setVisible(visible: boolean): void;\n}\n\nexport interface CircleOptions {\n  center?: LatLng | LatLngLiteral;\n  clickable?: boolean;\n  draggable?: boolean;\n  editable?: boolean;\n  fillColor?: string;\n  fillOpacity?: number;\n  map?: GoogleMap;\n  radius?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokePosition?: 'CENTER' | 'INSIDE' | 'OUTSIDE';\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\nexport interface Rectangle extends MVCObject {\n  getBounds(): LatLngBounds;\n  getDraggable(): boolean;\n  getEditable(): boolean;\n  getMap(): GoogleMap;\n  getVisible(): boolean;\n  setBounds(bounds: LatLngBounds | LatLngBoundsLiteral): void;\n  setDraggable(draggable: boolean): void;\n  setEditable(editable: boolean): void;\n  setMap(map: GoogleMap): void;\n  setOptions(options: RectangleOptions): void;\n  setVisible(visible: boolean): void;\n}\n\nexport interface RectangleOptions {\n  bounds?: LatLngBounds | LatLngBoundsLiteral;\n  clickable?: boolean;\n  draggable?: boolean;\n  editable?: boolean;\n  fillColor?: string;\n  fillOpacity?: number;\n  map?: GoogleMap;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokePosition?: 'CENTER' | 'INSIDE' | 'OUTSIDE';\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\nexport interface LatLngBounds {\n  contains(latLng: LatLng): boolean;\n  equals(other: LatLngBounds | LatLngBoundsLiteral): boolean;\n  extend(point: LatLng | LatLngLiteral): void;\n  getCenter(): LatLng;\n  getNorthEast(): LatLng;\n  getSouthWest(): LatLng;\n  intersects(other: LatLngBounds | LatLngBoundsLiteral): boolean;\n  isEmpty(): boolean;\n  toJSON(): LatLngBoundsLiteral;\n  toSpan(): LatLng;\n  toString(): string;\n  toUrlValue(precision?: number): string;\n  union(other: LatLngBounds | LatLngBoundsLiteral): LatLngBounds;\n}\n\nexport interface Padding {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n}\n\nexport interface LatLngBoundsLiteral {\n  east: number;\n  north: number;\n  south: number;\n  west: number;\n}\n\nexport interface LatLngLiteral {\n  lat: number;\n  lng: number;\n}\n\nexport interface MouseEvent { latLng: LatLng; }\n\nexport interface MapOptions {\n  center?: LatLng | LatLngLiteral;\n  zoom?: number;\n  minZoom?: number;\n  maxZoom?: number;\n  controlSize?: number;\n  disableDoubleClickZoom?: boolean;\n  disableDefaultUI?: boolean;\n  scrollwheel?: boolean;\n  backgroundColor?: string;\n  draggable?: boolean;\n  draggableCursor?: string;\n  draggingCursor?: string;\n  keyboardShortcuts?: boolean;\n  styles?: MapTypeStyle[];\n  zoomControl?: boolean;\n  zoomControlOptions?: ZoomControlOptions;\n  streetViewControl?: boolean;\n  streetViewControlOptions?: StreetViewControlOptions;\n  scaleControl?: boolean;\n  scaleControlOptions?: ScaleControlOptions;\n  mapTypeControl?: boolean;\n  mapTypeControlOptions?: MapTypeControlOptions;\n  panControl?: boolean;\n  panControlOptions?: PanControlOptions;\n  rotateControl?: boolean;\n  rotateControlOptions?: RotateControlOptions;\n  fullscreenControl?: boolean;\n  fullscreenControlOptions?: FullscreenControlOptions;\n  mapTypeId?: string | MapTypeId;\n  clickableIcons?: boolean;\n  gestureHandling?: 'cooperative' | 'greedy' | 'none' | 'auto';\n  tilt?: number;\n  restriction?: MapRestriction;\n}\n\nexport interface MapTypeStyle {\n  elementType?: 'all' | 'geometry' | 'geometry.fill' | 'geometry.stroke' | 'labels' | 'labels.icon' |\n  'labels.text' | 'labels.text.fill' | 'labels.text.stroke';\n  featureType?: 'administrative' | 'administrative.country' | 'administrative.land_parcel' |\n  'administrative.locality' | 'administrative.neighborhood' | 'administrative.province' | 'all' |\n  'landscape' | 'landscape.man_made' | 'landscape.natural' | 'landscape.natural.landcover' |\n  'landscape.natural.terrain' | 'poi' | 'poi.attraction' | 'poi.business' | 'poi.government' |\n  'poi.medical' | 'poi.park' | 'poi.place_of_worship' | 'poi.school' | 'poi.sports_complex' | 'road' |\n  'road.arterial' | 'road.highway' | 'road.highway.controlled_access' | 'road.local' | 'transit' |\n  'transit.line' | 'transit.station' | 'transit.station.airport' | 'transit.station.bus' |\n  'transit.station.rail' | 'water';\n  stylers: MapTypeStyler[];\n}\n\n/**\n *  If more than one key is specified in a single MapTypeStyler, all but one will be ignored.\n */\nexport interface MapTypeStyler {\n  color?: string;\n  gamma?: number;\n  hue?: string;\n  invert_lightness?: boolean;\n  lightness?: number;\n  saturation?: number;\n  visibility?: string;\n  weight?: number;\n}\n\nexport interface InfoWindow extends MVCObject {\n  close(): void;\n  getContent(): string | Node;\n  getPosition(): LatLng;\n  getZIndex(): number;\n  open(map?: GoogleMap, anchor?: MVCObject): void;\n  setContent(content: string | Node): void;\n  setOptions(options: InfoWindowOptions): void;\n  setPosition(position: LatLng | LatLngLiteral): void;\n  setZIndex(zIndex: number): void;\n}\n\nexport interface MapsEventListener { remove(): void; }\n\nexport interface Size {\n  height: number;\n  width: number;\n  equals(other: Size): boolean;\n  toString(): string;\n}\n\nexport interface InfoWindowOptions {\n  content?: string | Node;\n  disableAutoPan?: boolean;\n  maxWidth?: number;\n  pixelOffset?: Size;\n  position?: LatLng | LatLngLiteral;\n  zIndex?: number;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n  equals(other: Point): boolean;\n  toString(): string;\n}\n\nexport interface GoogleSymbol {\n  anchor?: Point;\n  fillColor?: string;\n  fillOpacity?: number;\n  labelOrigin?: Point;\n  path?: string | SymbolPath;\n  rotation?: number;\n  scale?: number;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n}\n\nexport interface IconSequence {\n  fixedRotation?: boolean;\n  icon?: GoogleSymbol;\n  offset?: string;\n  repeat?: string;\n}\n\nexport enum SymbolPath {\n  BACKWARD_CLOSED_ARROW = 3,\n  BACKWARD_OPEN_ARROW = 4,\n  CIRCLE = 0,\n  FORWARD_CLOSED_ARROW = 1,\n  FORWARD_OPEN_ARROW = 2,\n}\n\nexport interface PolylineOptions {\n  clickable?: boolean;\n  draggable?: boolean;\n  editable?: boolean;\n  geodesic?: boolean;\n  icons?: Array<IconSequence>;\n  map?: GoogleMap;\n  path?: Array<LatLng> | Array<LatLng | LatLngLiteral>;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\nexport interface Polyline extends MVCObject {\n  getDraggable(): boolean;\n  getEditable(): boolean;\n  getMap(): GoogleMap;\n  getPath(): MVCArray<LatLng>;\n  getVisible(): boolean;\n  setDraggable(draggable: boolean): void;\n  setEditable(editable: boolean): void;\n  setMap(map: GoogleMap): void;\n  setOptions(options: PolylineOptions): void;\n  setPath(path: Array<LatLng | LatLngLiteral>): void;\n  setVisible(visible: boolean): void;\n}\n\n/**\n * PolyMouseEvent gets emitted when the user triggers mouse events on a polyline.\n */\nexport interface PolyMouseEvent extends MouseEvent {\n  edge: number;\n  path: number;\n  vertex: number;\n}\n\nexport interface PolygonOptions {\n  clickable?: boolean;\n  draggable?: boolean;\n  editable?: boolean;\n  fillColor?: string;\n  fillOpacity?: number;\n  geodesic?: boolean;\n  icon?: Array<IconSequence>;\n  map?: GoogleMap;\n  paths?: Array<LatLng | LatLngLiteral> | Array<Array<LatLng | LatLngLiteral>>;\n  strokeColor?: string;\n  strokeOpacity?: number;\n  strokeWeight?: number;\n  visible?: boolean;\n  zIndex?: number;\n}\n\nexport interface Polygon extends MVCObject {\n  getDraggable(): boolean;\n  getEditable(): boolean;\n  getMap(): GoogleMap;\n  getPath(): MVCArray<LatLng>;\n  getPaths(): MVCArray<MVCArray<LatLng>>;\n  getVisible(): boolean;\n  setDraggable(draggable: boolean): void;\n  setEditable(editable: boolean): void;\n  setMap(map: GoogleMap): void;\n  setPath(path: Array<LatLng> | Array<LatLng | LatLngLiteral>): void;\n  setOptions(options: PolygonOptions): void;\n  setPaths(paths: Array<Array<LatLng | LatLngLiteral>> | Array<LatLng | LatLngLiteral>): void;\n  setVisible(visible: boolean): void;\n}\n\nexport interface KmlLayer extends MVCObject {\n  getDefaultViewport(): LatLngBounds;\n  getMap(): GoogleMap;\n  getMetadata(): KmlLayerMetadata;\n  getStatus(): KmlLayerStatus;\n  getUrl(): string;\n  getZIndex(): number;\n  setMap(map: GoogleMap): void;\n  setOptions(options: KmlLayerOptions): void;\n  setUrl(url: string): void;\n  setZIndex(zIndex: number): void;\n}\n\n/**\n * See: https://developers.google.com/maps/documentation/javascript/reference?hl=de#KmlLayerStatus\n */\nexport type KmlLayerStatus = 'DOCUMENT_NOT_FOUND' |\n  'DOCUMENT_TOO_LARGE' | 'FETCH_ERROR' | 'INVALID_DOCUMENT' | 'INVALID_REQUEST' |\n  'LIMITS_EXCEEDED' | 'OK' | 'TIMED_OUT' | 'UNKNOWN';\n\n/**\n * See: https://developers.google.com/maps/documentation/javascript/reference?hl=de#KmlLayerMetadata\n */\nexport interface KmlLayerMetadata {\n  author: KmlAuthor;\n  description: string;\n  hasScreenOverlays: boolean;\n  name: string;\n  snippet: string;\n}\n\nexport interface KmlAuthor {\n  email: string;\n  name: string;\n  uri: string;\n}\n\nexport interface KmlLayerOptions {\n  clickable?: boolean;\n  map?: GoogleMap;\n  preserveViewport?: boolean;\n  screenOverlays?: boolean;\n  suppressInfoWindows?: boolean;\n  url?: string;\n  zIndex?: number;\n}\n\nexport interface KmlFeatureData {\n  author: KmlAuthor;\n  description: string;\n  id: string;\n  infoWindowHtml: string;\n  name: string;\n  snippet: string;\n}\n\nexport interface KmlMouseEvent extends MouseEvent {\n  featureData: KmlFeatureData;\n  pixelOffset: Size;\n}\n\nexport interface TransitLayer extends MVCObject {\n  getMap(): GoogleMap;\n  setMap(map: GoogleMap): void;\n}\n\nexport interface TransitLayerOptions {\n  visible: boolean;\n}\n\nexport interface BicyclingLayer extends MVCObject {\n  getMap(): GoogleMap;\n  setMap(map: GoogleMap): void;\n}\n\nexport interface BicyclingLayerOptions {\n  visible: boolean;\n}\n\nexport interface Data extends MVCObject {\n  features: Feature[];\n  addGeoJson(geoJson: Object, options?: GeoJsonOptions): Feature[];\n  remove(feature: Feature): void;\n  setControlPosition(controlPosition: ControlPosition): void;\n  setControls(controls: string[]): void;\n  setDrawingMode(drawingMode: string): void;\n  setMap(map: GoogleMap): void;\n  /* tslint:disable */\n  /*\n  * Tslint configuration check-parameters will prompt errors for these lines of code.\n  * https://palantir.github.io/tslint/rules/no-unused-variable/\n  */\n  setStyle(style: () => void): void;\n  forEach(callback: (feature: Feature) => void): void;\n  loadGeoJson(url: string, options?: GeoJsonOptions, callback?: (feats: Feature[]) => void): void;\n  /* tslint:enable */\n}\n\nexport interface Feature extends MVCObject {\n  id?: number | string | undefined;\n  geometry: Geometry;\n  properties: any;\n}\n\nexport interface DataOptions {\n  controlPosition?: ControlPosition;\n  controls?: string[];\n  drawingMode?: string;\n  featureFactory?: (geometry: Geometry) => Feature;\n  map?: GoogleMap;\n  style?: () => void;\n}\n\nexport interface DataMouseEvent extends MouseEvent {\n  feature: Feature;\n}\n\nexport interface GeoJsonOptions {\n  idPropertyName: string;\n}\n\nexport interface Geometry {\n  type: string;\n}\n\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nexport enum ControlPosition {\n  RIGHT_BOTTOM,\n  TOP_LEFT,\n  TOP_CENTER,\n  TOP_RIGHT,\n  LEFT_CENTER,\n  LEFT_TOP,\n  LEFT_BOTTOM,\n  RIGHT_TOP,\n  RIGHT_CENTER,\n  BOTTOM_RIGHT,\n  BOTTOM_LEFT,\n  BOTTOM_CENTER,\n}\n\nexport enum MapTypeId {\n  /** This map type displays a transparent layer of major streets on satellite images. */\n  HYBRID,\n  /** This map type displays a normal street map. */\n  ROADMAP,\n  /** This map type displays satellite images. */\n  SATELLITE,\n  /** This map type displays maps with physical features such as terrain and vegetation. */\n  TERRAIN,\n}\n\n/***** Controls *****/\n/** Options for the rendering of the map type control. */\nexport interface MapTypeControlOptions {\n  /** IDs of map types to show in the control. */\n  mapTypeIds?: (MapTypeId | string)[];\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is TOP_RIGHT.\n   */\n  position?: ControlPosition;\n  /** Style id. Used to select what style of map type control to display. */\n  style?: MapTypeControlStyle;\n}\n\nexport enum MapTypeControlStyle {\n  DEFAULT = 0,\n  DROPDOWN_MENU = 2,\n  HORIZONTAL_BAR = 1,\n}\n\nexport interface OverviewMapControlOptions {\n  opened?: boolean;\n}\n\n/** Options for the rendering of the pan control. */\nexport interface PanControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is TOP_LEFT.\n   */\n  position?: ControlPosition;\n}\n\n/** Options for the rendering of the rotate control. */\nexport interface RotateControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is TOP_LEFT.\n   */\n  position?: ControlPosition;\n}\n\n/** Options for the rendering of the scale control. */\nexport interface ScaleControlOptions {\n  /** Style id. Used to select what style of scale control to display. */\n  style?: ScaleControlStyle;\n}\n\nexport enum ScaleControlStyle {\n  DEFAULT,\n}\n\n/** Options for the rendering of the Street View pegman control on the map. */\nexport interface StreetViewControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map. The\n   * default position is embedded within the navigation (zoom and pan) controls.\n   * If this position is empty or the same as that specified in the\n   * zoomControlOptions or panControlOptions, the Street View control will be\n   * displayed as part of the navigation controls. Otherwise, it will be displayed\n   * separately.\n   */\n  position?: ControlPosition;\n}\n\n/** Options for the rendering of the zoom control. */\nexport interface ZoomControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is TOP_LEFT.\n   */\n  position?: ControlPosition;\n  style?: ZoomControlStyle;\n}\n\nexport enum ZoomControlStyle {\n  DEFAULT,\n  LARGE,\n  SMALL,\n}\n\n/** Options for the rendering of the fullscreen control. */\nexport interface FullscreenControlOptions {\n  /**\n   * Position id. Used to specify the position of the control on the map.\n   * The default position is RIGHT_TOP.\n   */\n  position?: ControlPosition;\n}\n\n/** Options for the restricting the bounds of the map. */\nexport interface MapRestriction {\n  latLngBounds: LatLngBounds | LatLngBoundsLiteral;\n  strictBounds?: boolean;\n}\n\nexport interface Geocoder {\n  geocode: (request: GeocoderRequest, googleCallback: (results: GeocoderResult[], status: GeocoderStatus) => void) => void;\n}\n\nexport interface GeocoderAddressComponent {\n  long_name: string;\n  short_name: string;\n  types: string[];\n}\n\n/** Options for restricting the geocoder results */\nexport interface GeocoderComponentRestrictions {\n  administrativeArea?: string;\n  country?: string;\n  locality?: string;\n  postalCode?: string;\n  route?: string;\n}\n\nexport interface GeocoderGeometry {\n  bounds: LatLngBounds;\n  location: LatLng;\n  location_type: GeocoderLocationType;\n  viewport: LatLngBounds;\n}\n\nexport enum GeocoderLocationType {\n  APPROXIMATE = 'APPROXIMATE',\n  GEOMETRIC_CENTER = 'GEOMETRIC_CENTER',\n  RANGE_INTERPOLATED = 'RANGE_INTERPOLATED',\n  ROOFTOP = 'ROOFTOP',\n}\n\nexport interface GeocoderRequest {\n  address?: string;\n  bounds?: LatLngBounds | LatLngBoundsLiteral;\n  componentRestrictions?: GeocoderComponentRestrictions;\n  location?: LatLng | LatLngLiteral;\n  placeId?: string;\n  region?: string;\n}\n\nexport interface GeocoderResult {\n  address_components: GeocoderAddressComponent[];\n  formatted_address: string;\n  geometry: GeocoderGeometry;\n  partial_match: boolean;\n  place_id: string;\n  postcode_localities: string[];\n  types: string[];\n}\n\nexport enum GeocoderStatus {\n  ERROR = 'ERROR',\n  INVALID_REQUEST = 'INVALID_REQUEST',\n  OK = 'OK',\n  OVER_QUERY_LIMIT = 'OVER_QUERY_LIMIT',\n  REQUEST_DENIED = 'REQUEST_DENIED',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n  ZERO_RESULTS = 'ZERO_RESULTS',\n}\n","import { Injectable } from '@angular/core';\nimport { bindCallback, ConnectableObservable, Observable, of, ReplaySubject, throwError } from 'rxjs';\nimport { map, multicast, switchMap } from 'rxjs/operators';\nimport { Geocoder, GeocoderRequest, GeocoderResult, GeocoderStatus } from './google-maps-types';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n\ndeclare var google: any;\n\n@Injectable({ providedIn: 'root' })\nexport class AgmGeocoder {\n  protected readonly geocoder$: Observable<Geocoder>;\n\n  constructor(loader: MapsAPILoader) {\n    const connectableGeocoder$ = new Observable(subscriber => {\n      loader.load().then(() => subscriber.next());\n    })\n      .pipe(\n        map(() => this._createGeocoder()),\n        multicast(new ReplaySubject(1)),\n      ) as ConnectableObservable<Geocoder>;\n\n    connectableGeocoder$.connect(); // ignore the subscription\n    // since we will remain subscribed till application exits\n\n    this.geocoder$ = connectableGeocoder$;\n  }\n\n  geocode(request: GeocoderRequest): Observable<GeocoderResult[]> {\n    return this.geocoder$.pipe(\n      switchMap((geocoder) => this._getGoogleResults(geocoder, request))\n    );\n  }\n\n  private _getGoogleResults(geocoder: Geocoder, request: GeocoderRequest): Observable<GeocoderResult[]> {\n    const geocodeObservable = bindCallback(geocoder.geocode);\n    return geocodeObservable(request).pipe(\n      switchMap(([results, status]) => {\n        if (status === GeocoderStatus.OK) {\n          return of(results);\n        }\n\n        return throwError(status);\n      })\n    );\n  }\n\n  private _createGeocoder(): Geocoder {\n    return new google.maps.Geocoder() as Geocoder;\n  }\n}\n","import { Provider } from '@angular/core';\n\nexport class WindowRef {\n  getNativeWindow(): any { return window; }\n}\n\nexport class DocumentRef {\n  getNativeDocument(): any { return document; }\n}\n\nexport const BROWSER_GLOBALS_PROVIDERS: Provider[] = [WindowRef, DocumentRef];\n","import { Inject, Injectable, InjectionToken, LOCALE_ID, Optional } from '@angular/core';\n\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\n\nimport { MapsAPILoader } from './maps-api-loader';\n\nexport enum GoogleMapsScriptProtocol {\n  HTTP = 1,\n  HTTPS = 2,\n  AUTO = 3,\n}\n\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nexport const LAZY_MAPS_API_CONFIG = new InjectionToken<LazyMapsAPILoaderConfigLiteral>('angular-google-maps LAZY_MAPS_API_CONFIG');\n\n/**\n * Configuration for the {@link LazyMapsAPILoader}.\n */\nexport interface LazyMapsAPILoaderConfigLiteral {\n  /**\n   * The Google Maps API Key (see:\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\n   */\n  apiKey?: string;\n\n  /**\n   * The Google Maps client ID (for premium plans).\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\n   * your application with either an API key or a client ID.\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\n   */\n  clientId?: string;\n\n  /**\n   * The Google Maps channel name (for premium plans).\n   * A channel parameter is an optional parameter that allows you to track usage under your client\n   * ID by assigning a distinct channel to each of your applications.\n   */\n  channel?: string;\n\n  /**\n   * Google Maps API version.\n   */\n  apiVersion?: string;\n\n  /**\n   * Host and Path used for the `<script>` tag.\n   */\n  hostAndPath?: string;\n\n  /**\n   * Protocol used for the `<script>` tag.\n   */\n  protocol?: GoogleMapsScriptProtocol;\n\n  /**\n   * Defines which Google Maps libraries should get loaded.\n   */\n  libraries?: string[];\n\n  /**\n   * The default bias for the map behavior is US.\n   * If you wish to alter your application to serve different map tiles or bias the\n   * application, you can overwrite the default behavior (US) by defining a `region`.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\n   */\n  region?: string;\n\n  /**\n   * The Google Maps API uses the browser's preferred language when displaying\n   * textual information. If you wish to overwrite this behavior and force the API\n   * to use a given language, you can use this setting.\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\n   */\n  language?: string;\n}\n\n@Injectable()\nexport class LazyMapsAPILoader extends MapsAPILoader {\n  protected _scriptLoadingPromise: Promise<void>;\n  protected _config: LazyMapsAPILoaderConfigLiteral;\n  protected _windowRef: WindowRef;\n  protected _documentRef: DocumentRef;\n  protected readonly _SCRIPT_ID: string = 'agmGoogleMapsApiScript';\n  protected readonly callbackName: string = `agmLazyMapsAPILoader`;\n\n  constructor(@Optional() @Inject(LAZY_MAPS_API_CONFIG) config: any = null, w: WindowRef, d: DocumentRef,\n   @Inject(LOCALE_ID) private localeId: string) {\n    super();\n    this._config = config || {};\n    this._windowRef = w;\n    this._documentRef = d;\n  }\n\n  load(): Promise<void> {\n    const window = this._windowRef.getNativeWindow() as any;\n    if (window.google && window.google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n\n    if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    }\n\n    // this can happen in HMR situations or Stackblitz.io editors.\n    const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n    if (scriptOnPage) {\n      this._assignScriptLoadingPromise(scriptOnPage);\n      return this._scriptLoadingPromise;\n    }\n\n    const script = this._documentRef.getNativeDocument().createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = this._getScriptSrc(this.callbackName);\n    this._assignScriptLoadingPromise(script);\n    this._documentRef.getNativeDocument().body.appendChild(script);\n    return this._scriptLoadingPromise;\n  }\n\n  private _assignScriptLoadingPromise(scriptElem: HTMLElement) {\n    this._scriptLoadingPromise = new Promise<void>((resolve: Function, reject: Function) => {\n      (this._windowRef.getNativeWindow() as any)[this.callbackName] = () => {\n        resolve();\n      };\n\n      scriptElem.onerror = (error: Event) => {\n        reject(error);\n      };\n    });\n  }\n\n  protected _getScriptSrc(callbackName: string): string {\n    let protocolType: GoogleMapsScriptProtocol =\n        (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n    let protocol: string;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath: string = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams: {[key: string]: string | Array<string>} = {\n      v: this._config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this._config.apiKey,\n      client: this._config.clientId,\n      channel: this._config.channel,\n      libraries: this._config.libraries,\n      region: this._config.region,\n      language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null,\n    };\n    const params: string = Object.keys(queryParams)\n                               .filter((k: string) => queryParams[k] != null)\n                               .filter((k: string) => {\n                                 // remove empty arrays\n                                 return !Array.isArray(queryParams[k]) ||\n                                     (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n                               })\n                               .map((k: string) => {\n                                 // join arrays as comma seperated strings\n                                 let i = queryParams[k];\n                                 if (Array.isArray(i)) {\n                                   return {key: k, value: i.join(',')};\n                                 }\n                                 return {key: k, value: queryParams[k]};\n                               })\n                               .map((entry: {key: string, value: string}) => {\n                                 return `${entry.key}=${entry.value}`;\n                               })\n                               .join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n}\n","import { MapsAPILoader } from './maps-api-loader';\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport class NoOpMapsAPILoader implements MapsAPILoader {\n  load(): Promise<void> {\n    if (!(window as any).google || !(window as any).google.maps) {\n      throw new Error(\n          'Google Maps API not loaded on page. Make sure window.google.maps is available!');\n    }\n    return Promise.resolve();\n  }\n}\n","import { LatLngLiteral } from './services/google-maps-types';\n\n// exported map types\nexport {\n  KmlMouseEvent,\n  DataMouseEvent,\n  LatLngBounds,\n  LatLngBoundsLiteral,\n  LatLng,\n  LatLngLiteral,\n  PolyMouseEvent,\n  MarkerLabel,\n  Geocoder,\n  GeocoderAddressComponent,\n  GeocoderComponentRestrictions,\n  GeocoderGeometry,\n  GeocoderLocationType,\n  GeocoderRequest,\n  GeocoderResult,\n  GeocoderStatus,\n  MapTypeStyle,\n  Padding,\n  ControlPosition,\n  OverviewMapControlOptions,\n  PanControlOptions,\n  RotateControlOptions,\n  MapTypeControlOptions,\n  MapTypeId,\n  ScaleControlOptions,\n  ScaleControlStyle,\n  StreetViewControlOptions,\n  ZoomControlOptions,\n  ZoomControlStyle,\n  FullscreenControlOptions,\n  CircleOptions,\n  Circle,\n  Polyline,\n  PolylineOptions,\n  Polygon,\n  PolygonOptions,\n  Rectangle,\n  RectangleOptions,\n  Marker,\n  MarkerOptions,\n} from './services/google-maps-types';\n\n/**\n * MouseEvent gets emitted when the user triggers mouse events on the map.\n */\nexport interface MouseEvent {\n  coords: LatLngLiteral;\n  placeId?: string;\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { AgmBicyclingLayer } from './directives/bicycling-layer';\nimport { AgmCircle } from './directives/circle';\nimport { AgmDataLayer } from './directives/data-layer';\nimport { AgmFitBounds } from './directives/fit-bounds';\nimport { AgmInfoWindow } from './directives/info-window';\nimport { AgmKmlLayer } from './directives/kml-layer';\nimport { AgmMap } from './directives/map';\nimport { AgmMarker } from './directives/marker';\nimport { AgmPolygon } from './directives/polygon';\nimport { AgmPolyline } from './directives/polyline';\nimport { AgmPolylineIcon } from './directives/polyline-icon';\nimport { AgmPolylinePoint } from './directives/polyline-point';\nimport { AgmRectangle } from './directives/rectangle';\nimport { AgmTransitLayer } from './directives/transit-layer';\n\nimport { LAZY_MAPS_API_CONFIG, LazyMapsAPILoader, LazyMapsAPILoaderConfigLiteral } from './services/maps-api-loader/lazy-maps-api-loader';\nimport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\n\nimport { BROWSER_GLOBALS_PROVIDERS } from './utils/browser-globals';\n\n/**\n * @internal\n */\nexport function coreDirectives() {\n  return [\n    AgmBicyclingLayer,\n    AgmCircle,\n    AgmDataLayer,\n    AgmFitBounds,\n    AgmInfoWindow,\n    AgmKmlLayer,\n    AgmMap,\n    AgmMarker,\n    AgmPolygon,\n    AgmPolyline,\n    AgmPolylineIcon,\n    AgmPolylinePoint,\n    AgmRectangle,\n    AgmTransitLayer,\n  ];\n}\n\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\n@NgModule({declarations: coreDirectives(), exports: coreDirectives()})\nexport class AgmCoreModule {\n  /**\n   * Please use this method when you register the module at the root level.\n   */\n  static forRoot(lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral): ModuleWithProviders {\n    return {\n      ngModule: AgmCoreModule,\n      providers: [\n        ...BROWSER_GLOBALS_PROVIDERS, {provide: MapsAPILoader, useClass: LazyMapsAPILoader},\n        {provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig},\n      ],\n    };\n  }\n}\n","// main modules\nexport * from './directives';\nexport * from './services';\nexport * from './map-types';\n\n// core module\n// we explicitly export the module here to prevent this Ionic 2 bug:\n// http://stevemichelotti.com/integrate-angular-2-google-maps-into-ionic-2/\nexport { AgmCoreModule } from './core.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {coreDirectives as Éµb} from './core.module';\nexport {FitBoundsService as Éµa} from './services/fit-bounds';\nexport {BROWSER_GLOBALS_PROVIDERS as Éµe,DocumentRef as Éµd,WindowRef as Éµc} from './utils/browser-globals';"]},"metadata":{},"sourceType":"module"}